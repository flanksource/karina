// +build !ignore_autogenerated

/*
Copyright 2020 Flanksource.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package types

import (
	"encoding/json"
	"github.com/flanksource/karina/pkg/api/calico"
	"k8s.io/api/core/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWS) DeepCopyInto(out *AWS) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWS.
func (in *AWS) DeepCopy() *AWS {
	if in == nil {
		return nil
	}
	out := new(AWS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertManager) DeepCopyInto(out *AlertManager) {
	*out = *in
	if in.ConfigNamespaces != nil {
		in, out := &in.ConfigNamespaces, &out.ConfigNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertManager.
func (in *AlertManager) DeepCopy() *AlertManager {
	if in == nil {
		return nil
	}
	out := new(AlertManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Antrea) DeepCopyInto(out *Antrea) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Antrea.
func (in *Antrea) DeepCopy() *Antrea {
	if in == nil {
		return nil
	}
	out := new(Antrea)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoRollouts) DeepCopyInto(out *ArgoRollouts) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoRollouts.
func (in *ArgoRollouts) DeepCopy() *ArgoRollouts {
	if in == nil {
		return nil
	}
	out := new(ArgoRollouts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgocdOperator) DeepCopyInto(out *ArgocdOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgocdOperator.
func (in *ArgocdOperator) DeepCopy() *ArgocdOperator {
	if in == nil {
		return nil
	}
	out := new(ArgocdOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditConfig) DeepCopyInto(out *AuditConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditConfig.
func (in *AuditConfig) DeepCopy() *AuditConfig {
	if in == nil {
		return nil
	}
	out := new(AuditConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Auditbeat) DeepCopyInto(out *Auditbeat) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.Kibana != nil {
		in, out := &in.Kibana, &out.Kibana
		*out = new(Connection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Auditbeat.
func (in *Auditbeat) DeepCopy() *Auditbeat {
	if in == nil {
		return nil
	}
	out := new(Auditbeat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Brand) DeepCopyInto(out *Brand) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Brand.
func (in *Brand) DeepCopy() *Brand {
	if in == nil {
		return nil
	}
	out := new(Brand)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CA) DeepCopyInto(out *CA) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CA.
func (in *CA) DeepCopy() *CA {
	if in == nil {
		return nil
	}
	out := new(CA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Calico) DeepCopyInto(out *Calico) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.BGPPeers != nil {
		in, out := &in.BGPPeers, &out.BGPPeers
		*out = make([]calico.BGPPeer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.BGPConfig.DeepCopyInto(&out.BGPConfig)
	if in.IPPools != nil {
		in, out := &in.IPPools, &out.IPPools
		*out = make([]calico.IPPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Calico.
func (in *Calico) DeepCopy() *Calico {
	if in == nil {
		return nil
	}
	out := new(Calico)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryChecker) DeepCopyInto(out *CanaryChecker) {
	*out = *in
	out.XEnabled = in.XEnabled
	if in.AggregateServers != nil {
		in, out := &in.AggregateServers, &out.AggregateServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryChecker.
func (in *CanaryChecker) DeepCopy() *CanaryChecker {
	if in == nil {
		return nil
	}
	out := new(CanaryChecker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertManager) DeepCopyInto(out *CertManager) {
	*out = *in
	if in.Vault != nil {
		in, out := &in.Vault, &out.Vault
		*out = new(VaultClient)
		**out = **in
	}
	if in.Letsencrypt != nil {
		in, out := &in.Letsencrypt, &out.Letsencrypt
		*out = new(LetsencryptIssuer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertManager.
func (in *CertManager) DeepCopy() *CertManager {
	if in == nil {
		return nil
	}
	out := new(CertManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDirective) DeepCopyInto(out *ConfigDirective) {
	*out = *in
	out.SecretPath = in.SecretPath
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDirective.
func (in *ConfigDirective) DeepCopy() *ConfigDirective {
	if in == nil {
		return nil
	}
	out := new(ConfigDirective)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapReloader) DeepCopyInto(out *ConfigMapReloader) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapReloader.
func (in *ConfigMapReloader) DeepCopy() *ConfigMapReloader {
	if in == nil {
		return nil
	}
	out := new(ConfigMapReloader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	in.Password.DeepCopyInto(&out.Password)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Consul) DeepCopyInto(out *Consul) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Consul.
func (in *Consul) DeepCopy() *Consul {
	if in == nil {
		return nil
	}
	out := new(Consul)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DB) DeepCopyInto(out *DB) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DB.
func (in *DB) DeepCopy() *DB {
	if in == nil {
		return nil
	}
	out := new(DB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dashboard) DeepCopyInto(out *Dashboard) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dashboard.
func (in *Dashboard) DeepCopy() *Dashboard {
	if in == nil {
		return nil
	}
	out := new(Dashboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBackupRetention) DeepCopyInto(out *DefaultBackupRetention) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBackupRetention.
func (in *DefaultBackupRetention) DeepCopy() *DefaultBackupRetention {
	if in == nil {
		return nil
	}
	out := new(DefaultBackupRetention)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dex) DeepCopyInto(out *Dex) {
	*out = *in
	out.XDisabled = in.XDisabled
	in.Google.DeepCopyInto(&out.Google)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dex.
func (in *Dex) DeepCopy() *Dex {
	if in == nil {
		return nil
	}
	out := new(Dex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicDNS) DeepCopyInto(out *DynamicDNS) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicDNS.
func (in *DynamicDNS) DeepCopy() *DynamicDNS {
	if in == nil {
		return nil
	}
	out := new(DynamicDNS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ECK) DeepCopyInto(out *ECK) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ECK.
func (in *ECK) DeepCopy() *ECK {
	if in == nil {
		return nil
	}
	out := new(ECK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Elasticsearch) DeepCopyInto(out *Elasticsearch) {
	*out = *in
	if in.Mem != nil {
		in, out := &in.Mem, &out.Mem
		*out = new(Memory)
		**out = **in
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(Persistence)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Elasticsearch.
func (in *Elasticsearch) DeepCopy() *Elasticsearch {
	if in == nil {
		return nil
	}
	out := new(Elasticsearch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfig) DeepCopyInto(out *EncryptionConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfig.
func (in *EncryptionConfig) DeepCopy() *EncryptionConfig {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRouter) DeepCopyInto(out *EventRouter) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRouter.
func (in *EventRouter) DeepCopy() *EventRouter {
	if in == nil {
		return nil
	}
	out := new(EventRouter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ExternalClusters) DeepCopyInto(out *ExternalClusters) {
	{
		in := &in
		*out = make(ExternalClusters, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalClusters.
func (in ExternalClusters) DeepCopy() ExternalClusters {
	if in == nil {
		return nil
	}
	out := new(ExternalClusters)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDNS) DeepCopyInto(out *ExternalDNS) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDNS.
func (in *ExternalDNS) DeepCopy() *ExternalDNS {
	if in == nil {
		return nil
	}
	out := new(ExternalDNS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filebeat) DeepCopyInto(out *Filebeat) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = new(Connection)
		(*in).DeepCopyInto(*out)
	}
	if in.Logstash != nil {
		in, out := &in.Logstash, &out.Logstash
		*out = new(Connection)
		(*in).DeepCopyInto(*out)
	}
	if in.Kibana != nil {
		in, out := &in.Kibana, &out.Kibana
		*out = new(Connection)
		(*in).DeepCopyInto(*out)
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filebeat.
func (in *Filebeat) DeepCopy() *Filebeat {
	if in == nil {
		return nil
	}
	out := new(Filebeat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Flux) DeepCopyInto(out *Flux) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Flux.
func (in *Flux) DeepCopy() *Flux {
	if in == nil {
		return nil
	}
	out := new(Flux)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCP) DeepCopyInto(out *GCP) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCP.
func (in *GCP) DeepCopy() *GCP {
	if in == nil {
		return nil
	}
	out := new(GCP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gatekeeper) DeepCopyInto(out *Gatekeeper) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.WhitelistNamespaces != nil {
		in, out := &in.WhitelistNamespaces, &out.WhitelistNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.E2E = in.E2E
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gatekeeper.
func (in *Gatekeeper) DeepCopy() *Gatekeeper {
	if in == nil {
		return nil
	}
	out := new(Gatekeeper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatekeeperE2E) DeepCopyInto(out *GatekeeperE2E) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatekeeperE2E.
func (in *GatekeeperE2E) DeepCopy() *GatekeeperE2E {
	if in == nil {
		return nil
	}
	out := new(GatekeeperE2E)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitOperator) DeepCopyInto(out *GitOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitOperator.
func (in *GitOperator) DeepCopy() *GitOperator {
	if in == nil {
		return nil
	}
	out := new(GitOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitOps) DeepCopyInto(out *GitOps) {
	*out = *in
	if in.DisableScanning != nil {
		in, out := &in.DisableScanning, &out.DisableScanning
		*out = new(bool)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitOps.
func (in *GitOps) DeepCopy() *GitOps {
	if in == nil {
		return nil
	}
	out := new(GitOps)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleOIDC) DeepCopyInto(out *GoogleOIDC) {
	*out = *in
	if in.HostedDomains != nil {
		in, out := &in.HostedDomains, &out.HostedDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleOIDC.
func (in *GoogleOIDC) DeepCopy() *GoogleOIDC {
	if in == nil {
		return nil
	}
	out := new(GoogleOIDC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Grafana) DeepCopyInto(out *Grafana) {
	*out = *in
	if in.CustomDashboards != nil {
		in, out := &in.CustomDashboards, &out.CustomDashboards
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Grafana.
func (in *Grafana) DeepCopy() *Grafana {
	if in == nil {
		return nil
	}
	out := new(Grafana)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Harbor) DeepCopyInto(out *Harbor) {
	*out = *in
	if in.DB != nil {
		in, out := &in.DB, &out.DB
		*out = new(DB)
		**out = **in
	}
	if in.Projects != nil {
		in, out := &in.Projects, &out.Projects
		*out = make(map[string]HarborProject, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(HarborSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(S3Connection)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Harbor.
func (in *Harbor) DeepCopy() *Harbor {
	if in == nil {
		return nil
	}
	out := new(Harbor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HarborProject) DeepCopyInto(out *HarborProject) {
	*out = *in
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HarborProject.
func (in *HarborProject) DeepCopy() *HarborProject {
	if in == nil {
		return nil
	}
	out := new(HarborProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HarborSettings) DeepCopyInto(out *HarborSettings) {
	*out = *in
	if in.EmailSsl != nil {
		in, out := &in.EmailSsl, &out.EmailSsl
		*out = new(bool)
		**out = **in
	}
	if in.LdapVerifyCert != nil {
		in, out := &in.LdapVerifyCert, &out.LdapVerifyCert
		*out = new(bool)
		**out = **in
	}
	if in.SelfRegistration != nil {
		in, out := &in.SelfRegistration, &out.SelfRegistration
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HarborSettings.
func (in *HarborSettings) DeepCopy() *HarborSettings {
	if in == nil {
		return nil
	}
	out := new(HarborSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (in *Image) DeepCopy() *Image {
	if in == nil {
		return nil
	}
	out := new(Image)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioOperator) DeepCopyInto(out *IstioOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioOperator.
func (in *IstioOperator) DeepCopy() *IstioOperator {
	if in == nil {
		return nil
	}
	out := new(IstioOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Journalbeat) DeepCopyInto(out *Journalbeat) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.Kibana != nil {
		in, out := &in.Kibana, &out.Kibana
		*out = new(Connection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Journalbeat.
func (in *Journalbeat) DeepCopy() *Journalbeat {
	if in == nil {
		return nil
	}
	out := new(Journalbeat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KarinaOperator) DeepCopyInto(out *KarinaOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KarinaOperator.
func (in *KarinaOperator) DeepCopy() *KarinaOperator {
	if in == nil {
		return nil
	}
	out := new(KarinaOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Karma) DeepCopyInto(out *Karma) {
	*out = *in
	if in.AlertManagers != nil {
		in, out := &in.AlertManagers, &out.AlertManagers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Karma.
func (in *Karma) DeepCopy() *Karma {
	if in == nil {
		return nil
	}
	out := new(Karma)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Keptn) DeepCopyInto(out *Keptn) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Keptn.
func (in *Keptn) DeepCopy() *Keptn {
	if in == nil {
		return nil
	}
	out := new(Keptn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kind) DeepCopyInto(out *Kind) {
	*out = *in
	if in.PortMappings != nil {
		in, out := &in.PortMappings, &out.PortMappings
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kind.
func (in *Kind) DeepCopy() *Kind {
	if in == nil {
		return nil
	}
	out := new(Kind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kiosk) DeepCopyInto(out *Kiosk) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kiosk.
func (in *Kiosk) DeepCopy() *Kiosk {
	if in == nil {
		return nil
	}
	out := new(Kiosk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KonfigManager) DeepCopyInto(out *KonfigManager) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KonfigManager.
func (in *KonfigManager) DeepCopy() *KonfigManager {
	if in == nil {
		return nil
	}
	out := new(KonfigManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kpack) DeepCopyInto(out *Kpack) {
	*out = *in
	out.Image = in.Image
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kpack.
func (in *Kpack) DeepCopy() *Kpack {
	if in == nil {
		return nil
	}
	out := new(Kpack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeResourceReport) DeepCopyInto(out *KubeResourceReport) {
	*out = *in
	if in.Costs != nil {
		in, out := &in.Costs, &out.Costs
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExternalClusters != nil {
		in, out := &in.ExternalClusters, &out.ExternalClusters
		*out = make(ExternalClusters, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeResourceReport.
func (in *KubeResourceReport) DeepCopy() *KubeResourceReport {
	if in == nil {
		return nil
	}
	out := new(KubeResourceReport)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeWebView) DeepCopyInto(out *KubeWebView) {
	*out = *in
	if in.ExternalClusters != nil {
		in, out := &in.ExternalClusters, &out.ExternalClusters
		*out = make(ExternalClusters, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeWebView.
func (in *KubeWebView) DeepCopy() *KubeWebView {
	if in == nil {
		return nil
	}
	out := new(KubeWebView)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes) DeepCopyInto(out *Kubernetes) {
	*out = *in
	if in.KubeletExtraArgs != nil {
		in, out := &in.KubeletExtraArgs, &out.KubeletExtraArgs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ControllerExtraArgs != nil {
		in, out := &in.ControllerExtraArgs, &out.ControllerExtraArgs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SchedulerExtraArgs != nil {
		in, out := &in.SchedulerExtraArgs, &out.SchedulerExtraArgs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.APIServerExtraArgs != nil {
		in, out := &in.APIServerExtraArgs, &out.APIServerExtraArgs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EtcdExtraArgs != nil {
		in, out := &in.EtcdExtraArgs, &out.EtcdExtraArgs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.AuditConfig = in.AuditConfig
	out.EncryptionConfig = in.EncryptionConfig
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes.
func (in *Kubernetes) DeepCopy() *Kubernetes {
	if in == nil {
		return nil
	}
	out := new(Kubernetes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ldap) DeepCopyInto(out *Ldap) {
	*out = *in
	if in.UserGroups != nil {
		in, out := &in.UserGroups, &out.UserGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.E2E = in.E2E
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ldap.
func (in *Ldap) DeepCopy() *Ldap {
	if in == nil {
		return nil
	}
	out := new(Ldap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LdapE2E) DeepCopyInto(out *LdapE2E) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LdapE2E.
func (in *LdapE2E) DeepCopy() *LdapE2E {
	if in == nil {
		return nil
	}
	out := new(LdapE2E)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LetsencryptIssuer) DeepCopyInto(out *LetsencryptIssuer) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LetsencryptIssuer.
func (in *LetsencryptIssuer) DeepCopy() *LetsencryptIssuer {
	if in == nil {
		return nil
	}
	out := new(LetsencryptIssuer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerConfig) DeepCopyInto(out *LoadBalancerConfig) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MonitorPort != nil {
		in, out := &in.MonitorPort, &out.MonitorPort
		*out = new(MonitorPort)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerConfig.
func (in *LoadBalancerConfig) DeepCopy() *LoadBalancerConfig {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPath) DeepCopyInto(out *LocalPath) {
	*out = *in
	out.XEnabled = in.XEnabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPath.
func (in *LocalPath) DeepCopy() *LocalPath {
	if in == nil {
		return nil
	}
	out := new(LocalPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsExporter) DeepCopyInto(out *LogsExporter) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsExporter.
func (in *LogsExporter) DeepCopy() *LogsExporter {
	if in == nil {
		return nil
	}
	out := new(LogsExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Memory) DeepCopyInto(out *Memory) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Memory.
func (in *Memory) DeepCopy() *Memory {
	if in == nil {
		return nil
	}
	out := new(Memory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Minio) DeepCopyInto(out *Minio) {
	*out = *in
	out.XDisabled = in.XDisabled
	out.Persistence = in.Persistence
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Minio.
func (in *Minio) DeepCopy() *Minio {
	if in == nil {
		return nil
	}
	out := new(Minio)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbOperator) DeepCopyInto(out *MongodbOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbOperator.
func (in *MongodbOperator) DeepCopy() *MongodbOperator {
	if in == nil {
		return nil
	}
	out := new(MongodbOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPort) DeepCopyInto(out *MonitorPort) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPort.
func (in *MonitorPort) DeepCopy() *MonitorPort {
	if in == nil {
		return nil
	}
	out := new(MonitorPort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Monitoring) DeepCopyInto(out *Monitoring) {
	*out = *in
	out.Prometheus = in.Prometheus
	in.Karma.DeepCopyInto(&out.Karma)
	in.Grafana.DeepCopyInto(&out.Grafana)
	in.AlertManager.DeepCopyInto(&out.AlertManager)
	out.PushGateway = in.PushGateway
	out.E2E = in.E2E
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Monitoring.
func (in *Monitoring) DeepCopy() *Monitoring {
	if in == nil {
		return nil
	}
	out := new(Monitoring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringE2E) DeepCopyInto(out *MonitoringE2E) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringE2E.
func (in *MonitoringE2E) DeepCopy() *MonitoringE2E {
	if in == nil {
		return nil
	}
	out := new(MonitoringE2E)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NFS) DeepCopyInto(out *NFS) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NFS.
func (in *NFS) DeepCopy() *NFS {
	if in == nil {
		return nil
	}
	out := new(NFS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NSX) DeepCopyInto(out *NSX) {
	*out = *in
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.UseStderr != nil {
		in, out := &in.UseStderr, &out.UseStderr
		*out = new(bool)
		**out = **in
	}
	if in.UseSyslog != nil {
		in, out := &in.UseSyslog, &out.UseSyslog
		*out = new(bool)
		**out = **in
	}
	if in.LogRotationFileMaxMb != nil {
		in, out := &in.LogRotationFileMaxMb, &out.LogRotationFileMaxMb
		*out = new(int)
		**out = **in
	}
	if in.LogRotationBackupCount != nil {
		in, out := &in.LogRotationBackupCount, &out.LogRotationBackupCount
		*out = new(int)
		**out = **in
	}
	if in.NsxV3 != nil {
		in, out := &in.NsxV3, &out.NsxV3
		*out = new(NsxV3)
		(*in).DeepCopyInto(*out)
	}
	if in.NsxHA != nil {
		in, out := &in.NsxHA, &out.NsxHA
		*out = new(NsxHA)
		(*in).DeepCopyInto(*out)
	}
	if in.NsxCOE != nil {
		in, out := &in.NsxCOE, &out.NsxCOE
		*out = new(NsxCOE)
		(*in).DeepCopyInto(*out)
	}
	if in.NsxK8s != nil {
		in, out := &in.NsxK8s, &out.NsxK8s
		*out = new(NsxK8s)
		(*in).DeepCopyInto(*out)
	}
	if in.NsxNodeAgent != nil {
		in, out := &in.NsxNodeAgent, &out.NsxNodeAgent
		*out = new(NsxNodeAgent)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NSX.
func (in *NSX) DeepCopy() *NSX {
	if in == nil {
		return nil
	}
	out := new(NSX)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceConfigurator) DeepCopyInto(out *NamespaceConfigurator) {
	*out = *in
	out.XEnabled = in.XEnabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceConfigurator.
func (in *NamespaceConfigurator) DeepCopy() *NamespaceConfigurator {
	if in == nil {
		return nil
	}
	out := new(NamespaceConfigurator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Nginx) DeepCopyInto(out *Nginx) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Nginx.
func (in *Nginx) DeepCopy() *Nginx {
	if in == nil {
		return nil
	}
	out := new(Nginx)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeLocalDNS) DeepCopyInto(out *NodeLocalDNS) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeLocalDNS.
func (in *NodeLocalDNS) DeepCopy() *NodeLocalDNS {
	if in == nil {
		return nil
	}
	out := new(NodeLocalDNS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxCOE) DeepCopyInto(out *NsxCOE) {
	*out = *in
	if in.EnableSnat != nil {
		in, out := &in.EnableSnat, &out.EnableSnat
		*out = new(bool)
		**out = **in
	}
	if in.Profiling != nil {
		in, out := &in.Profiling, &out.Profiling
		*out = new(bool)
		**out = **in
	}
	if in.ConnectRetryTimeout != nil {
		in, out := &in.ConnectRetryTimeout, &out.ConnectRetryTimeout
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxCOE.
func (in *NsxCOE) DeepCopy() *NsxCOE {
	if in == nil {
		return nil
	}
	out := new(NsxCOE)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxHA) DeepCopyInto(out *NsxHA) {
	*out = *in
	if in.MasterTimeout != nil {
		in, out := &in.MasterTimeout, &out.MasterTimeout
		*out = new(int)
		**out = **in
	}
	if in.HeartbeatPeriod != nil {
		in, out := &in.HeartbeatPeriod, &out.HeartbeatPeriod
		*out = new(int)
		**out = **in
	}
	if in.UpdateTimeout != nil {
		in, out := &in.UpdateTimeout, &out.UpdateTimeout
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxHA.
func (in *NsxHA) DeepCopy() *NsxHA {
	if in == nil {
		return nil
	}
	out := new(NsxHA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxK8s) DeepCopyInto(out *NsxK8s) {
	*out = *in
	if in.HTTPIngressPort != nil {
		in, out := &in.HTTPIngressPort, &out.HTTPIngressPort
		*out = new(int)
		**out = **in
	}
	if in.HTTPSIngressPort != nil {
		in, out := &in.HTTPSIngressPort, &out.HTTPSIngressPort
		*out = new(int)
		**out = **in
	}
	if in.ResourceWatcherThreadPoolSize != nil {
		in, out := &in.ResourceWatcherThreadPoolSize, &out.ResourceWatcherThreadPoolSize
		*out = new(int)
		**out = **in
	}
	if in.EnableNsxNetifCrd != nil {
		in, out := &in.EnableNsxNetifCrd, &out.EnableNsxNetifCrd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxK8s.
func (in *NsxK8s) DeepCopy() *NsxK8s {
	if in == nil {
		return nil
	}
	out := new(NsxK8s)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxNodeAgent) DeepCopyInto(out *NsxNodeAgent) {
	*out = *in
	if in.ConfigRetryTimeout != nil {
		in, out := &in.ConfigRetryTimeout, &out.ConfigRetryTimeout
		*out = new(int)
		**out = **in
	}
	if in.ConfigReuseBackoffTime != nil {
		in, out := &in.ConfigReuseBackoffTime, &out.ConfigReuseBackoffTime
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxNodeAgent.
func (in *NsxNodeAgent) DeepCopy() *NsxNodeAgent {
	if in == nil {
		return nil
	}
	out := new(NsxNodeAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxV3) DeepCopyInto(out *NsxV3) {
	*out = *in
	if in.PolicyNSXAPI != nil {
		in, out := &in.PolicyNSXAPI, &out.PolicyNSXAPI
		*out = new(bool)
		**out = **in
	}
	if in.NsxAPIManagers != nil {
		in, out := &in.NsxAPIManagers, &out.NsxAPIManagers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterUnavailableRetry != nil {
		in, out := &in.ClusterUnavailableRetry, &out.ClusterUnavailableRetry
		*out = new(bool)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(int)
		**out = **in
	}
	if in.CaFile != nil {
		in, out := &in.CaFile, &out.CaFile
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.HTTPTimeout != nil {
		in, out := &in.HTTPTimeout, &out.HTTPTimeout
		*out = new(int)
		**out = **in
	}
	if in.HTTPReadTimeout != nil {
		in, out := &in.HTTPReadTimeout, &out.HTTPReadTimeout
		*out = new(int)
		**out = **in
	}
	if in.HTTPRetries != nil {
		in, out := &in.HTTPRetries, &out.HTTPRetries
		*out = new(int)
		**out = **in
	}
	if in.ConcurrentConnections != nil {
		in, out := &in.ConcurrentConnections, &out.ConcurrentConnections
		*out = new(int)
		**out = **in
	}
	if in.ConnIdltTimeout != nil {
		in, out := &in.ConnIdltTimeout, &out.ConnIdltTimeout
		*out = new(int)
		**out = **in
	}
	if in.Redirects != nil {
		in, out := &in.Redirects, &out.Redirects
		*out = new(int)
		**out = **in
	}
	if in.SubnetPrefix != nil {
		in, out := &in.SubnetPrefix, &out.SubnetPrefix
		*out = new(int)
		**out = **in
	}
	if in.LogDroppedTraffic != nil {
		in, out := &in.LogDroppedTraffic, &out.LogDroppedTraffic
		*out = new(bool)
		**out = **in
	}
	if in.UseNativeLoadbalancer != nil {
		in, out := &in.UseNativeLoadbalancer, &out.UseNativeLoadbalancer
		*out = new(bool)
		**out = **in
	}
	if in.L4LBAutoScaling != nil {
		in, out := &in.L4LBAutoScaling, &out.L4LBAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.DefaultIngressClassNsx != nil {
		in, out := &in.DefaultIngressClassNsx, &out.DefaultIngressClassNsx
		*out = new(bool)
		**out = **in
	}
	if in.L7PersistenceTimeout != nil {
		in, out := &in.L7PersistenceTimeout, &out.L7PersistenceTimeout
		*out = new(int)
		**out = **in
	}
	if in.VIFCheckInterval != nil {
		in, out := &in.VIFCheckInterval, &out.VIFCheckInterval
		*out = new(int)
		**out = **in
	}
	if in.ContainerIPBlocks != nil {
		in, out := &in.ContainerIPBlocks, &out.ContainerIPBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NoSNATIPBlocks != nil {
		in, out := &in.NoSNATIPBlocks, &out.NoSNATIPBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExternalIPPools != nil {
		in, out := &in.ExternalIPPools, &out.ExternalIPPools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExternalIPPoolsLB != nil {
		in, out := &in.ExternalIPPoolsLB, &out.ExternalIPPoolsLB
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SnatSecondaryIps != nil {
		in, out := &in.SnatSecondaryIps, &out.SnatSecondaryIps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableNsxErrCrd != nil {
		in, out := &in.EnableNsxErrCrd, &out.EnableNsxErrCrd
		*out = new(bool)
		**out = **in
	}
	if in.MaxAllowedVirtualServers != nil {
		in, out := &in.MaxAllowedVirtualServers, &out.MaxAllowedVirtualServers
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxV3.
func (in *NsxV3) DeepCopy() *NsxV3 {
	if in == nil {
		return nil
	}
	out := new(NsxV3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuth2Proxy) DeepCopyInto(out *OAuth2Proxy) {
	*out = *in
	if in.Redis != nil {
		in, out := &in.Redis, &out.Redis
		*out = new(Redis)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuth2Proxy.
func (in *OAuth2Proxy) DeepCopy() *OAuth2Proxy {
	if in == nil {
		return nil
	}
	out := new(OAuth2Proxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Packetbeat) DeepCopyInto(out *Packetbeat) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = new(Connection)
		(*in).DeepCopyInto(*out)
	}
	if in.Kibana != nil {
		in, out := &in.Kibana, &out.Kibana
		*out = new(Connection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Packetbeat.
func (in *Packetbeat) DeepCopy() *Packetbeat {
	if in == nil {
		return nil
	}
	out := new(Packetbeat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Persistence) DeepCopyInto(out *Persistence) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Persistence.
func (in *Persistence) DeepCopy() *Persistence {
	if in == nil {
		return nil
	}
	out := new(Persistence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformConfig) DeepCopyInto(out *PlatformConfig) {
	*out = *in
	out.AWS = in.AWS
	out.Antrea = in.Antrea
	out.ArgocdOperator = in.ArgocdOperator
	out.ArgoRollouts = in.ArgoRollouts
	in.Auditbeat.DeepCopyInto(&out.Auditbeat)
	out.Brand = in.Brand
	if in.CA != nil {
		in, out := &in.CA, &out.CA
		*out = new(CA)
		**out = **in
	}
	in.Calico.DeepCopyInto(&out.Calico)
	if in.CanaryChecker != nil {
		in, out := &in.CanaryChecker, &out.CanaryChecker
		*out = new(CanaryChecker)
		(*in).DeepCopyInto(*out)
	}
	in.CertManager.DeepCopyInto(&out.CertManager)
	if in.ConfigFrom != nil {
		in, out := &in.ConfigFrom, &out.ConfigFrom
		*out = make([]ConfigDirective, len(*in))
		copy(*out, *in)
	}
	out.ConfigMapReloader = in.ConfigMapReloader
	out.Dashboard = in.Dashboard
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]json.RawMessage, len(*in))
		for key, val := range *in {
			var outVal []byte
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(json.RawMessage, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	in.Dex.DeepCopyInto(&out.Dex)
	out.DNS = in.DNS
	out.ECK = in.ECK
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = new(Elasticsearch)
		(*in).DeepCopyInto(*out)
	}
	out.EventRouter = in.EventRouter
	in.ExternalDNS.DeepCopyInto(&out.ExternalDNS)
	if in.Filebeat != nil {
		in, out := &in.Filebeat, &out.Filebeat
		*out = make([]Filebeat, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.Flux = in.Flux
	out.GCP = in.GCP
	in.Gatekeeper.DeepCopyInto(&out.Gatekeeper)
	out.GitOperator = in.GitOperator
	if in.GitOps != nil {
		in, out := &in.GitOps, &out.GitOps
		*out = make([]GitOps, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Harbor.DeepCopyInto(&out.Harbor)
	if in.ImportConfigs != nil {
		in, out := &in.ImportConfigs, &out.ImportConfigs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ImportSecrets != nil {
		in, out := &in.ImportSecrets, &out.ImportSecrets
		*out = make([]v1.SecretReference, len(*in))
		copy(*out, *in)
	}
	if in.IngressCA != nil {
		in, out := &in.IngressCA, &out.IngressCA
		*out = new(CA)
		**out = **in
	}
	out.IstioOperator = in.IstioOperator
	in.Journalbeat.DeepCopyInto(&out.Journalbeat)
	out.Keptn = in.Keptn
	out.KarinaOperator = in.KarinaOperator
	in.Kind.DeepCopyInto(&out.Kind)
	out.Kiosk = in.Kiosk
	out.KonfigManager = in.KonfigManager
	out.Kpack = in.Kpack
	if in.KubeResourceReport != nil {
		in, out := &in.KubeResourceReport, &out.KubeResourceReport
		*out = new(KubeResourceReport)
		(*in).DeepCopyInto(*out)
	}
	in.Kubernetes.DeepCopyInto(&out.Kubernetes)
	if in.KubeWebView != nil {
		in, out := &in.KubeWebView, &out.KubeWebView
		*out = new(KubeWebView)
		(*in).DeepCopyInto(*out)
	}
	if in.Ldap != nil {
		in, out := &in.Ldap, &out.Ldap
		*out = new(Ldap)
		(*in).DeepCopyInto(*out)
	}
	out.LocalPath = in.LocalPath
	out.LogsExporter = in.LogsExporter
	in.Master.DeepCopyInto(&out.Master)
	out.Minio = in.Minio
	out.MongodbOperator = in.MongodbOperator
	in.Monitoring.DeepCopyInto(&out.Monitoring)
	if in.NamespaceConfigurator != nil {
		in, out := &in.NamespaceConfigurator, &out.NamespaceConfigurator
		*out = new(NamespaceConfigurator)
		**out = **in
	}
	if in.NFS != nil {
		in, out := &in.NFS, &out.NFS
		*out = new(NFS)
		**out = **in
	}
	if in.Nginx != nil {
		in, out := &in.Nginx, &out.Nginx
		*out = new(Nginx)
		(*in).DeepCopyInto(*out)
	}
	out.NodeLocalDNS = in.NodeLocalDNS
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make(map[string]VM, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.NSX != nil {
		in, out := &in.NSX, &out.NSX
		*out = new(NSX)
		(*in).DeepCopyInto(*out)
	}
	if in.OAuth2Proxy != nil {
		in, out := &in.OAuth2Proxy, &out.OAuth2Proxy
		*out = new(OAuth2Proxy)
		(*in).DeepCopyInto(*out)
	}
	in.Packetbeat.DeepCopyInto(&out.Packetbeat)
	if in.Patches != nil {
		in, out := &in.Patches, &out.Patches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.PlatformOperator.DeepCopyInto(&out.PlatformOperator)
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.PostgresOperator = in.PostgresOperator
	if in.Quack != nil {
		in, out := &in.Quack, &out.Quack
		*out = new(Quack)
		**out = **in
	}
	out.RabbitmqOperator = in.RabbitmqOperator
	out.RedisOperator = in.RedisOperator
	if in.RegistryCredentials != nil {
		in, out := &in.RegistryCredentials, &out.RegistryCredentials
		*out = new(RegistryCredentials)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.S3 = in.S3
	if in.S3UploadCleaner != nil {
		in, out := &in.S3UploadCleaner, &out.S3UploadCleaner
		*out = new(S3UploadCleaner)
		**out = **in
	}
	if in.SealedSecrets != nil {
		in, out := &in.SealedSecrets, &out.SealedSecrets
		*out = new(SealedSecrets)
		(*in).DeepCopyInto(*out)
	}
	out.SMTP = in.SMTP
	if in.Specs != nil {
		in, out := &in.Specs, &out.Specs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Tekton.DeepCopyInto(&out.Tekton)
	out.TemplateOperator = in.TemplateOperator
	in.Test.DeepCopyInto(&out.Test)
	in.Thanos.DeepCopyInto(&out.Thanos)
	if in.Vault != nil {
		in, out := &in.Vault, &out.Vault
		*out = new(Vault)
		(*in).DeepCopyInto(*out)
	}
	in.Velero.DeepCopyInto(&out.Velero)
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.VPA = in.VPA
	if in.Vsphere != nil {
		in, out := &in.Vsphere, &out.Vsphere
		*out = new(Vsphere)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformConfig.
func (in *PlatformConfig) DeepCopy() *PlatformConfig {
	if in == nil {
		return nil
	}
	out := new(PlatformConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformOperator) DeepCopyInto(out *PlatformOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.RegistryWhitelist != nil {
		in, out := &in.RegistryWhitelist, &out.RegistryWhitelist
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WhitelistedPodAnnotations != nil {
		in, out := &in.WhitelistedPodAnnotations, &out.WhitelistedPodAnnotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformOperator.
func (in *PlatformOperator) DeepCopy() *PlatformOperator {
	if in == nil {
		return nil
	}
	out := new(PlatformOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresOperator) DeepCopyInto(out *PostgresOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
	out.DefaultBackupRetention = in.DefaultBackupRetention
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresOperator.
func (in *PostgresOperator) DeepCopy() *PostgresOperator {
	if in == nil {
		return nil
	}
	out := new(PostgresOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Prometheus) DeepCopyInto(out *Prometheus) {
	*out = *in
	out.Persistence = in.Persistence
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Prometheus.
func (in *Prometheus) DeepCopy() *Prometheus {
	if in == nil {
		return nil
	}
	out := new(Prometheus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PushGateway) DeepCopyInto(out *PushGateway) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PushGateway.
func (in *PushGateway) DeepCopy() *PushGateway {
	if in == nil {
		return nil
	}
	out := new(PushGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Quack) DeepCopyInto(out *Quack) {
	*out = *in
	out.XEnabled = in.XEnabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Quack.
func (in *Quack) DeepCopy() *Quack {
	if in == nil {
		return nil
	}
	out := new(Quack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqOperator) DeepCopyInto(out *RabbitmqOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqOperator.
func (in *RabbitmqOperator) DeepCopy() *RabbitmqOperator {
	if in == nil {
		return nil
	}
	out := new(RabbitmqOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redis) DeepCopyInto(out *Redis) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redis.
func (in *Redis) DeepCopy() *Redis {
	if in == nil {
		return nil
	}
	out := new(Redis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisOperator) DeepCopyInto(out *RedisOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisOperator.
func (in *RedisOperator) DeepCopy() *RedisOperator {
	if in == nil {
		return nil
	}
	out := new(RedisOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryCredentials) DeepCopyInto(out *RegistryCredentials) {
	*out = *in
	out.Aws = in.Aws
	out.DockerPrivateRegistry = in.DockerPrivateRegistry
	out.GCR = in.GCR
	out.ACR = in.ACR
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryCredentials.
func (in *RegistryCredentials) DeepCopy() *RegistryCredentials {
	if in == nil {
		return nil
	}
	out := new(RegistryCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryCredentialsACR) DeepCopyInto(out *RegistryCredentialsACR) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryCredentialsACR.
func (in *RegistryCredentialsACR) DeepCopy() *RegistryCredentialsACR {
	if in == nil {
		return nil
	}
	out := new(RegistryCredentialsACR)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryCredentialsDPR) DeepCopyInto(out *RegistryCredentialsDPR) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryCredentialsDPR.
func (in *RegistryCredentialsDPR) DeepCopy() *RegistryCredentialsDPR {
	if in == nil {
		return nil
	}
	out := new(RegistryCredentialsDPR)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryCredentialsECR) DeepCopyInto(out *RegistryCredentialsECR) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryCredentialsECR.
func (in *RegistryCredentialsECR) DeepCopy() *RegistryCredentialsECR {
	if in == nil {
		return nil
	}
	out := new(RegistryCredentialsECR)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryCredentialsGCR) DeepCopyInto(out *RegistryCredentialsGCR) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryCredentialsGCR.
func (in *RegistryCredentialsGCR) DeepCopy() *RegistryCredentialsGCR {
	if in == nil {
		return nil
	}
	out := new(RegistryCredentialsGCR)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3) DeepCopyInto(out *S3) {
	*out = *in
	out.S3Connection = in.S3Connection
	out.E2E = in.E2E
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3.
func (in *S3) DeepCopy() *S3 {
	if in == nil {
		return nil
	}
	out := new(S3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Connection) DeepCopyInto(out *S3Connection) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Connection.
func (in *S3Connection) DeepCopy() *S3Connection {
	if in == nil {
		return nil
	}
	out := new(S3Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3E2E) DeepCopyInto(out *S3E2E) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3E2E.
func (in *S3E2E) DeepCopy() *S3E2E {
	if in == nil {
		return nil
	}
	out := new(S3E2E)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3UploadCleaner) DeepCopyInto(out *S3UploadCleaner) {
	*out = *in
	out.XEnabled = in.XEnabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3UploadCleaner.
func (in *S3UploadCleaner) DeepCopy() *S3UploadCleaner {
	if in == nil {
		return nil
	}
	out := new(S3UploadCleaner)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMTP) DeepCopyInto(out *SMTP) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMTP.
func (in *SMTP) DeepCopy() *SMTP {
	if in == nil {
		return nil
	}
	out := new(SMTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SealedSecrets) DeepCopyInto(out *SealedSecrets) {
	*out = *in
	out.XEnabled = in.XEnabled
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(CA)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SealedSecrets.
func (in *SealedSecrets) DeepCopy() *SealedSecrets {
	if in == nil {
		return nil
	}
	out := new(SealedSecrets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tekton) DeepCopyInto(out *Tekton) {
	*out = *in
	out.XDisabled = in.XDisabled
	out.Persistence = in.Persistence
	if in.FeatureFlags != nil {
		in, out := &in.FeatureFlags, &out.FeatureFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tekton.
func (in *Tekton) DeepCopy() *Tekton {
	if in == nil {
		return nil
	}
	out := new(Tekton)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateOperator) DeepCopyInto(out *TemplateOperator) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateOperator.
func (in *TemplateOperator) DeepCopy() *TemplateOperator {
	if in == nil {
		return nil
	}
	out := new(TemplateOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Test) DeepCopyInto(out *Test) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Test.
func (in *Test) DeepCopy() *Test {
	if in == nil {
		return nil
	}
	out := new(Test)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Thanos) DeepCopyInto(out *Thanos) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.ClientSidecars != nil {
		in, out := &in.ClientSidecars, &out.ClientSidecars
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.E2E = in.E2E
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Thanos.
func (in *Thanos) DeepCopy() *Thanos {
	if in == nil {
		return nil
	}
	out := new(Thanos)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThanosE2E) DeepCopyInto(out *ThanosE2E) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThanosE2E.
func (in *ThanosE2E) DeepCopy() *ThanosE2E {
	if in == nil {
		return nil
	}
	out := new(ThanosE2E)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPA) DeepCopyInto(out *VPA) {
	*out = *in
	out.XDisabled = in.XDisabled
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPA.
func (in *VPA) DeepCopy() *VPA {
	if in == nil {
		return nil
	}
	out := new(VPA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vault) DeepCopyInto(out *Vault) {
	*out = *in
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make(map[string]VaultPolicy, len(*in))
		for key, val := range *in {
			var outVal map[string]VaultPolicyPath
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(VaultPolicy, len(*in))
				for key, val := range *in {
					(*out)[key] = *val.DeepCopy()
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.GroupMappings != nil {
		in, out := &in.GroupMappings, &out.GroupMappings
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	out.Consul = in.Consul
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vault.
func (in *Vault) DeepCopy() *Vault {
	if in == nil {
		return nil
	}
	out := new(Vault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultClient) DeepCopyInto(out *VaultClient) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultClient.
func (in *VaultClient) DeepCopy() *VaultClient {
	if in == nil {
		return nil
	}
	out := new(VaultClient)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in VaultPolicy) DeepCopyInto(out *VaultPolicy) {
	{
		in := &in
		*out = make(VaultPolicy, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultPolicy.
func (in VaultPolicy) DeepCopy() VaultPolicy {
	if in == nil {
		return nil
	}
	out := new(VaultPolicy)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultPolicyPath) DeepCopyInto(out *VaultPolicyPath) {
	*out = *in
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DeniedParameters != nil {
		in, out := &in.DeniedParameters, &out.DeniedParameters
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedParameters != nil {
		in, out := &in.AllowedParameters, &out.AllowedParameters
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultPolicyPath.
func (in *VaultPolicyPath) DeepCopy() *VaultPolicyPath {
	if in == nil {
		return nil
	}
	out := new(VaultPolicyPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Velero) DeepCopyInto(out *Velero) {
	*out = *in
	out.XDisabled = in.XDisabled
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Velero.
func (in *Velero) DeepCopy() *Velero {
	if in == nil {
		return nil
	}
	out := new(Velero)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vsphere) DeepCopyInto(out *Vsphere) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vsphere.
func (in *Vsphere) DeepCopy() *Vsphere {
	if in == nil {
		return nil
	}
	out := new(Vsphere)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XDisabled) DeepCopyInto(out *XDisabled) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XDisabled.
func (in *XDisabled) DeepCopy() *XDisabled {
	if in == nil {
		return nil
	}
	out := new(XDisabled)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XEnabled) DeepCopyInto(out *XEnabled) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XEnabled.
func (in *XEnabled) DeepCopy() *XEnabled {
	if in == nil {
		return nil
	}
	out := new(XEnabled)
	in.DeepCopyInto(out)
	return out
}
