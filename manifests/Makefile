TARGET_CRD_FILES := $(patsubst upstream/%/crd,crd/%.yaml,$(wildcard upstream/**/crd))
TARGET_MANIFEST_FILES := $(patsubst upstream/%/base,%.yaml,$(wildcard upstream/**/base))

bin: bin/kustomize bin/yq bin/helm
build: build-crds build-base
build-crds: $(TARGET_CRD_FILES)
build-base: $(TARGET_MANIFEST_FILES)

define BUILD_HELM_CHART
	@if [ -d "upstream/$*/helm" ]; then \
		echo "Generate templates for helm chart defined in upstream/$*/helm..." && \
		cd upstream/$*/helm && \
		$(HELM) template $$($(YQ) r chart.yaml chart_name) --values values.yaml --output-dir ./generated_templates -n $$($(YQ) r chart.yaml namespace) --version $$($(YQ) r chart.yaml version) --repo=$$($(YQ) r chart.yaml repo) --include-crds && \
		generated_yaml_files=$$(find generated_templates -iname '*.yaml') && \
		echo $$generated_yaml_files | xargs -n1 -I % $(YQ) d -d'*' -i % '**."app.kubernetes.io/managed-by"' && \
		echo $$generated_yaml_files | xargs -n1 -I % $(YQ) d -d'*' -i % '**."app.kubernetes.io/instance"' && \
		echo $$generated_yaml_files | xargs -n1 -I % $(YQ) d -d'*' -i % '**."helm.sh/chart"'; \
	fi
endef

define BUILD_CRD
	@if [ -d "upstream/$*/crd" ]; then \
		echo "Generating $@..." && \
		out=$$($(KUSTOMIZE) build --load-restrictor LoadRestrictionsNone upstream/$*/crd) && \
		printf "# This file was generated by running 'make $@' in manifests directory\n%s" "$$out" > $@; \
	fi
endef

define BUILD_BASE
	@if [ -d "upstream/$*/base" ]; then \
		echo "Generating $@..." && \
		out=$$($(KUSTOMIZE) build --load-restrictor LoadRestrictionsNone upstream/$*/base) && \
		printf "# This file was generated by running 'make $@' in manifests directory\n%s" "$$out" > $@; \
	fi
endef


.SECONDEXPANSION:
crd/%.yaml: $$(wildcard upstream/$$*/crd/*) $$(wildcard upstream/$$*/helm/*.yaml) bin/kustomize
	$(BUILD_HELM_CHART)
	$(BUILD_CRD)

.SECONDEXPANSION:
%.yaml: $$(wildcard upstream/$$*/base/*) $$(wildcard upstream/$$*/helm/*.yaml) bin/kustomize
	$(BUILD_HELM_CHART)
	$(BUILD_BASE)

.PHONY: build build-upstream-helm-charts build-crds build-base

OS   = $(shell uname -s | tr '[:upper:]' '[:lower:]')
ARCH = $(shell uname -m | sed 's/x86_64/amd64/')

bin/kustomize:
	@mkdir -p bin
	@curl -sSLo - https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v4.0.3/kustomize_v4.0.3_$(OS)_$(ARCH).tar.gz | tar xzf - -C bin/ && chmod +x bin/kustomize

bin/yq:
	@mkdir -p bin
	@curl -sSLo bin/yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_$(OS)_$(ARCH) && chmod +x bin/yq

bin/helm:
	@mkdir -p bin
	@curl -sSLo - https://get.helm.sh/helm-v3.5.2-$(OS)-$(ARCH).tar.gz | tar xzf - -C bin/ --strip-components=1 && chmod +x bin/helm

KUSTOMIZE = $(realpath ./bin/kustomize)
YQ = $(realpath ./bin/yq)
HELM = $(realpath ./bin/helm)
