---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: reloader
  name: reloader-role
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - deployments
      - daemonsets
    verbs:
      - list
      - get
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: reloader
  name: reloader-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: reloader-role
subjects:
  - kind: ServiceAccount
    name: reloader
    namespace: platform-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: reloader
  name: reloader
  namespace: platform-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: reloader
  name: reloader
  namespace: platform-system
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: reloader
  template:
    metadata:
      labels:
        app: reloader
    spec:
      containers:
        - env: []
          image: "stakater/reloader:{{.configmapReloader.version}}"
          imagePullPolicy: IfNotPresent
          name: reloader
          args:
            - --configmap-annotation=reload/configmap
            - --secret-annotation=reload/secret
            - --auto-annotation=reload/all
      serviceAccountName: reloader
