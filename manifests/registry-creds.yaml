apiVersion: v1
kind: ServiceAccount
metadata:
  name: registry-creds
  namespace: {{ .registryCredentials.namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-creds
  namespace: {{ .registryCredentials.namespace }}
  annotations:
    reload/all: "true" #restart on cm/secret change
spec:
  replicas: 1
  selector:
    matchLabels:
      name: registry-creds
  template:
    metadata:
      labels:
        name: registry-creds
    spec:
      serviceAccount: registry-creds
      containers:
        - image: flanksource/registry-creds:{{ .registryCredentials.version }}
          name: registry-creds
          imagePullPolicy: Always
          env:
            {{ if .registryCredentials.aws.enabled }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: registry-creds-ecr
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: registry-creds-ecr
                  key: AWS_SECRET_ACCESS_KEY
            - name: awsaccount
              valueFrom:
                secretKeyRef:
                  name: registry-creds-ecr
                  key: aws-account
            - name: awsregion
              valueFrom:
                secretKeyRef:
                  name: registry-creds-ecr
                  key: aws-region
            - name: aws_assume_role
              valueFrom:
                secretKeyRef:
                  name: registry-creds-ecr
                  key: aws-assume-role
            {{ end }}
            {{ if .registryCredentials.dockerRegistry.enabled }}
            - name: DOCKER_PRIVATE_REGISTRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: registry-creds-dpr
                  key: DOCKER_PRIVATE_REGISTRY_PASSWORD
            - name: DOCKER_PRIVATE_REGISTRY_SERVER
              valueFrom:
                secretKeyRef:
                  name: registry-creds-dpr
                  key: DOCKER_PRIVATE_REGISTRY_SERVER
            - name: DOCKER_PRIVATE_REGISTRY_USER
              valueFrom:
                secretKeyRef:
                  name: registry-creds-dpr
                  key: DOCKER_PRIVATE_REGISTRY_USER
            {{ end }}
            {{ if .registryCredentials.azure.enabled }}
            - name: ACR_URL
              valueFrom:
                secretKeyRef:
                  name: registry-creds-acr
                  key: ACR_URL
            - name: ACR_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: registry-creds-acr
                  key: ACR_CLIENT_ID
            - name: ACR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: registry-creds-acr
                  key: ACR_PASSWORD
            {{ end }}
      {{ if .registryCredentials.gcr.enabled }}
          volumeMounts:
            - name: gcr-creds
              mountPath: "/root/.config/gcloud"
              readOnly: true
      volumes:
        - name: gcr-creds
          secret:
            secretName: registry-creds-gcr
      {{ end }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: registry-creds
  namespace: {{ .registryCredentials.namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: registry-creds
  namespace: {{ .registryCredentials.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: registry-creds
subjects:
  - kind: ServiceAccount
    name: registry-creds
    namespace: {{ .registryCredentials.namespace }}
