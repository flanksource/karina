apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventrouter
  namespace: platform-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: eventrouter
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: eventrouter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eventrouter
subjects:
  - kind: ServiceAccount
    name: eventrouter
    namespace: platform-system
---
apiVersion: v1
data:
  config.json: |-
    {
      "sink": "glog"
    }
kind: ConfigMap
metadata:
  name: eventrouter-cm
  namespace: platform-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventrouter
  namespace: platform-system
  labels:
    app: eventrouter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventrouter
  template:
    metadata:
      labels:
        app: eventrouter
        tier: control-plane-addons
      annotations:
        com.flanksource.infra.logs/processors.1.dissect.tokenizer: "%{log_level} %{date}       1 glogsink.go:42] %{json}"
        com.flanksource.infra.logs/processors.2.decode_json_fields.fields: dissect.json
        com.flanksource.infra.logs/processors.2.decode_json_fields.target: ""
    spec:
      containers:
        - name: kube-eventrouter
          image: gcr.io/heptio-images/eventrouter:{{ .eventrouter.version | default "none"}}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              mountPath: /etc/eventrouter
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 256Mi
      serviceAccount: eventrouter
      volumes:
        - name: config-volume
          configMap:
            name: eventrouter-cm
