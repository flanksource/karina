apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiosk
  namespace: platform-system
  labels:
    app: kiosk
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiosk-edit
rules:
  - apiGroups: ["tenancy.kiosk.sh"]
    resources: ["spaces"]
    verbs: ["create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiosk-namespace-delete
  labels:
    rbac.kiosk.sh/aggregate-to-space-admin: "true"
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiosk-space-admin
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
    - matchLabels:
        rbac.kiosk.sh/aggregate-to-space-admin: "true"
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kiosk
  labels:
    app: kiosk
subjects:
  - kind: ServiceAccount
    name: kiosk
    namespace: platform-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: kiosk-apiservice
  namespace: platform-system
  labels:
    app: kiosk
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: kiosk

---
apiVersion: v1
kind: Service
metadata:
  name: kiosk
  namespace: platform-system
  labels:
    app: kiosk
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9443
      protocol: TCP
      name: http
  selector:
    app: kiosk

---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: kiosk
  namespace: platform-system
spec:
  secretName: kiosk-tls
  dnsNames:
    - kiosk
    - kiosk.platform-system.svc
  issuerRef:
    name: default-issuer
    kind: ClusterIssuer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiosk
  namespace: platform-system
  labels:
    app: kiosk
spec:
  selector:
    matchLabels:
      app: kiosk
  replicas: 3
  template:
    metadata:
      labels:
        app: kiosk
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: kiosk
      volumes:
        - name: certs
          secret:
            secretName: kiosk-tls
      containers:
        - command:
            - "/kiosk"
          args:
          image: "docker.io/kiosksh/kiosk:{{ .kiosk.version }}"
          name: kiosk
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.tenancy.kiosk.sh
spec:
  version: v1alpha1
  versionPriority: 1000
  group: tenancy.kiosk.sh
  groupPriorityMinimum: 10000
  service:
    name: kiosk-apiservice
    namespace: platform-system
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: kiosk
  annotations:
    cert-manager.io/inject-apiserver-ca: "true"
    cert-manager.io/inject-ca-from-secret: platform-system/kiosk-tls
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: kiosk
        namespace: platform-system
        path: /quota
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: accountquota.kiosk.sh
    namespaceSelector:
      matchExpressions:
        - key: kiosk.sh/account
          operator: Exists
    objectSelector: {}
    rules:
      - apiGroups:
          - "*"
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*"
        scope: Namespaced
    timeoutSeconds: 30
    sideEffects: None
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: kiosk
        namespace: platform-system
        path: /validate
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: config.kiosk.sh
    namespaceSelector: {}
    objectSelector: {}
    sideEffects: None
    rules:
      - apiGroups:
          - config.kiosk.sh
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*"
        scope: "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kiosk-creator
subjects:
  - kind: Group
    name: system:authenticated
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: kiosk-edit
  apiGroup: rbac.authorization.k8s.io
