apiVersion: v1
data:
  .gitignore: |
    server.crt
    server.key
  README.txt: |
    JSON templates are stored in this directory, the postgres-operator
    will read these templates and use them for creating various Kube kinds
  affinity.json: |2
                "nodeAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [{
                    "weight": 10,
                    "preference": {
                    "matchExpressions": [{
                        "key": "{{.NodeLabelKey}}",
                        "operator": "{{.OperatorValue}}",
                        "values": [
                            "{{.NodeLabelValue}}"
                        ]
                    }]
                    }
                }]
                }
  backrest-job.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgo-backrest": "true",
                        "pgo-backrest-job": "true",
                        "backrest-command": "{{.Command}}",
                        "pg-cluster": "{{.ClusterName}}"
                    }
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgo-backrest": "true",
                        "pgo-backrest-job": "true",
                        "backrest-command": "{{.Command}}",
                        "pg-cluster": "{{.ClusterName}}"
                    }
                },
                "spec": {
                    "volumes": [
                        {{.PgbackrestRestoreVolumes}}
                    ],
                    {{.SecurityContext}}
                    "serviceAccountName": "pgo-backrest",
                    "containers": [{
                        "name": "backrest",
                        "image": "{{.PGOImagePrefix}}/pgo-backrest:{{.PGOImageTag}}",
                        "volumeMounts": [
                            {{.PgbackrestRestoreVolumeMounts}}
                        ],
                        "env": [{
                            "name": "COMMAND",
                            "value": "{{.Command}}"
                        }, {
                            "name": "COMMAND_OPTS",
                            "value": "{{.CommandOpts}}"
                        }, {
                            "name": "PITR_TARGET",
                            "value": "{{.PITRTarget}}"
                        }, {
                            "name": "PODNAME",
                            "value": "{{.PodName}}"
                        }, {
                            "name": "PGBACKREST_STANZA",
                            "value": "{{.PgbackrestStanza}}"
                        }, {
                            "name": "PGBACKREST_DB_PATH",
                            "value": "{{.PgbackrestDBPath}}"
                        }, {
                            "name": "PGBACKREST_REPO_PATH",
                            "value": "{{.PgbackrestRepoPath}}"
                        }, {
                            "name": "PGBACKREST_REPO_TYPE",
                            "value": "{{.PgbackrestRepoType}}"
                        }, {
                            "name": "PGHA_PGBACKREST_LOCAL_S3_STORAGE",
                            "value": "{{.BackrestLocalAndS3Storage}}"
                        }, {
                            "name": "PGBACKREST_LOG_PATH",
                            "value": "/tmp"
                        }, {
                            "name": "NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }]
                    }],
                    "restartPolicy": "Never"
                }
            }
        }
    }
  backrest-restore-job.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgo-backrest-restore": "true",
                        "pg-cluster": "{{.ClusterName}}",
                        "backrest-restore-to-pvc": "{{.ToClusterPVCName}}",
                        "workflowid": "{{.WorkflowID}}"
                    }
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgo-backrest-restore": "true",
                        "backrest-restore-to-pvc": "{{.ToClusterPVCName}}",
                        "pg-cluster": "{{.ClusterName}}",
                        "service-name": "{{.ClusterName}}"
                    }
                },
                "spec": {
                    "volumes": [
                      {
                        "name": "pgdata",
                        "persistentVolumeClaim": {
                            "claimName": "{{.ToClusterPVCName}}"
                        }
                      },
                      {
                        "name": "sshd",
                        "secret": {
                            "secretName": "{{.ClusterName}}-backrest-repo-config",
                            "defaultMode": 511
                        }
                      }
                    ],
                    {{.SecurityContext}}
                    "serviceAccountName": "pgo-backrest",
                    "containers": [{
                        "name": "backrest",
                        "image": "{{.PGOImagePrefix}}/pgo-backrest-restore:{{.PGOImageTag}}",
                        "volumeMounts": [
                          {
                            "mountPath": "/pgdata",
                            "name": "pgdata",
                            "readOnly": false
                          },
                          {
                            "mountPath": "/sshd",
                            "name": "sshd",
                            "readOnly": true
                          }
                        ],
                        "env": [{
                          {{.PgbackrestS3EnvVars}}
                            "name": "COMMAND_OPTS",
                            "value": "{{.CommandOpts}}"
                        },
                        {
                            "name": "PITR_TARGET",
                            "value": "{{.PITRTarget}}"
                        },
                        {
                            "name": "PGBACKREST_STANZA",
                            "value": "{{.PgbackrestStanza}}"
                        }, {
                            "name": "PGBACKREST_DB_PATH",
                            "value": "{{.PgbackrestDBPath}}"
                        }, {
                            "name": "PGBACKREST_REPO1_PATH",
                            "value": "{{.PgbackrestRepo1Path}}"
                        }, {
                            "name": "PGBACKREST_REPO1_HOST",
                            "value": "{{.PgbackrestRepo1Host}}"
                        }, {
                            "name": "PGBACKREST_REPO_TYPE",
                            "value": "{{.PgbackrestRepoType}}"
                        }, {
                            "name": "PGBACKREST_LOG_PATH",
                            "value": "/tmp"
                        }, {
                            "name": "NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }]
                    }],
                    "affinity": {
                      {{.NodeSelector}}
                    },
                    "restartPolicy": "Never"
                }
            }
        }
    }
  backup-job.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
            "name": "{{.JobName}}",
            "labels": {
                "vendor": "crunchydata",
                "pgbackup": "true",
                "pg-cluster": "{{.Name}}"
            }
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgbackup": "true",
                        "pg-cluster": "{{.Name}}"
                    }
                },
                "spec": {
                    "volumes": [{
                        "name": "pgdata",
                        {{.PvcName}}
                    }],

            {{.SecurityContext}}

                    "serviceAccountName": "pgo-default",
                    "containers": [{
                        "name": "backup",
                        "image": "{{.CCPImagePrefix}}/crunchy-backup:{{.CCPImageTag}}",
                        "volumeMounts": [{
                            "mountPath": "/pgdata",
                            "name": "pgdata",
                            "readOnly": false
                        }],
                        {{.ContainerResources }}
                        "env": [{
                            "name": "BACKUP_HOST",
                            "value": "{{.BackupHost}}"
                        }, {
                            "name": "BACKUP_OPTS",
                            "value": "{{.BackupOpts}}"
                        }, {
                            "name": "BACKUP_USER",
                            "valueFrom": {
                                "secretKeyRef": {
                                    "name": "{{.BackupUserSecret}}",
                                    "key": "username"
                                }
                            }
                        }, {
                            "name": "BACKUP_PASS",
                            "valueFrom": {
                                "secretKeyRef": {
                                    "name": "{{.BackupUserSecret}}",
                                    "key": "password"
                                }
                            }
                        }, {
                            "name": "BACKUP_PORT",
                            "value": "{{.BackupPort}}"
                        }]
                    }],
                    "restartPolicy": "Never"
                }
            }
        }
    }
  cluster-deployment.json: |
    {
        "kind": "Deployment",
        "apiVersion": "apps/v1",
        "metadata": {
            "name": "{{.Name}}",
            "labels": {
                "vendor": "crunchydata",
                "pgo-pg-database": "true",
                {{.DeploymentLabels }}
            }
        },
        "spec": {
            "replicas": {{.Replicas}},
            "selector": {
            "matchLabels": {
                "vendor": "crunchydata",
                {{.DeploymentLabels }}
            }
            },
            "template": {
                "metadata": {
                    "labels": {
                        "name": "{{.Name}}",
                        "vendor": "crunchydata",
                        "pgo-pg-database": "true",
                        {{.PodLabels }}
                    }
                },
                "spec": {

                    {{.SecurityContext }}
                    "serviceAccountName": "pgo-pg",
                    "containers": [
                {
                        "name": "database",
                        "image": "{{.CCPImagePrefix}}/{{.CCPImage}}:{{.CCPImageTag}}",
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/cpm/bin/pgha-readiness.sh"
                                ]
                            },
                            "initialDelaySeconds": 15
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/cpm/bin/pgha-liveness.sh"
                                ]
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 15,
                            "timeoutSeconds": 10
                        },

                {{.ContainerResources }}

                        "env": [{
                            "name": "PGHA_PG_PORT",
                            "value": "{{.Port}}"
                        }, {
                            "name": "PGHA_USER",
                            "value": "postgres"
                        },
                        {{if .IsInit}}
                        {
                            "name": "PGHA_INIT",
                            "valueFrom": {
                                "configMapKeyRef": {
                                   "name": "{{.ClusterName}}-pgha-default-config",
                                   "key": "init"
                                }
                             }
                        },
                        {{ end }}
                        {
                            "name": "PATRONI_POSTGRESQL_DATA_DIR",
                            "value": "/pgdata/{{.Name}}"
                        }, {
                {{.PgmonitorEnvVars}}
                {{.PgbackrestEnvVars}}
                {{.PgbackrestS3EnvVars}}
                            "name": "PGHA_DATABASE",
                            "value": "{{.Database}}"
                        }, {
                            "name": "PGHA_CRUNCHYADM",
                            "value": "true"
                        }, {
                            "name": "PGHA_REPLICA_REINIT_ON_START_FAIL",
                            "value": "{{.ReplicaReinitOnStartFail}}"
                        },  {
                            "name": "PGHA_SYNC_REPLICATION",
                            "value": "{{.SyncReplication}}"
                        },  {
                            "name": "PATRONI_KUBERNETES_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        },  {
                            "name": "PATRONI_KUBERNETES_SCOPE_LABEL",
                            "value": "{{.ScopeLabel}}"
                        },  {
                            "name": "PATRONI_SCOPE",
                            "valueFrom": {
                                "fieldRef": {
                                    "fieldPath": "metadata.labels['{{.ScopeLabel}}']"
                                }
                            }
                        }, {
                            "name": "PATRONI_KUBERNETES_LABELS",
                            "value": "{vendor: \"crunchydata\"}"
                        }, {
                            "name": "PATRONI_LOG_LEVEL",
                            "value": "INFO"
                        }, {
                            "name": "PGHOST",
                            "value": "/tmp"
                        }],


                        "volumeMounts": [{
                                "mountPath": "/pgdata",
                                "name": "pgdata",
                                "readOnly": false
                            }, {
                                "mountPath": "/backrestrepo",
                                "name": "backrestrepo"
                            }, {
                                "mountPath": "/pgconf/pguser",
                                "name": "user-volume"
                            }, {
                                "mountPath": "/pgconf/pgreplicator",
                                "name": "primary-volume"
                            }, {
                                "mountPath": "/pgconf/pgsuper",
                                "name": "root-volume"
                            }, {
                                "mountPath": "/pgwal",
                                "name": "pgwal-volume"
                            }, {
                                "mountPath": "/sshd",
                                "name": "sshd",
                                "readOnly": true
                            }, {
                                "mountPath": "/pgconf",
                                "name": "pgconf-volume"
                            }, {
                                "mountPath": "/recover",
                                "name": "recover-volume"
                            }, {
                                "mountPath": "/crunchyadm",
                                "name": "crunchyadm"
                            }
                        ],

                        "ports": [{
                            "containerPort": 5432,
                            "protocol": "TCP"
                        }, {
                            "containerPort": 8009,
                            "protocol": "TCP"
                        }],
                        "resources": {},
                        "imagePullPolicy": "IfNotPresent"
                    }{{if .EnableCrunchyadm}},
                    {
                        "name": "crunchyadm",
                        "image": "{{.CCPImagePrefix}}/crunchy-admin:{{.CCPImageTag}}",
                        "securityContext": {
                            "runAsUser": 17
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/cpm/bin/crunchyadm-readiness.sh"
                                ]
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10
                        },
                        "env": [
                            {
                                "name": "PGHOST",
                                "value": "/crunchyadm"
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "/crunchyadm",
                                "name": "crunchyadm"
                            }
                        ],
                        "imagePullPolicy": "IfNotPresent"
                    }{{ end }}

                    {{.CollectAddon }}

                    {{.BadgerAddon }}

                    ],
                    "volumes": [{
                            "name": "pgdata",
                            {{.PVCName}}
                        }, {
                            "name": "user-volume",
                            "secret": {
                                "secretName": "{{.UserSecretName}}"
                            }
                        }, {
                            "name": "primary-volume",
                            "secret": {
                                "secretName": "{{.PrimarySecretName}}"
                            }
                        }, {
                            "name": "collect-volume",
                            {{.CollectVolume}}
                        }, {
                            "name": "sshd",
                            "secret": {
                                "secretName": "{{.ClusterName}}-backrest-repo-config",
                                "defaultMode": 511
                            }
                        }, {
                            "name": "root-volume",
                            "secret": {
                                "secretName": "{{.RootSecretName}}"
                            }
                        }, {
                            "name": "pgwal-volume",
                            "emptyDir": { "medium": "Memory" }
                        }, {
                            "name": "recover-volume",
                            "emptyDir": { "medium": "Memory" }
                        }, {
                            "name": "report",
                            "emptyDir": { "medium": "Memory" }
                        }, {
                            "name": "backrestrepo",
                            "emptyDir": { "medium": "Memory" }
                        }, {
                            "name": "crunchyadm",
                            "emptyDir": {}
                        }, {
                            "name": "pgconf-volume",
                            "projected": {
                                "sources": [
                                    {{if .ConfVolume}}
                                    {
                                        "configMap": {
                                            "name": {{.ConfVolume}}
                                        }
                                    },
                                    {{end}}
                                    {
                                        "configMap": {
                                            "name": "{{.ClusterName}}-pgha-default-config",
                                            "optional": true
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "affinity": {
            {{.NodeSelector}}
            {{if and .NodeSelector .PodAntiAffinity}},{{end}}
            {{.PodAntiAffinity}}
                    },
                    "restartPolicy": "Always",
                    "dnsPolicy": "ClusterFirst"
                }
            },
            "strategy": {
                "type": "RollingUpdate",
                "rollingUpdate": {
                    "maxUnavailable": 1,
                    "maxSurge": 1
                }
            }
        }
    }
  cluster-service.json: |
    {
        "kind": "Service",
        "apiVersion": "v1",
        "metadata": {
            "name": "{{.Name}}",
            "labels": {
                "vendor": "crunchydata",
                "pg-cluster": "{{.ClusterName}}",
                "name": "{{.Name}}"
            }
        },
        "spec": {
            "ports": [
        {
             "name": "postgres",
                "protocol": "TCP",
                "port": {{.Port}},
                "targetPort": {{.Port}},
                "nodePort": 0
            }, {
        "name": "pgbadger",
        "protocol": "TCP",
        "port": {{.PGBadgerPort}},
        "targetPort": {{.PGBadgerPort}},
        "nodePort": 0
        }, {
        "name": "sshd",
        "protocol": "TCP",
        "port": 2022,
        "targetPort": 2022,
        "nodePort": 0
        }, {
        "name": "postgres-exporter",
        "protocol": "TCP",
        "port": {{.ExporterPort}},
        "targetPort": {{.ExporterPort}},
        "nodePort": 0
        }, {
        "name": "patroni",
        "protocol": "TCP",
        "port": 8009,
        "targetPort": 8009,
        "nodePort": 0
        }
        ],
            "selector": {
                {{ if or (eq .Name .ClusterName) (eq .Name (printf "%s%s" .ClusterName "-replica")) }}
                "pg-cluster": "{{.ClusterName}}",
                {{ if eq .Name (printf "%s%s" .ClusterName "-replica") }}
                "role": "replica"
                {{else}}
                "role": "master"
                {{end}}
                {{else}}
                "service-name": "{{.ServiceName}}"
                {{end}}
            },
            "type": "{{.ServiceType}}",
            "sessionAffinity": "None"
        }
    }
  collect.json: |
    ,{
        "name": "collect",
        "image": "{{.CCPImagePrefix}}/crunchy-collect:{{.CCPImageTag}}",
        "ports": [{
            "containerPort": {{.ExporterPort}},
            "protocol": "TCP"
        }],
        "env": [
            {
                "name": "COLLECT_PG_HOST",
                "value": "127.0.0.1"
            },
            {
                "name": "COLLECT_PG_PORT",
                "value": "{{.PgPort}}"
            },
            {
                "name": "COLLECT_PG_DATABASE",
                "value": "postgres"
            },
            {
                "name": "COLLECT_PG_PARAMS",
                "value": "sslmode=disable"
            },
            {
                "name": "JOB_NAME",
                "value": "{{.JobName}}"
            },
            {
                "name": "POSTGRES_EXPORTER_PORT",
                "value": "{{.ExporterPort}}"
            }
        ],
        "volumeMounts": [
            {
                "mountPath": "/collect-pguser",
                "name": "collect-volume"
            }
        ]
    }
  container-resources.json: |2
                "resources": {
                    "requests": {
                        "memory": "{{.RequestsMemory}}",
                        "cpu": "{{.RequestsCPU}}"
                    },
                    "limits": {
                        "memory": "{{.LimitsMemory}}",
                        "cpu": "{{.LimitsCPU}}"
                    }
                },
  pgbackrest-env-vars.json: |2
                            "name": "PGBACKREST_STANZA",
                            "value": "{{.PgbackrestStanza}}"
                        }, {
                            "name": "PGBACKREST_REPO1_HOST",
                            "value": "{{.PgbackrestRepo1Host}}"
                        }, {
                            "name": "BACKREST_SKIP_CREATE_STANZA",
                            "value": "true"
                        }, {
                            "name": "PGHA_PGBACKREST",
                            "value": "true"
                        }, {
                            "name": "PGBACKREST_REPO1_PATH",
                            "value": "{{.PgbackrestRepo1Path}}"
                        }, {
                            "name": "PGBACKREST_DB_PATH",
                            "value": "{{.PgbackrestDBPath}}"
                        }, {
                            "name": "ENABLE_SSHD",
                            "value": "true"
                        }, {
                            "name": "PGBACKREST_LOG_PATH",
                            "value": "/tmp"
                        }, {
                            "name": "PGBACKREST_PG1_SOCKET_PATH",
                            "value": "/tmp"
                        }, {
                            "name": "PGBACKREST_PG1_PORT",
                            "value": "{{.PgbackrestPGPort}}"
                        }, {
                            "name": "PGBACKREST_REPO_TYPE",
                            "value": "{{.PgbackrestRepo1Type}}"
                        }, {
                            "name": "PGHA_PGBACKREST_LOCAL_S3_STORAGE",
                            "value": "{{.PgbackrestLocalAndS3Storage}}"
                        }, {
  pgbackrest-s3-env-vars.json: |2-
                        "name": "PGBACKREST_REPO1_S3_BUCKET",
                        "value": "{{.PgbackrestS3Bucket}}"
                        }, {
                        "name": "PGBACKREST_REPO1_S3_ENDPOINT",
                        "value": "{{.PgbackrestS3Endpoint}}"
                        }, {
                        "name": "PGBACKREST_REPO1_S3_REGION",
                        "value": "{{.PgbackrestS3Region}}"
                        }, {
                        "name": "PGBACKREST_REPO1_S3_KEY",
                        "value": "{{.PgbackrestS3Key}}"
                        }, {
                        "name": "PGBACKREST_REPO1_S3_KEY_SECRET",
                        "value": "{{.PgbackrestS3KeySecret}}"
                        }, {
                        "name": "PGBACKREST_REPO1_S3_CA_FILE",
                        "value": "/sshd/aws-s3-ca.crt"
                        }, {
                        "name": "PGBACKREST_REPO1_HOST_CMD",
                        "value": "/usr/local/bin/archive-push-s3.sh"
                        }, {
  pgbadger.json: |2
                ,{
                    "name": "pgbadger",
                    "image": "{{.CCPImagePrefix}}/crunchy-pgbadger:{{.CCPImageTag}}",
                    "ports": [ {
                            "containerPort": {{.PGBadgerPort}},
                            "protocol": "TCP"
                        }
                    ],
                    "readinessProbe": {
                        "tcpSocket": {
                            "port": {{.PGBadgerPort}}
                        },
                        "initialDelaySeconds": 20,
                        "periodSeconds": 10
                    },
                    {{.ContainerResources }}
                    "env": [ {
                        "name": "BADGER_TARGET",
                        "value": "{{.BadgerTarget}}"
                    }, {
                        "name": "PGBADGER_SERVICE_PORT",
                        "value": "{{.PGBadgerPort}}"
                    } ],
                    "volumeMounts": [
                        {
                            "mountPath": "/pgdata",
                            "name": "pgdata",
                            "readOnly": true
                        },
                        {
                            "mountPath": "/report",
                            "name": "report",
                            "readOnly": false
                        }
                    ]
                }
  pgbasebackup-restore-job.json: |
    {
        "apiVersion":"batch/v1",
        "kind":"Job",
        "metadata":{
            "name":"{{.JobName}}",
            "labels":{
                "vendor":"crunchydata",
                "pgo-pgbasebackup-restore":"true",
                "pgbasebackup-restore-to-pvc": "{{.ToClusterPVCName}}",
                "pg-cluster":"{{.ClusterName}}",
                "pg-task": "{{.TaskName}}",
                "workflowid":"{{.WorkflowID}}"
            }
        },
        "spec":{
            "backoffLimit":0,
            "template":{
                "metadata":{
                    "name":"{{.JobName}}",
                    "labels":{
                        "vendor":"crunchydata",
                        "pgo-pgbasebackup-restore":"true",
                        "pg-cluster":"{{.ClusterName}}",
                        "pg-task": "{{.TaskName}}"
                    }
                },
                "spec":{
                    {{.SecurityContext}}
                    "serviceAccountName": "pgo-default",
                    "containers":[
                        {
                            "name":"pgbasebackup-restore",
                            "image":"{{.CCPImagePrefix}}/crunchy-pgbasebackup-restore:{{.CCPImageTag}}",
                            "env":[
                                {
                                    "name":"BACKUP_PATH",
                                    "value":"{{.BackupPath}}"
                                },
                                {
                                    "name":"PGDATA_PATH",
                                    "value":"{{.PgdataPath}}"
                                }
                            ],
                            "volumeMounts":[
                                {
                                    "mountPath":"/pgdata",
                                    "name":"pgdata"
                                },
                                {
                                    "mountPath":"/backup",
                                    "name":"backup"
                                }
                            ]
                        }
                    ],
                    "volumes":[
                        {
                            "name":"pgdata",
                            "persistentVolumeClaim":{
                                "claimName":"{{.ToClusterPVCName}}"
                            }
                        },
                        {
                            "name":"backup",
                            "persistentVolumeClaim":{
                                "claimName":"{{.BackupPVCName}}"
                            }
                        }
                    ],
            {{.NodeSelector}}
                    "restartPolicy":"Never"
                }
            }
        }
    }
  pgbench-job.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
            "name": "{{.JobName}}",
            "labels": {
                "name": "{{.JobName}}",
                "vendor": "crunchydata",
                "pgo-benchmark": "true",
                "pg-cluster": "{{.ClusterName}}",
                "created": "{{.Created}}",
                "workflowName": "{{.WorkflowName}}"
            }
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgo-benchmark": "true",
                        "pg-cluster": "{{.ClusterName}}",
                        "created": "{{.Created}}",
                        "workflowName": "{{.WorkflowName}}"
                    }
                },
                "spec": {
                    "serviceAccountName": "pgo-default",
                    "containers": [
                        {
                            "name": "pgbench",
                            "image": "{{.CCPImagePrefix}}/crunchy-pgbench:{{.CCPImageTag}}",
                            "env": [
                                {
                                    "name": "PG_DATABASE",
                                    "value": "{{.PGDatabase}}"
                                },
                                {
                                    "name": "PG_HOSTNAME",
                                    "value": "{{.PGHost}}"
                                },
                                {
                                    "name": "PG_PORT",
                                    "value": "{{.PGPort}}"
                                },
                                {
                                    "name": "PG_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PGUserSecret}}",
                                            "key": "password"
                                        }
                                    }
                                },
                                {
                                    "name": "PG_USERNAME",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PGUserSecret}}",
                                            "key": "username"
                                        }
                                    }
                                },
                                {
                                    "name": "PGBENCH_BENCHMARK_OPTS",
                                    "value": "{{.PGBenchOpts}}"
                                },
                                {
                                    "name": "PGBENCH_INIT_OPTS",
                                    "value": "{{.PGBenchInitOpts}}"
                                },
                                {
                                    "name": "PGBENCH_CLIENTS",
                                    "value": "{{.PGBenchClients}}"
                                },
                                {
                                    "name": "PGBENCH_JOBS",
                                    "value": "{{.PGBenchJobs}}"
                                },
                                {
                                    "name": "PGBENCH_SCALE",
                                    "value": "{{.PGBenchScale}}"
                                },
                                {
                                    "name": "PGBENCH_TRANSACTIONS",
                                    "value": "{{.PGBenchTransactions}}"
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "/pgconf",
                                    "name": "pgconf-volume"
                                }
                            ]
                        }
                    ],
                    "volumes": [
                        {
                            "name": "pgconf-volume",
                            {{.PGBenchConfigMap}}
                        }
                    ],
                    "restartPolicy": "Never"
                }
            }
        }
    }
  pgbouncer-template.json: |
    {
        "kind": "Deployment",
        "apiVersion": "apps/v1",
        "metadata": {
            "name": "{{.Name}}",
            "labels": {
                "name": "{{.Name}}",
                "crunchy-pgbouncer": "true",
                "pg-cluster": "{{.ClusterName}}",
                "service-name": "{{.Name}}",
                "vendor": "crunchydata"
            }
        },
        "spec": {
            "replicas": 1,
            "selector": {
                "matchLabels": {
                    "name": "{{.Name}}",
                    "crunchy-pgbouncer": "true",
                    "pg-cluster": "{{.ClusterName}}",
                    "service-name": "{{.Name}}",
                    "{{.PodAntiAffinityLabelName}}": "{{.PodAntiAffinityLabelValue}}",
                    "vendor": "crunchydata"
                }
            },
            "template": {
                "metadata": {
                    "labels": {
                        "name": "{{.Name}}",
                        "crunchy-pgbouncer": "true",
                        "pg-cluster": "{{.ClusterName}}",
                        "service-name": "{{.Name}}",
                        "{{.PodAntiAffinityLabelName}}": "{{.PodAntiAffinityLabelValue}}",
                        "vendor": "crunchydata"
                    }
                },
                "spec": {
                    "serviceAccountName": "pgo-default",
                    "containers": [{
                        "name": "pgbouncer",
                        "image": "{{.CCPImagePrefix}}/crunchy-pgbouncer:{{.CCPImageTag}}",
                        "ports": [{
                            "containerPort": {{.Port}},
                            "protocol": "TCP"
                        }],
                        {{.ContainerResources }}
                        "env": [{
                            "name": "PG_USERNAME",
                            "valueFrom": {
                                "secretKeyRef": {
                                    "name": "{{.PGBouncerSecret}}",
                                    "key": "username"
                                }
                            }
                        }, {
                            "name": "PG_PASSWORD",
                            "valueFrom": {
                                "secretKeyRef": {
                                    "name": "{{.PGBouncerSecret}}",
                                    "key": "password"
                                }
                            }
                        }, {
                            "name": "PG_PRIMARY_SERVICE_NAME",
                            "value": "{{.PrimaryServiceName}}"
                        }, {
                            "name": "PG_REPLICA_SERVICE_NAME",
                            "value": "{{.ReplicaServiceName}}"
                        }],
                        "volumeMounts": [{
                            "name": "pgbouncer-conf",
                            "mountPath": "/pgconf/",
                            "readOnly": false
                        }]
                    }],
                    "volumes": [{
                    "name": "pgbouncer-conf",
                    "secret": {
                        "secretName": "{{.PGBouncerSecret}}",
                        "defaultMode": 511
                        }
                    }],
                    "affinity": {
            {{.PodAntiAffinity}}
                    },
                    "restartPolicy": "Always",
                    "dnsPolicy": "ClusterFirst"
                }
            },
            "strategy": {
                "type": "RollingUpdate",
                "rollingUpdate": {
                    "maxUnavailable": 1,
                    "maxSurge": 1
                }
            }
        }
    }
  pgbouncer.ini: |
    [databases]
    * = host={{.PG_PRIMARY_SERVICE_NAME}} port={{.PG_PORT}} auth_user={{.PG_USERNAME}}

    [pgbouncer]
    listen_port = 5432
    listen_addr = *
    auth_type = md5
    auth_file = /pgconf/users.txt
    auth_query = SELECT username, password from pgbouncer.get_auth($1)
    pidfile = /tmp/pgbouncer.pid
    logfile = /dev/stdout
    admin_users = {{.PG_USERNAME}}
    stats_users = {{.PG_USERNAME}}
    default_pool_size = 20
    max_client_conn = 100
    max_db_connections = 0
    min_pool_size = 0
    pool_mode = session
    reserve_pool_size = 0
    reserve_pool_timeout = 5
    query_timeout = 0
    ignore_startup_parameters = extra_float_digits
  pgbouncer_hba.conf: |
    host    all         all         0.0.0.0/0          md5
  pgdump-job.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
            "name": "{{.JobName}}",
            "labels": {
                    "vendor": "crunchydata",
                    "pgdump": "true",
                    "pg-cluster": "{{.ClusterName}}",
                    "pg-task": "{{.TaskName}}"
            }
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor":"crunchydata",
                        "pgdump":"true",
                        "pg-cluster":"{{.ClusterName}}"
                    }
                },
                "spec": {
                    "volumes": [
                        {
                            "name": "pgdata",
                            "persistentVolumeClaim": {
                                "claimName": "{{.PgDumpPVC}}"
                            }
                        }
                    ],

                    {{.SecurityContext}}

                    "serviceAccountName": "pgo-default",
                    "containers": [{
                            "name": "pgdump",
                            "image": "{{.CCPImagePrefix}}/crunchy-pgdump:{{.CCPImageTag}}",
                            "volumeMounts": [
                                {
                                    "mountPath": "/pgdata",
                                    "name": "pgdata",
                                    "readOnly": false
                                }
                            ],
                            {{.ContainerResources}}
                            "env": [
                                {
                                    "name": "PGDUMP_HOST",
                                    "value": "{{.PgDumpHost}}"
                                },
                                {
                                    "name": "PGDUMP_USER",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PgDumpUserSecret}}",
                                            "key": "username"
                                        }
                                    }
                                },
                                {
                                    "name": "PGDUMP_PASS",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PgDumpUserSecret}}",
                                            "key": "password"
                                        }
                                    }
                                },
                                {
                                    "name": "PGDUMP_DB",
                                    "value": "{{.PgDumpDB}}"
                                },
                                {
                                    "name": "PGDUMP_PORT",
                                    "value": "{{.PgDumpPort}}"
                                },
                                {
                                    "name": "PGDUMP_CUSTOM_OPTS",
                                    "value": "{{.PgDumpOpts}}"
                                },
                                {
                                    "name": "PGDUMP_FILENAME",
                                    "value": "{{.PgDumpFilename}}"
                                },
                                {
                                    "name": "PGDUMP_ALL",
                                    "value": "{{.PgDumpAll}}"
                                }
                            ]
                        }
                    ],
                    "restartPolicy": "Never"
                }
            }
        }
    }
  pgmonitor-env-vars.json: |2
                            "name": "PGMONITOR_PASSWORD",
                            "value": "{{.PgmonitorPassword}}"
                        }, {
  pgo-backrest-repo-service-template.json: |
    {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "{{.Name}}",
                "labels": {
                    "vendor": "crunchydata",
                    "name": "{{.Name}}",
                    "pgo-backrest-repo": "true",
                    "pg-cluster": "{{.ClusterName}}"
                }
            },
            "spec": {
                "ports": [{
                    "protocol": "TCP",
                    "port": {{.Port}},
                    "targetPort": {{.Port}},
                    "nodePort": 0
                }],
                "selector": {
                    "name": "{{.Name}}"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            }
    }
  pgo-backrest-repo-template.json: |
    {
        "kind": "Deployment",
        "apiVersion": "apps/v1",
        "metadata": {
            "name": "{{.Name}}",
            "labels": {
                "name": "{{.Name}}",
                "pg-cluster": "{{.ClusterName}}",
                "service-name": "{{.Name}}",
                "vendor": "crunchydata",
                "pgo-backrest-repo": "true"
            }
        },
        "spec": {
            "replicas": 1,
            "selector": {
                "matchLabels": {
                        "name": "{{.Name}}",
                        "pg-cluster": "{{.ClusterName}}",
                        "service-name": "{{.Name}}",
                        "vendor": "crunchydata",
                        "{{.PodAntiAffinityLabelName}}": "{{.PodAntiAffinityLabelValue}}",
                        "pgo-backrest-repo": "true"
                }
            },
            "template": {
                "metadata": {
                    "labels": {
                        "name": "{{.Name}}",
                        "pg-cluster": "{{.ClusterName}}",
                        "service-name": "{{.Name}}",
                        "vendor": "crunchydata",
                        "{{.PodAntiAffinityLabelName}}": "{{.PodAntiAffinityLabelValue}}",
                        "pgo-backrest-repo": "true"
                    }
                },
                "spec": {
                    {{.SecurityContext}}
                    "serviceAccountName": "pgo-default",
                    "containers": [{
                        "name": "database",
                        "image": "{{.PGOImagePrefix}}/pgo-backrest-repo:{{.PGOImageTag}}",
                        "ports": [{
                            "containerPort": {{.SshdPort}},
                            "protocol": "TCP"
                        }],
                        {{.ContainerResources }}
                        "env": [{
                {{.PgbackrestS3EnvVars}}
                            "name": "PGBACKREST_STANZA",
                            "value": "{{.PgbackrestStanza}}"
                        }, {
                            "name": "SSHD_PORT",
                            "value": "{{.SshdPort}}"
                        }, {
                            "name": "PGBACKREST_DB_PATH",
                            "value": "{{.PgbackrestDBPath}}"
                        }, {
                            "name": "PGBACKREST_REPO_PATH",
                            "value": "{{.PgbackrestRepoPath}}"
                        }, {
                            "name": "PGBACKREST_PG1_PORT",
                            "value": "{{.PgbackrestPGPort}}"
                        }, {
                            "name": "PGBACKREST_LOG_PATH",
                            "value": "/tmp"
                        }, {
                            "name": "PGBACKREST_PG1_SOCKET_PATH",
                            "value": "/tmp"
                        }, {
                            "name": "PGBACKREST_DB_HOST",
                            "value": "{{.PGbackrestDBHost}}"
                        }],
                        "volumeMounts": [{
                            "name": "sshd",
                            "mountPath": "/sshd",
                            "readOnly": true
                        }, {
                            "name": "backrestrepo",
                            "mountPath": "/backrestrepo",
                            "readOnly": false
                        }]
                    }],
                    "volumes": [{
                        "name": "sshd",
                        "secret": {
                            "secretName": "{{.ClusterName}}-backrest-repo-config",
                            "defaultMode": 511
                        }
                    }, {
                        "name": "backrestrepo",
                        "persistentVolumeClaim": {
                            "claimName": "{{.BackrestRepoClaimName}}"
                        }
                    }],
                    "affinity": {
            {{.PodAntiAffinity}}
                    },
                    "restartPolicy": "Always",
                    "dnsPolicy": "ClusterFirst"
                }
            },
            "strategy": {
                "type": "RollingUpdate",
                "rollingUpdate": {
                    "maxUnavailable": 1,
                    "maxSurge": 1
                }
            }
        }
    }
  pgo-backrest-role-binding.json: |
    {
        "apiVersion": "rbac.authorization.k8s.io/v1",
        "kind": "RoleBinding",
        "metadata": {
            "name": "pgo-backrest-role-binding",
            "namespace": "{{.TargetNamespace}}"
        },
        "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "pgo-backrest-role"
        },
        "subjects": [
            {
                "kind": "ServiceAccount",
                "name": "pgo-backrest",
                "namespace": "{{.TargetNamespace}}"
            }
        ]
    }
  pgo-backrest-role.json: |
    {
        "apiVersion": "rbac.authorization.k8s.io/v1",
        "kind": "Role",
        "metadata": {
            "name": "pgo-backrest-role",
            "namespace": "{{.TargetNamespace}}"
        },
        "rules": [
            {
                "apiGroups": [
                    ""
                ],
                "resources": [
                    "pods"
                ],
                "verbs": [
                    "get",
                    "list"
                ]
            },
            {
                "apiGroups": [
                    ""
                ],
                "resources": [
                    "pods/exec"
                ],
                "verbs": [
                    "create"
                ]
            }
        ]
    }
  pgo-backrest-sa.json: |
    {
        "apiVersion": "v1",
        "kind": "ServiceAccount",
        "metadata": {
            "name": "pgo-backrest",
            "namespace": "{{.TargetNamespace}}"
        }
    }
  pgo-default-sa.json: |
    {
        "apiVersion": "v1",
        "kind": "ServiceAccount",
        "metadata": {
            "name": "pgo-default",
            "namespace": "{{.TargetNamespace}}"
        },
        "automountServiceAccountToken": false
    }
  pgo-pg-role-binding.json: |-
    {
       "apiVersion":"rbac.authorization.k8s.io/v1",
       "kind":"RoleBinding",
       "metadata":{
          "name":"pgo-pg-role-binding",
          "namespace":"{{.TargetNamespace}}",
          "labels":{
             "vendor":"crunchydata"
          }
       },
       "roleRef":{
          "apiGroup":"rbac.authorization.k8s.io",
          "kind":"Role",
          "name":"pgo-pg-role"
       },
       "subjects":[
          {
             "kind":"ServiceAccount",
             "name":"pgo-pg"
          }
       ]
    }
  pgo-pg-role.json: |-
    {
       "apiVersion":"rbac.authorization.k8s.io/v1",
       "kind":"Role",
       "metadata":{
          "name":"pgo-pg-role",
          "namespace":"{{.TargetNamespace}}",
          "labels":{
             "vendor":"crunchydata"
          }
       },
       "rules":[
          {
             "apiGroups":[
                ""
             ],
             "resources":[
                "configmaps"
             ],
             "verbs":[
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch",
                "delete",
                "deletecollection"
             ]
          },
          {
             "apiGroups":[
                ""
             ],
             "resources":[
                "pods"
             ],
             "verbs":[
                "get",
                "list",
                "patch",
                "update",
                "watch"
             ]
          }
       ]
    }
  pgo-pg-sa.json: |-
    {
       "apiVersion":"v1",
       "kind":"ServiceAccount",
       "metadata":{
          "name":"pgo-pg",
          "namespace":"{{.TargetNamespace}}",
          "labels":{
             "vendor":"crunchydata"
          }
       }
    }
  pgo-target-role-binding.json: |
    {
        "apiVersion": "rbac.authorization.k8s.io/v1",
        "kind": "RoleBinding",
        "metadata": {
            "name": "pgo-target-role-binding",
            "namespace": "{{.TargetNamespace}}"
        },
        "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "pgo-target-role"
        },
        "subjects": [
            {
                "kind": "ServiceAccount",
                "name": "postgres-operator",
                "namespace": "{{.OperatorNamespace}}"
            },
            {
                "kind": "ServiceAccount",
                "name": "pgo-target",
                "namespace": "{{.TargetNamespace}}"
            }
        ]
    }
  pgo-target-role.json: |
    {
        "apiVersion": "rbac.authorization.k8s.io/v1",
        "kind": "Role",
        "metadata": {
            "name": "pgo-target-role",
            "namespace": "{{.TargetNamespace}}"
        },
        "rules": [
            {
                "apiGroups": [
                    "crunchydata.com"
                ],
                "resources": [
                    "pgclusters",
                    "pgpolicies",
                    "pgtasks",
                    "pgbackups",
                    "pgreplicas"
                ],
                "verbs": [
                    "*"
                ]
            },
            {
                "apiGroups": [
                    "apps"
                ],
                "resources": [
                    "deployments"
                ],
                "verbs": [
                    "*"
                ]
            },
            {
                "apiGroups": [
                    ""
                ],
                "resources": [
                    "secrets",
                    "pods",
                    "configmaps",
                    "pods/exec",
                    "pods/log",
                    "services",
                    "replicasets",
                    "endpoints",
                    "persistentvolumeclaims"
                ],
                "verbs": [
                    "*"
                ]
            },
            {
                "apiGroups": [
                    ""
                ],
                "resources": [
                    "nodes",
                    "storageclasses"
                ],
                "verbs": [
                    "get",
                    "list"
                ]
            },
            {
                "apiGroups": [
                    "batch"
                ],
                "resources": [
                    "jobs"
                ],
                "verbs": [
                    "*"
                ]
            }
        ]
    }
  pgo-target-sa.json: |
    {
        "apiVersion": "v1",
        "kind": "ServiceAccount",
        "metadata": {
            "name": "pgo-target",
            "namespace": "{{.TargetNamespace}}"
        }
    }
  pgo.load-template.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
            "name": "{{.Name}}"
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.Name}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgo-load": "true",
                        "pg-cluster": "{{.DbHost}}"
                    }
                },
                "spec": {
                    "volumes": [{
                        "name": "pgdata",
                        "persistentVolumeClaim" : {
                            "claimName": "{{.PVCName}}"
                        }
                    }],

            {{.SecurityContext}}
                    "serviceAccountName": "pgo-backrest",
                    "containers": [{
                        "name": "csvload",
                        "image": "{{.PGOImagePrefix}}/pgo-load:{{.PGOImageTag}}",
                        "volumeMounts": [{
                            "mountPath": "/pgdata",
                            "name": "pgdata",
                            "readOnly": true
                        }],

                        {{.ContainerResources }}

                        "env": [{
                            "name": "TABLE_TO_LOAD",
                            "value": "{{.TableToLoad}}"
                        }, {
                            "name": "FILE_PATH",
                            "value": "{{.FilePath}}"
                        }, {
                            "name": "FILE_TYPE",
                            "value": "{{.FileType}}"
                        }, {
                            "name": "DB_HOST",
                            "value": "{{.DbHost}}"
                        }, {
                            "name": "DB_DATABASE",
                            "value": "{{.DbDatabase}}"
                        }, {
                            "name": "DB_USER",
                            "valueFrom": {
                                "secretKeyRef": {
                                    "name": "{{.PGUserSecret}}",
                                    "key": "username"
                                }
                            }
                        }, {
                            "name": "DB_PASS",
                            "valueFrom": {
                                "secretKeyRef": {
                                    "name": "{{.PGUserSecret}}",
                                    "key": "password"
                                }
                            }
                        }, {
                            "name": "DB_PORT",
                            "value": "{{.DbPort}}"
                        }]
                    }],
                    "restartPolicy": "Never"
                }
            }
        }
    }
  pgo.sqlrunner-template.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
            "name": "{{.JobName}}",
            "labels": {
                "vendor": "crunchydata",
                "pgo-sqlrunner": "true",
                "pg-cluster": "{{.ClusterName}}"
            }
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgo-sqlrunner": "true",
                        "pg-cluster": "{{.ClusterName}}"
                    }
                },
                "spec": {
                    "serviceAccountName": "pgo-default",
                    "containers": [
                        {
                            "name": "sqlrunner",
                            "image": "{{.PGOImagePrefix}}/pgo-sqlrunner:{{.PGOImageTag}}",
                            "env": [
                                {
                                    "name": "PG_HOST",
                                    "value": "{{.PGHost}}"
                                },
                                {
                                    "name": "PG_PORT",
                                    "value": "{{.PGPort}}"
                                },
                                {
                                    "name": "PG_DATABASE",
                                    "value": "{{.PGDatabase}}"
                                },
                                {
                                    "name": "PG_USER",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PGUserSecret}}",
                                            "key": "username"
                                        }
                                    }
                                },
                                {
                                    "name": "PG_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PGUserSecret}}",
                                            "key": "password"
                                        }
                                    }
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "/pgconf",
                                    "name": "pgconf",
                                    "readOnly": true
                                }
                            ]
                        }
                    ],
                    "volumes": [
                        {
                            "name": "pgconf",
                            "configMap": {
                                "name": "{{.PGSQLConfigMap}}"
                            }
                        }
                    ],
                    "restartPolicy": "Never"
                }
            }
        }
    }
  pgo.yaml: |
    Cluster:
      PrimaryNodeLabel:
      ReplicaNodeLabel:
      CCPImagePrefix:  crunchydata
      Metrics:  false
      Badger:  false
      CCPImageTag:  centos7-12.1-4.2.0
      Port:  5432
      PGBadgerPort: 10000
      ExporterPort: 9187
      User: testuser
      Database: userdb
      PasswordAgeDays: 365
      PasswordLength:  24
      Strategy:  1
      Replicas:  0
      ArchiveMode:  false
      ArchiveTimeout:  60
      ServiceType:  ClusterIP
      Backrest:  true
      BackrestPort:  2022
      BackrestS3Bucket:
      BackrestS3Endpoint:
      BackrestS3Region:
      DisableAutofail:  false
      AutofailReplaceReplica:  false
      LogStatement:  none
      LogMinDurationStatement:  60000
      PodAntiAffinity: preferred
      SyncReplication: false
    PrimaryStorage: local
    BackupStorage: local
    ReplicaStorage: local
    BackrestStorage: local
    Storage:
        local:
            AccessMode:  ReadWriteOnce
            Size:  50G
            StorageType: dynamic
            StorageClass: local-path
            Fsgroup:  26
    DefaultContainerResources:
    DefaultLoadResources:
    DefaultRmdataResources:
    DefaultBackupResources:
    DefaultPgbouncerResources:
    ContainerResources:
        small:
            RequestsMemory:  512Mi
            RequestsCPU:  0.1
            LimitsMemory:  512Mi
            LimitsCPU:  0.1
        large:
            RequestsMemory:  2Gi
            RequestsCPU:  2.0
            LimitsMemory:  2Gi
            LimitsCPU:  4.0
    Pgo:
        AutofailSleepSeconds:  9
        PreferredFailoverNode:
        Audit:  false
        PGOImagePrefix:  crunchydata
        PGOImageTag:  centos7-4.2.0
  pgrestore-job.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
            "name": "{{.JobName}}",
            "labels": {
                "vendor": "crunchydata",
                "pgrestore": "true",
                "pg-cluster": "{{.ClusterName}}",
                "pg-task": "{{.TaskName}}"
            }
        },
        "spec": {
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgrestore": "true",
                        "pg-cluster": "{{.ClusterName}}"
                    }
                },
                "spec": {
                    "volumes": [
                        {
                            "name": "pgdata",
                            "persistentVolumeClaim": {
                                "claimName": "{{.FromClusterPVCName}}"
                            }
                        }
                    ],

                        {{.SecurityContext}}

                    "serviceAccountName": "pgo-default",
                    "containers": [
                        {
                            "name": "pgrestore",
                            "image": "{{.CCPImagePrefix}}/crunchy-pgrestore:{{.CCPImageTag}}",
                            "volumeMounts": [
                                {
                                    "mountPath": "/pgdata",
                                    "name": "pgdata",
                                    "readOnly": true
                                }
                            ],
                            "env": [
                                {
                                    "name": "PGRESTORE_USER",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PgRestoreUserSecret}}",
                                            "key": "username"
                                        }
                                    }
                                },
                                {
                                    "name": "PGRESTORE_PASS",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "{{.PgRestoreUserSecret}}",
                                            "key": "password"
                                        }
                                    }
                                },
                                {
                                    "name": "PGRESTORE_HOST",
                                    "value": "{{.PgRestoreHost}}"
                                },
                                {
                                    "name": "PGRESTORE_DB",
                                    "value": "{{.PgRestoreDB}}"
                                },
                                {
                                    "name": "PG_PRIMARY_PORT",
                                    "value": "5432"
                                },
                                {
                                    "name": "PGRESTORE_CUSTOM_OPTS",
                                    "value": "{{.PGRestoreOpts}}"
                                },
                                {
                                    "name": "PGRESTORE_BACKUP_TIMESTAMP",
                                    "value": "{{.PITRTarget}}"
                                }
                            ]
                        }
                    ],
            {{.NodeSelector}}
                            "restartPolicy": "Never"
                }
            }
        }
    }
  pod-anti-affinity.json: "                \"podAntiAffinity\": {\n                    \"{{.AffinityType}}\":
    [\n                        {\n                            {{if eq .AffinityType
    \"preferredDuringSchedulingIgnoredDuringExecution\"}}                \n                            \"weight\":
    1,\n                            \"podAffinityTerm\": {\n                            {{end}}\n
    \                               \"labelSelector\": {\n                                    \"matchExpressions\":
    [\n                                        {\n                                            \"key\":
    \"{{.VendorLabelKey}}\",\n                                            \"operator\":
    \"In\",\n                                            \"values\": [\n                                                \"{{.VendorLabelValue}}\"\n
    \                                           ]\n                                        },\n
    \                                       {\n                                            \"key\":
    \"{{.PodAntiAffinityLabelKey}}\",\n                                            \"operator\":
    \"Exists\"\n                                        },\n                                        {\n
    \                                           \"key\": \"pg-cluster\",\n                                            \"operator\":
    \"In\",\n                                            \"values\": [\n                                                \"{{.ClusterName}}\"\n
    \                                           ]\n                                        }\n
    \                                   ]\n                                },\n                                \"topologyKey\":
    \"kubernetes.io/hostname\"\n                            {{if eq .AffinityType
    \"preferredDuringSchedulingIgnoredDuringExecution\"}}     \n                            }\n
    \                           {{end}}\n                        }\n                    ]\n
    \               }\n"
  pool_passwd: |
    {{range $key, $value := .}}{{.Username}}:{{.Password}}
    {{end}}
  postgres-ha.yaml: "---\nbootstrap:\n  dcs:\n    postgresql:\n      parameters:\n
    \       archive_timeout: {{.ArchiveTimeout}} \n        log_min_duration_statement:
    {{.LogMinDurationStatement}}\n        log_statement: {{.LogStatement}}\n  initdb:\n
    \ - encoding: UTF8\n"
  pvc-matchlabels.json: |
    "selector": { "matchLabels": { "{{.Key}}": "{{.Value}}" } },
  pvc-storageclass.json: |
    {
        "kind": "PersistentVolumeClaim",
        "apiVersion": "v1",
        "metadata": {
            "name": "{{.Name}}",
            "labels": {
                "vendor": "crunchydata",
                "pgremove": "true",
                "pg-cluster": "{{.ClusterName}}"
            }
        },
        "spec": {
            "accessModes": [
                "{{.AccessMode}}"
            ],
        "storageClassName": "{{.StorageClass}}",
            "resources": {
                "requests": {
                    "storage": "{{.Size}}"
                }
            }
        }
    }
  pvc.json: |
    {
        "kind": "PersistentVolumeClaim",
        "apiVersion": "v1",
        "metadata": {
            "name": "{{.Name}}",
            "labels": {
                "vendor": "crunchydata",
                "pgremove": "true",
                "pg-cluster": "{{.ClusterName}}"
            }
        },
        "spec": {

        {{.MatchLabels}}

            "accessModes": [
                "{{.AccessMode}}"
            ],
            "resources": {
                "requests": {
                    "storage": "{{.Size}}"
                }
            }
        }
    }
  rmdata-job.json: |
    {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
            "name": "{{.JobName}}",
            "labels": {
                "vendor": "crunchydata",
                "pgrmdata": "true",
                "pg-cluster": "{{.ClusterName}}"
            }
        },
        "spec": {
            "backoffLimit": 0,
            "template": {
                "metadata": {
                    "name": "{{.JobName}}",
                    "labels": {
                        "vendor": "crunchydata",
                        "pgrmdata": "true",
                        "pg-cluster": "{{.ClusterName}}"
                    }
                },
                "spec": {
                    "serviceAccountName": "pgo-target",
                    "containers": [{
                        "name": "rmdata",
                        "image": "{{.PGOImagePrefix}}/pgo-rmdata:{{.PGOImageTag}}",
                        {{.ContainerResources }}
                        "env": [{
                            "name": "PG_CLUSTER",
                            "value": "{{.ClusterName}}"
                        }, {
                            "name": "PGHA_SCOPE",
                            "value": "{{.ClusterPGHAScope}}"
                        }, {
                            "name": "REPLICA_NAME",
                            "value": "{{.ReplicaName}}"
                        }, {
                            "name": "REMOVE_DATA",
                            "value": "{{.RemoveData}}"
                        }, {
                            "name": "REMOVE_BACKUP",
                            "value": "{{.RemoveBackup}}"
                        }, {
                            "name": "IS_BACKUP",
                            "value": "{{.IsBackup}}"
                        }, {
                            "name": "IS_REPLICA",
                            "value": "{{.IsReplica}}"
                        }, {
                            "name": "NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }]
                    }],
                    "restartPolicy": "Never"
                }
            }
        }
    }
  users.txt: |
    {{range $key, $value := .}}"{{.Username}}" "{{.Password}}"
    {{end}}
kind: ConfigMap
metadata:
  name: pgo-config
  namespace: pgo
