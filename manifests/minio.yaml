apiVersion: v1
kind: Namespace
metadata:
  name: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
        - name: data
          emptyDir: {}
      containers:
        - name: minio
          volumeMounts:
            - name: data
              mountPath: "/data"
          image: minio/minio:RELEASE.2019-10-12T01-39-57Z
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          args:
            - server
            - /data
          env:
            - name: MINIO_ACCESS_KEY
              value: "{{.s3.access_key}}"
            - name: MINIO_SECRET_KEY
              value: "{{.s3.secret_key}}"
          ports:
            - containerPort: 9000
          # Readiness probe detects situations when MinIO server instance
          # is not ready to accept traffic. Kubernetes doesn't forward
          # traffic to the pod while readiness checks fail.
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 10
          # Liveness probe detects situations where MinIO server instance
          # is not working properly and needs restart. Kubernetes automatically
          # restarts the pods if liveness checks fail.
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
spec:
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: minio

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: minio
  namespace: minio
spec:
  tls:
    - hosts:
        - minio.{{.domain}}
  rules:
    - host: minio.{{.domain}}
      http:
        paths:
          - backend:
              serviceName: minio
              servicePort: 9000
