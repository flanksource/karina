# This file was generated by running 'make crd/argocd-operator.yaml' in manifests directory
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: applications.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: applications.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    shortNames:
    - app
    - apps
    singular: application
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.sync.status
      name: Sync Status
      type: string
    - jsonPath: .status.health.status
      name: Health Status
      type: string
    - jsonPath: .status.sync.revision
      name: Revision
      priority: 10
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Application is a definition of Application resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          operation:
            description: Operation contains information about a requested or running operation
            properties:
              info:
                description: Info is a list of informational items for this operation
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              initiatedBy:
                description: InitiatedBy contains information about who initiated the operations
                properties:
                  automated:
                    description: Automated is set to true if operation was initiated automatically by the application controller.
                    type: boolean
                  username:
                    description: Username contains the name of a user who started operation
                    type: string
                type: object
              retry:
                description: Retry controls the strategy to apply if a sync fails
                properties:
                  backoff:
                    description: Backoff controls how to backoff on subsequent retries of failed syncs
                    properties:
                      duration:
                        description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                        type: string
                      factor:
                        description: Factor is a factor to multiply the base duration after each failed retry
                        format: int64
                        type: integer
                      maxDuration:
                        description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                        type: string
                    type: object
                  limit:
                    description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                    format: int64
                    type: integer
                type: object
              sync:
                description: Sync contains parameters for the operation
                properties:
                  dryRun:
                    description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                    type: boolean
                  manifests:
                    description: Manifests is an optional field that overrides sync source with a local directory for development
                    items:
                      type: string
                    type: array
                  prune:
                    description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                    type: boolean
                  resources:
                    description: Resources describes which resources shall be part of the sync
                    items:
                      description: SyncOperationResource contains resources to sync.
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    type: array
                  revision:
                    description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                    type: string
                  source:
                    description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                    properties:
                      chart:
                        description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                        type: string
                      directory:
                        description: Directory holds path/directory specific options
                        properties:
                          exclude:
                            description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                            type: string
                          include:
                            description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                            type: string
                          jsonnet:
                            description: Jsonnet holds options specific to Jsonnet
                            properties:
                              extVars:
                                description: ExtVars is a list of Jsonnet External Variables
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              libs:
                                description: Additional library search dirs
                                items:
                                  type: string
                                type: array
                              tlas:
                                description: TLAS is a list of Jsonnet Top-level Arguments
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          recurse:
                            description: Recurse specifies whether to scan a directory recursively for manifests
                            type: boolean
                        type: object
                      helm:
                        description: Helm holds helm specific options
                        properties:
                          fileParameters:
                            description: FileParameters are file parameters to the helm template
                            items:
                              description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                              properties:
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                path:
                                  description: Path is the path to the file containing the values for the Helm parameter
                                  type: string
                              type: object
                            type: array
                          parameters:
                            description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                            items:
                              description: HelmParameter is a parameter that's passed to helm template during manifest generation
                              properties:
                                forceString:
                                  description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                  type: boolean
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                value:
                                  description: Value is the value for the Helm parameter
                                  type: string
                              type: object
                            type: array
                          releaseName:
                            description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                            type: string
                          valueFiles:
                            description: ValuesFiles is a list of Helm value files to use when generating a template
                            items:
                              type: string
                            type: array
                          values:
                            description: Values specifies Helm values to be passed to helm template, typically defined as a block
                            type: string
                          version:
                            description: Version is the Helm version to use for templating (either "2" or "3")
                            type: string
                        type: object
                      ksonnet:
                        description: Ksonnet holds ksonnet specific options
                        properties:
                          environment:
                            description: Environment is a ksonnet application environment name
                            type: string
                          parameters:
                            description: Parameters are a list of ksonnet component parameter override values
                            items:
                              description: KsonnetParameter is a ksonnet component parameter
                              properties:
                                component:
                                  type: string
                                name:
                                  type: string
                                value:
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                        type: object
                      kustomize:
                        description: Kustomize holds kustomize specific options
                        properties:
                          commonAnnotations:
                            additionalProperties:
                              type: string
                            description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                            type: object
                          commonLabels:
                            additionalProperties:
                              type: string
                            description: CommonLabels is a list of additional labels to add to rendered manifests
                            type: object
                          images:
                            description: Images is a list of Kustomize image override specifications
                            items:
                              description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                              type: string
                            type: array
                          namePrefix:
                            description: NamePrefix is a prefix appended to resources for Kustomize apps
                            type: string
                          nameSuffix:
                            description: NameSuffix is a suffix appended to resources for Kustomize apps
                            type: string
                          version:
                            description: Version controls which version of Kustomize to use for rendering manifests
                            type: string
                        type: object
                      path:
                        description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                        type: string
                      plugin:
                        description: ConfigManagementPlugin holds config management plugin specific options
                        properties:
                          env:
                            description: Env is a list of environment variable entries
                            items:
                              description: EnvEntry represents an entry in the application's environment
                              properties:
                                name:
                                  description: Name is the name of the variable, usually expressed in uppercase
                                  type: string
                                value:
                                  description: Value is the value of the variable
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          name:
                            type: string
                        type: object
                      repoURL:
                        description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                        type: string
                      targetRevision:
                        description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                        type: string
                    required:
                    - repoURL
                    type: object
                  syncOptions:
                    description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                    items:
                      type: string
                    type: array
                  syncStrategy:
                    description: SyncStrategy describes how to perform the sync
                    properties:
                      apply:
                        description: Apply will perform a `kubectl apply` to perform the sync.
                        properties:
                          force:
                            description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                            type: boolean
                        type: object
                      hook:
                        description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                        properties:
                          force:
                            description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                            type: boolean
                        type: object
                    type: object
                type: object
            type: object
          spec:
            description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
            properties:
              destination:
                description: Destination is a reference to the target Kubernetes server and namespace
                properties:
                  name:
                    description: Name is an alternate way of specifying the target cluster by its symbolic name
                    type: string
                  namespace:
                    description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                    type: string
                  server:
                    description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                    type: string
                type: object
              ignoreDifferences:
                description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                items:
                  description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                  properties:
                    group:
                      type: string
                    jsonPointers:
                      items:
                        type: string
                      type: array
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - jsonPointers
                  - kind
                  type: object
                type: array
              info:
                description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              project:
                description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                type: string
              revisionHistoryLimit:
                description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                format: int64
                type: integer
              source:
                description: Source is a reference to the location of the application's manifests or chart
                properties:
                  chart:
                    description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                    type: string
                  directory:
                    description: Directory holds path/directory specific options
                    properties:
                      exclude:
                        description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                        type: string
                      include:
                        description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                        type: string
                      jsonnet:
                        description: Jsonnet holds options specific to Jsonnet
                        properties:
                          extVars:
                            description: ExtVars is a list of Jsonnet External Variables
                            items:
                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                              properties:
                                code:
                                  type: boolean
                                name:
                                  type: string
                                value:
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          libs:
                            description: Additional library search dirs
                            items:
                              type: string
                            type: array
                          tlas:
                            description: TLAS is a list of Jsonnet Top-level Arguments
                            items:
                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                              properties:
                                code:
                                  type: boolean
                                name:
                                  type: string
                                value:
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                        type: object
                      recurse:
                        description: Recurse specifies whether to scan a directory recursively for manifests
                        type: boolean
                    type: object
                  helm:
                    description: Helm holds helm specific options
                    properties:
                      fileParameters:
                        description: FileParameters are file parameters to the helm template
                        items:
                          description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                          properties:
                            name:
                              description: Name is the name of the Helm parameter
                              type: string
                            path:
                              description: Path is the path to the file containing the values for the Helm parameter
                              type: string
                          type: object
                        type: array
                      parameters:
                        description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                        items:
                          description: HelmParameter is a parameter that's passed to helm template during manifest generation
                          properties:
                            forceString:
                              description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                              type: boolean
                            name:
                              description: Name is the name of the Helm parameter
                              type: string
                            value:
                              description: Value is the value for the Helm parameter
                              type: string
                          type: object
                        type: array
                      releaseName:
                        description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                        type: string
                      valueFiles:
                        description: ValuesFiles is a list of Helm value files to use when generating a template
                        items:
                          type: string
                        type: array
                      values:
                        description: Values specifies Helm values to be passed to helm template, typically defined as a block
                        type: string
                      version:
                        description: Version is the Helm version to use for templating (either "2" or "3")
                        type: string
                    type: object
                  ksonnet:
                    description: Ksonnet holds ksonnet specific options
                    properties:
                      environment:
                        description: Environment is a ksonnet application environment name
                        type: string
                      parameters:
                        description: Parameters are a list of ksonnet component parameter override values
                        items:
                          description: KsonnetParameter is a ksonnet component parameter
                          properties:
                            component:
                              type: string
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    type: object
                  kustomize:
                    description: Kustomize holds kustomize specific options
                    properties:
                      commonAnnotations:
                        additionalProperties:
                          type: string
                        description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                        type: object
                      commonLabels:
                        additionalProperties:
                          type: string
                        description: CommonLabels is a list of additional labels to add to rendered manifests
                        type: object
                      images:
                        description: Images is a list of Kustomize image override specifications
                        items:
                          description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                          type: string
                        type: array
                      namePrefix:
                        description: NamePrefix is a prefix appended to resources for Kustomize apps
                        type: string
                      nameSuffix:
                        description: NameSuffix is a suffix appended to resources for Kustomize apps
                        type: string
                      version:
                        description: Version controls which version of Kustomize to use for rendering manifests
                        type: string
                    type: object
                  path:
                    description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                    type: string
                  plugin:
                    description: ConfigManagementPlugin holds config management plugin specific options
                    properties:
                      env:
                        description: Env is a list of environment variable entries
                        items:
                          description: EnvEntry represents an entry in the application's environment
                          properties:
                            name:
                              description: Name is the name of the variable, usually expressed in uppercase
                              type: string
                            value:
                              description: Value is the value of the variable
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      name:
                        type: string
                    type: object
                  repoURL:
                    description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                    type: string
                  targetRevision:
                    description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                    type: string
                required:
                - repoURL
                type: object
              syncPolicy:
                description: SyncPolicy controls when and how a sync will be performed
                properties:
                  automated:
                    description: Automated will keep an application synced to the target revision
                    properties:
                      allowEmpty:
                        description: 'AllowEmpty allows apps have zero live resources (default: false)'
                        type: boolean
                      prune:
                        description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                        type: boolean
                      selfHeal:
                        description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                        type: boolean
                    type: object
                  retry:
                    description: Retry controls failed sync retry behavior
                    properties:
                      backoff:
                        description: Backoff controls how to backoff on subsequent retries of failed syncs
                        properties:
                          duration:
                            description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                            type: string
                          factor:
                            description: Factor is a factor to multiply the base duration after each failed retry
                            format: int64
                            type: integer
                          maxDuration:
                            description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                            type: string
                        type: object
                      limit:
                        description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                        format: int64
                        type: integer
                    type: object
                  syncOptions:
                    description: Options allow you to specify whole app sync-options
                    items:
                      type: string
                    type: array
                type: object
            required:
            - destination
            - project
            - source
            type: object
          status:
            description: ApplicationStatus contains status information for the application
            properties:
              conditions:
                description: Conditions is a list of currently observed application conditions
                items:
                  description: ApplicationCondition contains details about an application condition, which is usally an error or warning
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the time the condition was last observed
                      format: date-time
                      type: string
                    message:
                      description: Message contains human-readable message indicating details about condition
                      type: string
                    type:
                      description: Type is an application condition type
                      type: string
                  required:
                  - message
                  - type
                  type: object
                type: array
              health:
                description: Health contains information about the application's current health status
                properties:
                  message:
                    description: Message is a human-readable informational message describing the health status
                    type: string
                  status:
                    description: Status holds the status code of the application or resource
                    type: string
                type: object
              history:
                description: History contains information about the application's sync history
                items:
                  description: RevisionHistory contains history information about a previous sync
                  properties:
                    deployStartedAt:
                      description: DeployStartedAt holds the time the sync operation started
                      format: date-time
                      type: string
                    deployedAt:
                      description: DeployedAt holds the time the sync operation completed
                      format: date-time
                      type: string
                    id:
                      description: ID is an auto incrementing identifier of the RevisionHistory
                      format: int64
                      type: integer
                    revision:
                      description: Revision holds the revision the sync was performed against
                      type: string
                    source:
                      description: Source is a reference to the application source used for the sync operation
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External Variables
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                libs:
                                  description: Additional library search dirs
                                  items:
                                    type: string
                                  type: array
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level Arguments
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                              type: object
                            recurse:
                              description: Recurse specifies whether to scan a directory recursively for manifests
                              type: boolean
                          type: object
                        helm:
                          description: Helm holds helm specific options
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the helm template
                              items:
                                description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing the values for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            parameters:
                              description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                              items:
                                description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                properties:
                                  forceString:
                                    description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            releaseName:
                              description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                              type: string
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files to use when generating a template
                              items:
                                type: string
                              type: array
                            values:
                              description: Values specifies Helm values to be passed to helm template, typically defined as a block
                              type: string
                            version:
                              description: Version is the Helm version to use for templating (either "2" or "3")
                              type: string
                          type: object
                        ksonnet:
                          description: Ksonnet holds ksonnet specific options
                          properties:
                            environment:
                              description: Environment is a ksonnet application environment name
                              type: string
                            parameters:
                              description: Parameters are a list of ksonnet component parameter override values
                              items:
                                description: KsonnetParameter is a ksonnet component parameter
                                properties:
                                  component:
                                    type: string
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          properties:
                            commonAnnotations:
                              additionalProperties:
                                type: string
                              description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                              type: object
                            commonLabels:
                              additionalProperties:
                                type: string
                              description: CommonLabels is a list of additional labels to add to rendered manifests
                              type: object
                            images:
                              description: Images is a list of Kustomize image override specifications
                              items:
                                description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                              type: array
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources for Kustomize apps
                              type: string
                            version:
                              description: Version controls which version of Kustomize to use for rendering manifests
                              type: string
                          type: object
                        path:
                          description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: ConfigManagementPlugin holds config management plugin specific options
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              items:
                                description: EnvEntry represents an entry in the application's environment
                                properties:
                                  name:
                                    description: Name is the name of the variable, usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            name:
                              type: string
                          type: object
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                          type: string
                      required:
                      - repoURL
                      type: object
                  required:
                  - deployedAt
                  - id
                  - revision
                  type: object
                type: array
              observedAt:
                description: 'ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field'
                format: date-time
                type: string
              operationState:
                description: OperationState contains information about any ongoing operations, such as a sync
                properties:
                  finishedAt:
                    description: FinishedAt contains time of operation completion
                    format: date-time
                    type: string
                  message:
                    description: Message holds any pertinent messages when attempting to perform operation (typically errors).
                    type: string
                  operation:
                    description: Operation is the original requested operation
                    properties:
                      info:
                        description: Info is a list of informational items for this operation
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      initiatedBy:
                        description: InitiatedBy contains information about who initiated the operations
                        properties:
                          automated:
                            description: Automated is set to true if operation was initiated automatically by the application controller.
                            type: boolean
                          username:
                            description: Username contains the name of a user who started operation
                            type: string
                        type: object
                      retry:
                        description: Retry controls the strategy to apply if a sync fails
                        properties:
                          backoff:
                            description: Backoff controls how to backoff on subsequent retries of failed syncs
                            properties:
                              duration:
                                description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                type: string
                              factor:
                                description: Factor is a factor to multiply the base duration after each failed retry
                                format: int64
                                type: integer
                              maxDuration:
                                description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                type: string
                            type: object
                          limit:
                            description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                            format: int64
                            type: integer
                        type: object
                      sync:
                        description: Sync contains parameters for the operation
                        properties:
                          dryRun:
                            description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                            type: boolean
                          manifests:
                            description: Manifests is an optional field that overrides sync source with a local directory for development
                            items:
                              type: string
                            type: array
                          prune:
                            description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                            type: boolean
                          resources:
                            description: Resources describes which resources shall be part of the sync
                            items:
                              description: SyncOperationResource contains resources to sync.
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            type: array
                          revision:
                            description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                            type: string
                          source:
                            description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                            properties:
                              chart:
                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                type: string
                              directory:
                                description: Directory holds path/directory specific options
                                properties:
                                  exclude:
                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                    type: string
                                  include:
                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                    type: string
                                  jsonnet:
                                    description: Jsonnet holds options specific to Jsonnet
                                    properties:
                                      extVars:
                                        description: ExtVars is a list of Jsonnet External Variables
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      libs:
                                        description: Additional library search dirs
                                        items:
                                          type: string
                                        type: array
                                      tlas:
                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                    type: object
                                  recurse:
                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                    type: boolean
                                type: object
                              helm:
                                description: Helm holds helm specific options
                                properties:
                                  fileParameters:
                                    description: FileParameters are file parameters to the helm template
                                    items:
                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                      properties:
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        path:
                                          description: Path is the path to the file containing the values for the Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  parameters:
                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                    items:
                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                      properties:
                                        forceString:
                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                          type: boolean
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        value:
                                          description: Value is the value for the Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  releaseName:
                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                    type: string
                                  valueFiles:
                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                    items:
                                      type: string
                                    type: array
                                  values:
                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                    type: string
                                  version:
                                    description: Version is the Helm version to use for templating (either "2" or "3")
                                    type: string
                                type: object
                              ksonnet:
                                description: Ksonnet holds ksonnet specific options
                                properties:
                                  environment:
                                    description: Environment is a ksonnet application environment name
                                    type: string
                                  parameters:
                                    description: Parameters are a list of ksonnet component parameter override values
                                    items:
                                      description: KsonnetParameter is a ksonnet component parameter
                                      properties:
                                        component:
                                          type: string
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              kustomize:
                                description: Kustomize holds kustomize specific options
                                properties:
                                  commonAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                    type: object
                                  commonLabels:
                                    additionalProperties:
                                      type: string
                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                    type: object
                                  images:
                                    description: Images is a list of Kustomize image override specifications
                                    items:
                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                      type: string
                                    type: array
                                  namePrefix:
                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                    type: string
                                  nameSuffix:
                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                    type: string
                                  version:
                                    description: Version controls which version of Kustomize to use for rendering manifests
                                    type: string
                                type: object
                              path:
                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                type: string
                              plugin:
                                description: ConfigManagementPlugin holds config management plugin specific options
                                properties:
                                  env:
                                    description: Env is a list of environment variable entries
                                    items:
                                      description: EnvEntry represents an entry in the application's environment
                                      properties:
                                        name:
                                          description: Name is the name of the variable, usually expressed in uppercase
                                          type: string
                                        value:
                                          description: Value is the value of the variable
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                type: object
                              repoURL:
                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                type: string
                            required:
                            - repoURL
                            type: object
                          syncOptions:
                            description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                            items:
                              type: string
                            type: array
                          syncStrategy:
                            description: SyncStrategy describes how to perform the sync
                            properties:
                              apply:
                                description: Apply will perform a `kubectl apply` to perform the sync.
                                properties:
                                  force:
                                    description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                    type: boolean
                                type: object
                              hook:
                                description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                                properties:
                                  force:
                                    description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                    type: boolean
                                type: object
                            type: object
                        type: object
                    type: object
                  phase:
                    description: Phase is the current phase of the operation
                    type: string
                  retryCount:
                    description: RetryCount contains time of operation retries
                    format: int64
                    type: integer
                  startedAt:
                    description: StartedAt contains time of operation start
                    format: date-time
                    type: string
                  syncResult:
                    description: SyncResult is the result of a Sync operation
                    properties:
                      resources:
                        description: Resources contains a list of sync result items for each individual resource in a sync operation
                        items:
                          description: ResourceResult holds the operation result details of a specific resource
                          properties:
                            group:
                              description: Group specifies the API group of the resource
                              type: string
                            hookPhase:
                              description: HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
                              type: string
                            hookType:
                              description: HookType specifies the type of the hook. Empty for non-hook resources
                              type: string
                            kind:
                              description: Kind specifies the API kind of the resource
                              type: string
                            message:
                              description: Message contains an informational or error message for the last sync OR operation
                              type: string
                            name:
                              description: Name specifies the name of the resource
                              type: string
                            namespace:
                              description: Namespace specifies the target namespace of the resource
                              type: string
                            status:
                              description: Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
                              type: string
                            syncPhase:
                              description: SyncPhase indicates the particular phase of the sync that this result was acquired in
                              type: string
                            version:
                              description: Version specifies the API version of the resource
                              type: string
                          required:
                          - group
                          - kind
                          - name
                          - namespace
                          - version
                          type: object
                        type: array
                      revision:
                        description: Revision holds the revision this sync operation was performed to
                        type: string
                      source:
                        description: Source records the application source information of the sync, used for comparing auto-sync
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                type: string
                              version:
                                description: Version is the Helm version to use for templating (either "2" or "3")
                                type: string
                            type: object
                          ksonnet:
                            description: Ksonnet holds ksonnet specific options
                            properties:
                              environment:
                                description: Environment is a ksonnet application environment name
                                type: string
                              parameters:
                                description: Parameters are a list of ksonnet component parameter override values
                                items:
                                  description: KsonnetParameter is a ksonnet component parameter
                                  properties:
                                    component:
                                      type: string
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                              images:
                                description: Images is a list of Kustomize image override specifications
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: ConfigManagementPlugin holds config management plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              name:
                                type: string
                            type: object
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                        required:
                        - repoURL
                        type: object
                    required:
                    - revision
                    type: object
                required:
                - operation
                - phase
                - startedAt
                type: object
              reconciledAt:
                description: ReconciledAt indicates when the application state was reconciled using the latest git version
                format: date-time
                type: string
              resources:
                description: Resources is a list of Kubernetes resources managed by this application
                items:
                  description: 'ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type'
                  properties:
                    group:
                      type: string
                    health:
                      description: HealthStatus contains information about the currently observed health state of an application or resource
                      properties:
                        message:
                          description: Message is a human-readable informational message describing the health status
                          type: string
                        status:
                          description: Status holds the status code of the application or resource
                          type: string
                      type: object
                    hook:
                      type: boolean
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    requiresPruning:
                      type: boolean
                    status:
                      description: SyncStatusCode is a type which represents possible comparison results
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              sourceType:
                description: SourceType specifies the type of this application
                type: string
              summary:
                description: Summary contains a list of URLs and container images used by this application
                properties:
                  externalURLs:
                    description: ExternalURLs holds all external URLs of application child resources.
                    items:
                      type: string
                    type: array
                  images:
                    description: Images holds all images of application child resources.
                    items:
                      type: string
                    type: array
                type: object
              sync:
                description: Sync contains information about the application's current sync status
                properties:
                  comparedTo:
                    description: ComparedTo contains information about what has been compared
                    properties:
                      destination:
                        description: Destination is a reference to the application's destination used for comparison
                        properties:
                          name:
                            description: Name is an alternate way of specifying the target cluster by its symbolic name
                            type: string
                          namespace:
                            description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                            type: string
                          server:
                            description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                            type: string
                        type: object
                      source:
                        description: Source is a reference to the application's source used for comparison
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                type: string
                              version:
                                description: Version is the Helm version to use for templating (either "2" or "3")
                                type: string
                            type: object
                          ksonnet:
                            description: Ksonnet holds ksonnet specific options
                            properties:
                              environment:
                                description: Environment is a ksonnet application environment name
                                type: string
                              parameters:
                                description: Parameters are a list of ksonnet component parameter override values
                                items:
                                  description: KsonnetParameter is a ksonnet component parameter
                                  properties:
                                    component:
                                      type: string
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                              images:
                                description: Images is a list of Kustomize image override specifications
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: ConfigManagementPlugin holds config management plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              name:
                                type: string
                            type: object
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                        required:
                        - repoURL
                        type: object
                    required:
                    - destination
                    - source
                    type: object
                  revision:
                    description: Revision contains information about the revision the comparison has been performed to
                    type: string
                  status:
                    description: Status is the sync state of the comparison
                    type: string
                required:
                - status
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: applicationsets.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: ApplicationSet
    listKind: ApplicationSetList
    plural: applicationsets
    shortNames:
    - appset
    - appsets
    singular: applicationset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationSet is a set of Application resources
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSetSpec represents a class of application set state.
            properties:
              generators:
                items:
                  description: ApplicationSetGenerator include list item info
                  properties:
                    clusterDecisionResource:
                      description: DuckType defines a generator to match against clusters registered with ArgoCD.
                      properties:
                        configMapRef:
                          description: ConfigMapRef is a ConfigMap with the duck type definitions needed to retreive the data              this includes apiVersion(group/version), kind, matchKey and validation settings Name is the resource name of the kind, group and version, defined in the ConfigMapRef RequeueAfterSeconds is how long before the duckType will be rechecked for a change
                          type: string
                        labelSelector:
                          description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        name:
                          type: string
                        requeueAfterSeconds:
                          format: int64
                          type: integer
                        template:
                          description: ApplicationSetTemplate represents argocd ApplicationSpec
                          properties:
                            metadata:
                              description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                              properties:
                                destination:
                                  description: Destination is a reference to the target Kubernetes server and namespace
                                  properties:
                                    name:
                                      description: Name is an alternate way of specifying the target cluster by its symbolic name
                                      type: string
                                    namespace:
                                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                      type: string
                                    server:
                                      description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                      type: string
                                  type: object
                                ignoreDifferences:
                                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                  items:
                                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                    properties:
                                      group:
                                        type: string
                                      jqPathExpressions:
                                        items:
                                          type: string
                                        type: array
                                      jsonPointers:
                                        items:
                                          type: string
                                        type: array
                                      kind:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    required:
                                    - kind
                                    type: object
                                  type: array
                                info:
                                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                project:
                                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                  type: string
                                revisionHistoryLimit:
                                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                  format: int64
                                  type: integer
                                source:
                                  description: Source is a reference to the location of the application's manifests or chart
                                  properties:
                                    chart:
                                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                      type: string
                                    directory:
                                      description: Directory holds path/directory specific options
                                      properties:
                                        exclude:
                                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                          type: string
                                        include:
                                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                          type: string
                                        jsonnet:
                                          description: Jsonnet holds options specific to Jsonnet
                                          properties:
                                            extVars:
                                              description: ExtVars is a list of Jsonnet External Variables
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            libs:
                                              description: Additional library search dirs
                                              items:
                                                type: string
                                              type: array
                                            tlas:
                                              description: TLAS is a list of Jsonnet Top-level Arguments
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                          type: object
                                        recurse:
                                          description: Recurse specifies whether to scan a directory recursively for manifests
                                          type: boolean
                                      type: object
                                    helm:
                                      description: Helm holds helm specific options
                                      properties:
                                        fileParameters:
                                          description: FileParameters are file parameters to the helm template
                                          items:
                                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                            properties:
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              path:
                                                description: Path is the path to the file containing the values for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        parameters:
                                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                          items:
                                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                            properties:
                                              forceString:
                                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                type: boolean
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              value:
                                                description: Value is the value for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        releaseName:
                                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                          type: string
                                        valueFiles:
                                          description: ValuesFiles is a list of Helm value files to use when generating a template
                                          items:
                                            type: string
                                          type: array
                                        values:
                                          description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                          type: string
                                        version:
                                          description: Version is the Helm version to use for templating (either "2" or "3")
                                          type: string
                                      type: object
                                    ksonnet:
                                      description: Ksonnet holds ksonnet specific options
                                      properties:
                                        environment:
                                          description: Environment is a ksonnet application environment name
                                          type: string
                                        parameters:
                                          description: Parameters are a list of ksonnet component parameter override values
                                          items:
                                            description: KsonnetParameter is a ksonnet component parameter
                                            properties:
                                              component:
                                                type: string
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    kustomize:
                                      description: Kustomize holds kustomize specific options
                                      properties:
                                        commonAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                          type: object
                                        commonLabels:
                                          additionalProperties:
                                            type: string
                                          description: CommonLabels is a list of additional labels to add to rendered manifests
                                          type: object
                                        forceCommonAnnotations:
                                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                          type: boolean
                                        forceCommonLabels:
                                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                          type: boolean
                                        images:
                                          description: Images is a list of Kustomize image override specifications
                                          items:
                                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                            type: string
                                          type: array
                                        namePrefix:
                                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                                          type: string
                                        nameSuffix:
                                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                                          type: string
                                        version:
                                          description: Version controls which version of Kustomize to use for rendering manifests
                                          type: string
                                      type: object
                                    path:
                                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                      type: string
                                    plugin:
                                      description: ConfigManagementPlugin holds config management plugin specific options
                                      properties:
                                        env:
                                          description: Env is a list of environment variable entries
                                          items:
                                            description: EnvEntry represents an entry in the application's environment
                                            properties:
                                              name:
                                                description: Name is the name of the variable, usually expressed in uppercase
                                                type: string
                                              value:
                                                description: Value is the value of the variable
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      type: object
                                    repoURL:
                                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                      type: string
                                    targetRevision:
                                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                      type: string
                                  required:
                                  - repoURL
                                  type: object
                                syncPolicy:
                                  description: SyncPolicy controls when and how a sync will be performed
                                  properties:
                                    automated:
                                      description: Automated will keep an application synced to the target revision
                                      properties:
                                        allowEmpty:
                                          description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                          type: boolean
                                        prune:
                                          description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                          type: boolean
                                        selfHeal:
                                          description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                          type: boolean
                                      type: object
                                    retry:
                                      description: Retry controls failed sync retry behavior
                                      properties:
                                        backoff:
                                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                                          properties:
                                            duration:
                                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                              type: string
                                            factor:
                                              description: Factor is a factor to multiply the base duration after each failed retry
                                              format: int64
                                              type: integer
                                            maxDuration:
                                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                              type: string
                                          type: object
                                        limit:
                                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                          format: int64
                                          type: integer
                                      type: object
                                    syncOptions:
                                      description: Options allow you to specify whole app sync-options
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              required:
                              - destination
                              - project
                              - source
                              type: object
                          required:
                          - metadata
                          - spec
                          type: object
                        values:
                          additionalProperties:
                            type: string
                          description: Values contains key/value pairs which are passed directly as parameters to the template
                          type: object
                      required:
                      - configMapRef
                      type: object
                    clusters:
                      description: ClusterGenerator defines a generator to match against clusters registered with ArgoCD.
                      properties:
                        selector:
                          description: Selector defines a label selector to match against all clusters registered with ArgoCD. Clusters today are stored as Kubernetes Secrets, thus the Secret labels will be used for matching the selector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        template:
                          description: ApplicationSetTemplate represents argocd ApplicationSpec
                          properties:
                            metadata:
                              description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                              properties:
                                destination:
                                  description: Destination is a reference to the target Kubernetes server and namespace
                                  properties:
                                    name:
                                      description: Name is an alternate way of specifying the target cluster by its symbolic name
                                      type: string
                                    namespace:
                                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                      type: string
                                    server:
                                      description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                      type: string
                                  type: object
                                ignoreDifferences:
                                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                  items:
                                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                    properties:
                                      group:
                                        type: string
                                      jqPathExpressions:
                                        items:
                                          type: string
                                        type: array
                                      jsonPointers:
                                        items:
                                          type: string
                                        type: array
                                      kind:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    required:
                                    - kind
                                    type: object
                                  type: array
                                info:
                                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                project:
                                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                  type: string
                                revisionHistoryLimit:
                                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                  format: int64
                                  type: integer
                                source:
                                  description: Source is a reference to the location of the application's manifests or chart
                                  properties:
                                    chart:
                                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                      type: string
                                    directory:
                                      description: Directory holds path/directory specific options
                                      properties:
                                        exclude:
                                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                          type: string
                                        include:
                                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                          type: string
                                        jsonnet:
                                          description: Jsonnet holds options specific to Jsonnet
                                          properties:
                                            extVars:
                                              description: ExtVars is a list of Jsonnet External Variables
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            libs:
                                              description: Additional library search dirs
                                              items:
                                                type: string
                                              type: array
                                            tlas:
                                              description: TLAS is a list of Jsonnet Top-level Arguments
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                          type: object
                                        recurse:
                                          description: Recurse specifies whether to scan a directory recursively for manifests
                                          type: boolean
                                      type: object
                                    helm:
                                      description: Helm holds helm specific options
                                      properties:
                                        fileParameters:
                                          description: FileParameters are file parameters to the helm template
                                          items:
                                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                            properties:
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              path:
                                                description: Path is the path to the file containing the values for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        parameters:
                                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                          items:
                                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                            properties:
                                              forceString:
                                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                type: boolean
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              value:
                                                description: Value is the value for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        releaseName:
                                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                          type: string
                                        valueFiles:
                                          description: ValuesFiles is a list of Helm value files to use when generating a template
                                          items:
                                            type: string
                                          type: array
                                        values:
                                          description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                          type: string
                                        version:
                                          description: Version is the Helm version to use for templating (either "2" or "3")
                                          type: string
                                      type: object
                                    ksonnet:
                                      description: Ksonnet holds ksonnet specific options
                                      properties:
                                        environment:
                                          description: Environment is a ksonnet application environment name
                                          type: string
                                        parameters:
                                          description: Parameters are a list of ksonnet component parameter override values
                                          items:
                                            description: KsonnetParameter is a ksonnet component parameter
                                            properties:
                                              component:
                                                type: string
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    kustomize:
                                      description: Kustomize holds kustomize specific options
                                      properties:
                                        commonAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                          type: object
                                        commonLabels:
                                          additionalProperties:
                                            type: string
                                          description: CommonLabels is a list of additional labels to add to rendered manifests
                                          type: object
                                        forceCommonAnnotations:
                                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                          type: boolean
                                        forceCommonLabels:
                                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                          type: boolean
                                        images:
                                          description: Images is a list of Kustomize image override specifications
                                          items:
                                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                            type: string
                                          type: array
                                        namePrefix:
                                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                                          type: string
                                        nameSuffix:
                                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                                          type: string
                                        version:
                                          description: Version controls which version of Kustomize to use for rendering manifests
                                          type: string
                                      type: object
                                    path:
                                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                      type: string
                                    plugin:
                                      description: ConfigManagementPlugin holds config management plugin specific options
                                      properties:
                                        env:
                                          description: Env is a list of environment variable entries
                                          items:
                                            description: EnvEntry represents an entry in the application's environment
                                            properties:
                                              name:
                                                description: Name is the name of the variable, usually expressed in uppercase
                                                type: string
                                              value:
                                                description: Value is the value of the variable
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      type: object
                                    repoURL:
                                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                      type: string
                                    targetRevision:
                                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                      type: string
                                  required:
                                  - repoURL
                                  type: object
                                syncPolicy:
                                  description: SyncPolicy controls when and how a sync will be performed
                                  properties:
                                    automated:
                                      description: Automated will keep an application synced to the target revision
                                      properties:
                                        allowEmpty:
                                          description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                          type: boolean
                                        prune:
                                          description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                          type: boolean
                                        selfHeal:
                                          description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                          type: boolean
                                      type: object
                                    retry:
                                      description: Retry controls failed sync retry behavior
                                      properties:
                                        backoff:
                                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                                          properties:
                                            duration:
                                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                              type: string
                                            factor:
                                              description: Factor is a factor to multiply the base duration after each failed retry
                                              format: int64
                                              type: integer
                                            maxDuration:
                                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                              type: string
                                          type: object
                                        limit:
                                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                          format: int64
                                          type: integer
                                      type: object
                                    syncOptions:
                                      description: Options allow you to specify whole app sync-options
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              required:
                              - destination
                              - project
                              - source
                              type: object
                          required:
                          - metadata
                          - spec
                          type: object
                        values:
                          additionalProperties:
                            type: string
                          description: Values contains key/value pairs which are passed directly as parameters to the template
                          type: object
                      type: object
                    git:
                      properties:
                        directories:
                          items:
                            properties:
                              exclude:
                                type: boolean
                              path:
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        files:
                          items:
                            properties:
                              path:
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        repoURL:
                          type: string
                        requeueAfterSeconds:
                          format: int64
                          type: integer
                        revision:
                          type: string
                        template:
                          description: ApplicationSetTemplate represents argocd ApplicationSpec
                          properties:
                            metadata:
                              description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                              properties:
                                destination:
                                  description: Destination is a reference to the target Kubernetes server and namespace
                                  properties:
                                    name:
                                      description: Name is an alternate way of specifying the target cluster by its symbolic name
                                      type: string
                                    namespace:
                                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                      type: string
                                    server:
                                      description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                      type: string
                                  type: object
                                ignoreDifferences:
                                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                  items:
                                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                    properties:
                                      group:
                                        type: string
                                      jqPathExpressions:
                                        items:
                                          type: string
                                        type: array
                                      jsonPointers:
                                        items:
                                          type: string
                                        type: array
                                      kind:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    required:
                                    - kind
                                    type: object
                                  type: array
                                info:
                                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                project:
                                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                  type: string
                                revisionHistoryLimit:
                                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                  format: int64
                                  type: integer
                                source:
                                  description: Source is a reference to the location of the application's manifests or chart
                                  properties:
                                    chart:
                                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                      type: string
                                    directory:
                                      description: Directory holds path/directory specific options
                                      properties:
                                        exclude:
                                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                          type: string
                                        include:
                                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                          type: string
                                        jsonnet:
                                          description: Jsonnet holds options specific to Jsonnet
                                          properties:
                                            extVars:
                                              description: ExtVars is a list of Jsonnet External Variables
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            libs:
                                              description: Additional library search dirs
                                              items:
                                                type: string
                                              type: array
                                            tlas:
                                              description: TLAS is a list of Jsonnet Top-level Arguments
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                          type: object
                                        recurse:
                                          description: Recurse specifies whether to scan a directory recursively for manifests
                                          type: boolean
                                      type: object
                                    helm:
                                      description: Helm holds helm specific options
                                      properties:
                                        fileParameters:
                                          description: FileParameters are file parameters to the helm template
                                          items:
                                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                            properties:
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              path:
                                                description: Path is the path to the file containing the values for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        parameters:
                                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                          items:
                                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                            properties:
                                              forceString:
                                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                type: boolean
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              value:
                                                description: Value is the value for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        releaseName:
                                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                          type: string
                                        valueFiles:
                                          description: ValuesFiles is a list of Helm value files to use when generating a template
                                          items:
                                            type: string
                                          type: array
                                        values:
                                          description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                          type: string
                                        version:
                                          description: Version is the Helm version to use for templating (either "2" or "3")
                                          type: string
                                      type: object
                                    ksonnet:
                                      description: Ksonnet holds ksonnet specific options
                                      properties:
                                        environment:
                                          description: Environment is a ksonnet application environment name
                                          type: string
                                        parameters:
                                          description: Parameters are a list of ksonnet component parameter override values
                                          items:
                                            description: KsonnetParameter is a ksonnet component parameter
                                            properties:
                                              component:
                                                type: string
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    kustomize:
                                      description: Kustomize holds kustomize specific options
                                      properties:
                                        commonAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                          type: object
                                        commonLabels:
                                          additionalProperties:
                                            type: string
                                          description: CommonLabels is a list of additional labels to add to rendered manifests
                                          type: object
                                        forceCommonAnnotations:
                                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                          type: boolean
                                        forceCommonLabels:
                                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                          type: boolean
                                        images:
                                          description: Images is a list of Kustomize image override specifications
                                          items:
                                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                            type: string
                                          type: array
                                        namePrefix:
                                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                                          type: string
                                        nameSuffix:
                                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                                          type: string
                                        version:
                                          description: Version controls which version of Kustomize to use for rendering manifests
                                          type: string
                                      type: object
                                    path:
                                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                      type: string
                                    plugin:
                                      description: ConfigManagementPlugin holds config management plugin specific options
                                      properties:
                                        env:
                                          description: Env is a list of environment variable entries
                                          items:
                                            description: EnvEntry represents an entry in the application's environment
                                            properties:
                                              name:
                                                description: Name is the name of the variable, usually expressed in uppercase
                                                type: string
                                              value:
                                                description: Value is the value of the variable
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      type: object
                                    repoURL:
                                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                      type: string
                                    targetRevision:
                                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                      type: string
                                  required:
                                  - repoURL
                                  type: object
                                syncPolicy:
                                  description: SyncPolicy controls when and how a sync will be performed
                                  properties:
                                    automated:
                                      description: Automated will keep an application synced to the target revision
                                      properties:
                                        allowEmpty:
                                          description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                          type: boolean
                                        prune:
                                          description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                          type: boolean
                                        selfHeal:
                                          description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                          type: boolean
                                      type: object
                                    retry:
                                      description: Retry controls failed sync retry behavior
                                      properties:
                                        backoff:
                                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                                          properties:
                                            duration:
                                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                              type: string
                                            factor:
                                              description: Factor is a factor to multiply the base duration after each failed retry
                                              format: int64
                                              type: integer
                                            maxDuration:
                                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                              type: string
                                          type: object
                                        limit:
                                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                          format: int64
                                          type: integer
                                      type: object
                                    syncOptions:
                                      description: Options allow you to specify whole app sync-options
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              required:
                              - destination
                              - project
                              - source
                              type: object
                          required:
                          - metadata
                          - spec
                          type: object
                      required:
                      - repoURL
                      - revision
                      type: object
                    list:
                      description: ListGenerator include items info
                      properties:
                        elements:
                          items:
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                        template:
                          description: ApplicationSetTemplate represents argocd ApplicationSpec
                          properties:
                            metadata:
                              description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                              properties:
                                destination:
                                  description: Destination is a reference to the target Kubernetes server and namespace
                                  properties:
                                    name:
                                      description: Name is an alternate way of specifying the target cluster by its symbolic name
                                      type: string
                                    namespace:
                                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                      type: string
                                    server:
                                      description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                      type: string
                                  type: object
                                ignoreDifferences:
                                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                  items:
                                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                    properties:
                                      group:
                                        type: string
                                      jqPathExpressions:
                                        items:
                                          type: string
                                        type: array
                                      jsonPointers:
                                        items:
                                          type: string
                                        type: array
                                      kind:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    required:
                                    - kind
                                    type: object
                                  type: array
                                info:
                                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                project:
                                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                  type: string
                                revisionHistoryLimit:
                                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                  format: int64
                                  type: integer
                                source:
                                  description: Source is a reference to the location of the application's manifests or chart
                                  properties:
                                    chart:
                                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                      type: string
                                    directory:
                                      description: Directory holds path/directory specific options
                                      properties:
                                        exclude:
                                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                          type: string
                                        include:
                                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                          type: string
                                        jsonnet:
                                          description: Jsonnet holds options specific to Jsonnet
                                          properties:
                                            extVars:
                                              description: ExtVars is a list of Jsonnet External Variables
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            libs:
                                              description: Additional library search dirs
                                              items:
                                                type: string
                                              type: array
                                            tlas:
                                              description: TLAS is a list of Jsonnet Top-level Arguments
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                          type: object
                                        recurse:
                                          description: Recurse specifies whether to scan a directory recursively for manifests
                                          type: boolean
                                      type: object
                                    helm:
                                      description: Helm holds helm specific options
                                      properties:
                                        fileParameters:
                                          description: FileParameters are file parameters to the helm template
                                          items:
                                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                            properties:
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              path:
                                                description: Path is the path to the file containing the values for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        parameters:
                                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                          items:
                                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                            properties:
                                              forceString:
                                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                type: boolean
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              value:
                                                description: Value is the value for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        releaseName:
                                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                          type: string
                                        valueFiles:
                                          description: ValuesFiles is a list of Helm value files to use when generating a template
                                          items:
                                            type: string
                                          type: array
                                        values:
                                          description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                          type: string
                                        version:
                                          description: Version is the Helm version to use for templating (either "2" or "3")
                                          type: string
                                      type: object
                                    ksonnet:
                                      description: Ksonnet holds ksonnet specific options
                                      properties:
                                        environment:
                                          description: Environment is a ksonnet application environment name
                                          type: string
                                        parameters:
                                          description: Parameters are a list of ksonnet component parameter override values
                                          items:
                                            description: KsonnetParameter is a ksonnet component parameter
                                            properties:
                                              component:
                                                type: string
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    kustomize:
                                      description: Kustomize holds kustomize specific options
                                      properties:
                                        commonAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                          type: object
                                        commonLabels:
                                          additionalProperties:
                                            type: string
                                          description: CommonLabels is a list of additional labels to add to rendered manifests
                                          type: object
                                        forceCommonAnnotations:
                                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                          type: boolean
                                        forceCommonLabels:
                                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                          type: boolean
                                        images:
                                          description: Images is a list of Kustomize image override specifications
                                          items:
                                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                            type: string
                                          type: array
                                        namePrefix:
                                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                                          type: string
                                        nameSuffix:
                                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                                          type: string
                                        version:
                                          description: Version controls which version of Kustomize to use for rendering manifests
                                          type: string
                                      type: object
                                    path:
                                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                      type: string
                                    plugin:
                                      description: ConfigManagementPlugin holds config management plugin specific options
                                      properties:
                                        env:
                                          description: Env is a list of environment variable entries
                                          items:
                                            description: EnvEntry represents an entry in the application's environment
                                            properties:
                                              name:
                                                description: Name is the name of the variable, usually expressed in uppercase
                                                type: string
                                              value:
                                                description: Value is the value of the variable
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      type: object
                                    repoURL:
                                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                      type: string
                                    targetRevision:
                                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                      type: string
                                  required:
                                  - repoURL
                                  type: object
                                syncPolicy:
                                  description: SyncPolicy controls when and how a sync will be performed
                                  properties:
                                    automated:
                                      description: Automated will keep an application synced to the target revision
                                      properties:
                                        allowEmpty:
                                          description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                          type: boolean
                                        prune:
                                          description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                          type: boolean
                                        selfHeal:
                                          description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                          type: boolean
                                      type: object
                                    retry:
                                      description: Retry controls failed sync retry behavior
                                      properties:
                                        backoff:
                                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                                          properties:
                                            duration:
                                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                              type: string
                                            factor:
                                              description: Factor is a factor to multiply the base duration after each failed retry
                                              format: int64
                                              type: integer
                                            maxDuration:
                                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                              type: string
                                          type: object
                                        limit:
                                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                          format: int64
                                          type: integer
                                      type: object
                                    syncOptions:
                                      description: Options allow you to specify whole app sync-options
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              required:
                              - destination
                              - project
                              - source
                              type: object
                          required:
                          - metadata
                          - spec
                          type: object
                      required:
                      - elements
                      type: object
                    matrix:
                      description: MatrixGenerator include Other generators
                      properties:
                        generators:
                          items:
                            description: ApplicationSetBaseGenerator include list item info CRD dosn't support recursive types so we need a different type for the matrix generator https://github.com/kubernetes-sigs/controller-tools/issues/477
                            properties:
                              clusterDecisionResource:
                                description: DuckType defines a generator to match against clusters registered with ArgoCD.
                                properties:
                                  configMapRef:
                                    description: ConfigMapRef is a ConfigMap with the duck type definitions needed to retreive the data              this includes apiVersion(group/version), kind, matchKey and validation settings Name is the resource name of the kind, group and version, defined in the ConfigMapRef RequeueAfterSeconds is how long before the duckType will be rechecked for a change
                                    type: string
                                  labelSelector:
                                    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  name:
                                    type: string
                                  requeueAfterSeconds:
                                    format: int64
                                    type: integer
                                  template:
                                    description: ApplicationSetTemplate represents argocd ApplicationSpec
                                    properties:
                                      metadata:
                                        description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          finalizers:
                                            items:
                                              type: string
                                            type: array
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      spec:
                                        description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                                        properties:
                                          destination:
                                            description: Destination is a reference to the target Kubernetes server and namespace
                                            properties:
                                              name:
                                                description: Name is an alternate way of specifying the target cluster by its symbolic name
                                                type: string
                                              namespace:
                                                description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                                type: string
                                              server:
                                                description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                                type: string
                                            type: object
                                          ignoreDifferences:
                                            description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                            items:
                                              description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                              properties:
                                                group:
                                                  type: string
                                                jqPathExpressions:
                                                  items:
                                                    type: string
                                                  type: array
                                                jsonPointers:
                                                  items:
                                                    type: string
                                                  type: array
                                                kind:
                                                  type: string
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              required:
                                              - kind
                                              type: object
                                            type: array
                                          info:
                                            description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          project:
                                            description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                            type: string
                                          revisionHistoryLimit:
                                            description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                            format: int64
                                            type: integer
                                          source:
                                            description: Source is a reference to the location of the application's manifests or chart
                                            properties:
                                              chart:
                                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                                type: string
                                              directory:
                                                description: Directory holds path/directory specific options
                                                properties:
                                                  exclude:
                                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                                    type: string
                                                  include:
                                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                                    type: string
                                                  jsonnet:
                                                    description: Jsonnet holds options specific to Jsonnet
                                                    properties:
                                                      extVars:
                                                        description: ExtVars is a list of Jsonnet External Variables
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                      libs:
                                                        description: Additional library search dirs
                                                        items:
                                                          type: string
                                                        type: array
                                                      tlas:
                                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                    type: object
                                                  recurse:
                                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                                    type: boolean
                                                type: object
                                              helm:
                                                description: Helm holds helm specific options
                                                properties:
                                                  fileParameters:
                                                    description: FileParameters are file parameters to the helm template
                                                    items:
                                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        path:
                                                          description: Path is the path to the file containing the values for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  parameters:
                                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                                    items:
                                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        forceString:
                                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                          type: boolean
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        value:
                                                          description: Value is the value for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  releaseName:
                                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                                    type: string
                                                  valueFiles:
                                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                                    items:
                                                      type: string
                                                    type: array
                                                  values:
                                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                                    type: string
                                                  version:
                                                    description: Version is the Helm version to use for templating (either "2" or "3")
                                                    type: string
                                                type: object
                                              ksonnet:
                                                description: Ksonnet holds ksonnet specific options
                                                properties:
                                                  environment:
                                                    description: Environment is a ksonnet application environment name
                                                    type: string
                                                  parameters:
                                                    description: Parameters are a list of ksonnet component parameter override values
                                                    items:
                                                      description: KsonnetParameter is a ksonnet component parameter
                                                      properties:
                                                        component:
                                                          type: string
                                                        name:
                                                          type: string
                                                        value:
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                type: object
                                              kustomize:
                                                description: Kustomize holds kustomize specific options
                                                properties:
                                                  commonAnnotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                                    type: object
                                                  commonLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                                    type: object
                                                  forceCommonAnnotations:
                                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                                    type: boolean
                                                  forceCommonLabels:
                                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                                    type: boolean
                                                  images:
                                                    description: Images is a list of Kustomize image override specifications
                                                    items:
                                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                                      type: string
                                                    type: array
                                                  namePrefix:
                                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                                    type: string
                                                  nameSuffix:
                                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                                    type: string
                                                  version:
                                                    description: Version controls which version of Kustomize to use for rendering manifests
                                                    type: string
                                                type: object
                                              path:
                                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                                type: string
                                              plugin:
                                                description: ConfigManagementPlugin holds config management plugin specific options
                                                properties:
                                                  env:
                                                    description: Env is a list of environment variable entries
                                                    items:
                                                      description: EnvEntry represents an entry in the application's environment
                                                      properties:
                                                        name:
                                                          description: Name is the name of the variable, usually expressed in uppercase
                                                          type: string
                                                        value:
                                                          description: Value is the value of the variable
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                  name:
                                                    type: string
                                                type: object
                                              repoURL:
                                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                                type: string
                                              targetRevision:
                                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                                type: string
                                            required:
                                            - repoURL
                                            type: object
                                          syncPolicy:
                                            description: SyncPolicy controls when and how a sync will be performed
                                            properties:
                                              automated:
                                                description: Automated will keep an application synced to the target revision
                                                properties:
                                                  allowEmpty:
                                                    description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                                    type: boolean
                                                  prune:
                                                    description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                                    type: boolean
                                                  selfHeal:
                                                    description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                                    type: boolean
                                                type: object
                                              retry:
                                                description: Retry controls failed sync retry behavior
                                                properties:
                                                  backoff:
                                                    description: Backoff controls how to backoff on subsequent retries of failed syncs
                                                    properties:
                                                      duration:
                                                        description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                                        type: string
                                                      factor:
                                                        description: Factor is a factor to multiply the base duration after each failed retry
                                                        format: int64
                                                        type: integer
                                                      maxDuration:
                                                        description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                                        type: string
                                                    type: object
                                                  limit:
                                                    description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                                    format: int64
                                                    type: integer
                                                type: object
                                              syncOptions:
                                                description: Options allow you to specify whole app sync-options
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                        required:
                                        - destination
                                        - project
                                        - source
                                        type: object
                                    required:
                                    - metadata
                                    - spec
                                    type: object
                                  values:
                                    additionalProperties:
                                      type: string
                                    description: Values contains key/value pairs which are passed directly as parameters to the template
                                    type: object
                                required:
                                - configMapRef
                                type: object
                              clusters:
                                description: ClusterGenerator defines a generator to match against clusters registered with ArgoCD.
                                properties:
                                  selector:
                                    description: Selector defines a label selector to match against all clusters registered with ArgoCD. Clusters today are stored as Kubernetes Secrets, thus the Secret labels will be used for matching the selector.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  template:
                                    description: ApplicationSetTemplate represents argocd ApplicationSpec
                                    properties:
                                      metadata:
                                        description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          finalizers:
                                            items:
                                              type: string
                                            type: array
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      spec:
                                        description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                                        properties:
                                          destination:
                                            description: Destination is a reference to the target Kubernetes server and namespace
                                            properties:
                                              name:
                                                description: Name is an alternate way of specifying the target cluster by its symbolic name
                                                type: string
                                              namespace:
                                                description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                                type: string
                                              server:
                                                description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                                type: string
                                            type: object
                                          ignoreDifferences:
                                            description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                            items:
                                              description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                              properties:
                                                group:
                                                  type: string
                                                jqPathExpressions:
                                                  items:
                                                    type: string
                                                  type: array
                                                jsonPointers:
                                                  items:
                                                    type: string
                                                  type: array
                                                kind:
                                                  type: string
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              required:
                                              - kind
                                              type: object
                                            type: array
                                          info:
                                            description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          project:
                                            description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                            type: string
                                          revisionHistoryLimit:
                                            description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                            format: int64
                                            type: integer
                                          source:
                                            description: Source is a reference to the location of the application's manifests or chart
                                            properties:
                                              chart:
                                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                                type: string
                                              directory:
                                                description: Directory holds path/directory specific options
                                                properties:
                                                  exclude:
                                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                                    type: string
                                                  include:
                                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                                    type: string
                                                  jsonnet:
                                                    description: Jsonnet holds options specific to Jsonnet
                                                    properties:
                                                      extVars:
                                                        description: ExtVars is a list of Jsonnet External Variables
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                      libs:
                                                        description: Additional library search dirs
                                                        items:
                                                          type: string
                                                        type: array
                                                      tlas:
                                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                    type: object
                                                  recurse:
                                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                                    type: boolean
                                                type: object
                                              helm:
                                                description: Helm holds helm specific options
                                                properties:
                                                  fileParameters:
                                                    description: FileParameters are file parameters to the helm template
                                                    items:
                                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        path:
                                                          description: Path is the path to the file containing the values for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  parameters:
                                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                                    items:
                                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        forceString:
                                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                          type: boolean
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        value:
                                                          description: Value is the value for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  releaseName:
                                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                                    type: string
                                                  valueFiles:
                                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                                    items:
                                                      type: string
                                                    type: array
                                                  values:
                                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                                    type: string
                                                  version:
                                                    description: Version is the Helm version to use for templating (either "2" or "3")
                                                    type: string
                                                type: object
                                              ksonnet:
                                                description: Ksonnet holds ksonnet specific options
                                                properties:
                                                  environment:
                                                    description: Environment is a ksonnet application environment name
                                                    type: string
                                                  parameters:
                                                    description: Parameters are a list of ksonnet component parameter override values
                                                    items:
                                                      description: KsonnetParameter is a ksonnet component parameter
                                                      properties:
                                                        component:
                                                          type: string
                                                        name:
                                                          type: string
                                                        value:
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                type: object
                                              kustomize:
                                                description: Kustomize holds kustomize specific options
                                                properties:
                                                  commonAnnotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                                    type: object
                                                  commonLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                                    type: object
                                                  forceCommonAnnotations:
                                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                                    type: boolean
                                                  forceCommonLabels:
                                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                                    type: boolean
                                                  images:
                                                    description: Images is a list of Kustomize image override specifications
                                                    items:
                                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                                      type: string
                                                    type: array
                                                  namePrefix:
                                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                                    type: string
                                                  nameSuffix:
                                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                                    type: string
                                                  version:
                                                    description: Version controls which version of Kustomize to use for rendering manifests
                                                    type: string
                                                type: object
                                              path:
                                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                                type: string
                                              plugin:
                                                description: ConfigManagementPlugin holds config management plugin specific options
                                                properties:
                                                  env:
                                                    description: Env is a list of environment variable entries
                                                    items:
                                                      description: EnvEntry represents an entry in the application's environment
                                                      properties:
                                                        name:
                                                          description: Name is the name of the variable, usually expressed in uppercase
                                                          type: string
                                                        value:
                                                          description: Value is the value of the variable
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                  name:
                                                    type: string
                                                type: object
                                              repoURL:
                                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                                type: string
                                              targetRevision:
                                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                                type: string
                                            required:
                                            - repoURL
                                            type: object
                                          syncPolicy:
                                            description: SyncPolicy controls when and how a sync will be performed
                                            properties:
                                              automated:
                                                description: Automated will keep an application synced to the target revision
                                                properties:
                                                  allowEmpty:
                                                    description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                                    type: boolean
                                                  prune:
                                                    description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                                    type: boolean
                                                  selfHeal:
                                                    description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                                    type: boolean
                                                type: object
                                              retry:
                                                description: Retry controls failed sync retry behavior
                                                properties:
                                                  backoff:
                                                    description: Backoff controls how to backoff on subsequent retries of failed syncs
                                                    properties:
                                                      duration:
                                                        description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                                        type: string
                                                      factor:
                                                        description: Factor is a factor to multiply the base duration after each failed retry
                                                        format: int64
                                                        type: integer
                                                      maxDuration:
                                                        description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                                        type: string
                                                    type: object
                                                  limit:
                                                    description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                                    format: int64
                                                    type: integer
                                                type: object
                                              syncOptions:
                                                description: Options allow you to specify whole app sync-options
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                        required:
                                        - destination
                                        - project
                                        - source
                                        type: object
                                    required:
                                    - metadata
                                    - spec
                                    type: object
                                  values:
                                    additionalProperties:
                                      type: string
                                    description: Values contains key/value pairs which are passed directly as parameters to the template
                                    type: object
                                type: object
                              git:
                                properties:
                                  directories:
                                    items:
                                      properties:
                                        exclude:
                                          type: boolean
                                        path:
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    type: array
                                  files:
                                    items:
                                      properties:
                                        path:
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    type: array
                                  repoURL:
                                    type: string
                                  requeueAfterSeconds:
                                    format: int64
                                    type: integer
                                  revision:
                                    type: string
                                  template:
                                    description: ApplicationSetTemplate represents argocd ApplicationSpec
                                    properties:
                                      metadata:
                                        description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          finalizers:
                                            items:
                                              type: string
                                            type: array
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      spec:
                                        description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                                        properties:
                                          destination:
                                            description: Destination is a reference to the target Kubernetes server and namespace
                                            properties:
                                              name:
                                                description: Name is an alternate way of specifying the target cluster by its symbolic name
                                                type: string
                                              namespace:
                                                description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                                type: string
                                              server:
                                                description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                                type: string
                                            type: object
                                          ignoreDifferences:
                                            description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                            items:
                                              description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                              properties:
                                                group:
                                                  type: string
                                                jqPathExpressions:
                                                  items:
                                                    type: string
                                                  type: array
                                                jsonPointers:
                                                  items:
                                                    type: string
                                                  type: array
                                                kind:
                                                  type: string
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              required:
                                              - kind
                                              type: object
                                            type: array
                                          info:
                                            description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          project:
                                            description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                            type: string
                                          revisionHistoryLimit:
                                            description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                            format: int64
                                            type: integer
                                          source:
                                            description: Source is a reference to the location of the application's manifests or chart
                                            properties:
                                              chart:
                                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                                type: string
                                              directory:
                                                description: Directory holds path/directory specific options
                                                properties:
                                                  exclude:
                                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                                    type: string
                                                  include:
                                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                                    type: string
                                                  jsonnet:
                                                    description: Jsonnet holds options specific to Jsonnet
                                                    properties:
                                                      extVars:
                                                        description: ExtVars is a list of Jsonnet External Variables
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                      libs:
                                                        description: Additional library search dirs
                                                        items:
                                                          type: string
                                                        type: array
                                                      tlas:
                                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                    type: object
                                                  recurse:
                                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                                    type: boolean
                                                type: object
                                              helm:
                                                description: Helm holds helm specific options
                                                properties:
                                                  fileParameters:
                                                    description: FileParameters are file parameters to the helm template
                                                    items:
                                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        path:
                                                          description: Path is the path to the file containing the values for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  parameters:
                                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                                    items:
                                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        forceString:
                                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                          type: boolean
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        value:
                                                          description: Value is the value for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  releaseName:
                                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                                    type: string
                                                  valueFiles:
                                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                                    items:
                                                      type: string
                                                    type: array
                                                  values:
                                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                                    type: string
                                                  version:
                                                    description: Version is the Helm version to use for templating (either "2" or "3")
                                                    type: string
                                                type: object
                                              ksonnet:
                                                description: Ksonnet holds ksonnet specific options
                                                properties:
                                                  environment:
                                                    description: Environment is a ksonnet application environment name
                                                    type: string
                                                  parameters:
                                                    description: Parameters are a list of ksonnet component parameter override values
                                                    items:
                                                      description: KsonnetParameter is a ksonnet component parameter
                                                      properties:
                                                        component:
                                                          type: string
                                                        name:
                                                          type: string
                                                        value:
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                type: object
                                              kustomize:
                                                description: Kustomize holds kustomize specific options
                                                properties:
                                                  commonAnnotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                                    type: object
                                                  commonLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                                    type: object
                                                  forceCommonAnnotations:
                                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                                    type: boolean
                                                  forceCommonLabels:
                                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                                    type: boolean
                                                  images:
                                                    description: Images is a list of Kustomize image override specifications
                                                    items:
                                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                                      type: string
                                                    type: array
                                                  namePrefix:
                                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                                    type: string
                                                  nameSuffix:
                                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                                    type: string
                                                  version:
                                                    description: Version controls which version of Kustomize to use for rendering manifests
                                                    type: string
                                                type: object
                                              path:
                                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                                type: string
                                              plugin:
                                                description: ConfigManagementPlugin holds config management plugin specific options
                                                properties:
                                                  env:
                                                    description: Env is a list of environment variable entries
                                                    items:
                                                      description: EnvEntry represents an entry in the application's environment
                                                      properties:
                                                        name:
                                                          description: Name is the name of the variable, usually expressed in uppercase
                                                          type: string
                                                        value:
                                                          description: Value is the value of the variable
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                  name:
                                                    type: string
                                                type: object
                                              repoURL:
                                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                                type: string
                                              targetRevision:
                                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                                type: string
                                            required:
                                            - repoURL
                                            type: object
                                          syncPolicy:
                                            description: SyncPolicy controls when and how a sync will be performed
                                            properties:
                                              automated:
                                                description: Automated will keep an application synced to the target revision
                                                properties:
                                                  allowEmpty:
                                                    description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                                    type: boolean
                                                  prune:
                                                    description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                                    type: boolean
                                                  selfHeal:
                                                    description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                                    type: boolean
                                                type: object
                                              retry:
                                                description: Retry controls failed sync retry behavior
                                                properties:
                                                  backoff:
                                                    description: Backoff controls how to backoff on subsequent retries of failed syncs
                                                    properties:
                                                      duration:
                                                        description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                                        type: string
                                                      factor:
                                                        description: Factor is a factor to multiply the base duration after each failed retry
                                                        format: int64
                                                        type: integer
                                                      maxDuration:
                                                        description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                                        type: string
                                                    type: object
                                                  limit:
                                                    description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                                    format: int64
                                                    type: integer
                                                type: object
                                              syncOptions:
                                                description: Options allow you to specify whole app sync-options
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                        required:
                                        - destination
                                        - project
                                        - source
                                        type: object
                                    required:
                                    - metadata
                                    - spec
                                    type: object
                                required:
                                - repoURL
                                - revision
                                type: object
                              list:
                                description: ListGenerator include items info
                                properties:
                                  elements:
                                    items:
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  template:
                                    description: ApplicationSetTemplate represents argocd ApplicationSpec
                                    properties:
                                      metadata:
                                        description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          finalizers:
                                            items:
                                              type: string
                                            type: array
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      spec:
                                        description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                                        properties:
                                          destination:
                                            description: Destination is a reference to the target Kubernetes server and namespace
                                            properties:
                                              name:
                                                description: Name is an alternate way of specifying the target cluster by its symbolic name
                                                type: string
                                              namespace:
                                                description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                                type: string
                                              server:
                                                description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                                type: string
                                            type: object
                                          ignoreDifferences:
                                            description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                            items:
                                              description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                              properties:
                                                group:
                                                  type: string
                                                jqPathExpressions:
                                                  items:
                                                    type: string
                                                  type: array
                                                jsonPointers:
                                                  items:
                                                    type: string
                                                  type: array
                                                kind:
                                                  type: string
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              required:
                                              - kind
                                              type: object
                                            type: array
                                          info:
                                            description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          project:
                                            description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                            type: string
                                          revisionHistoryLimit:
                                            description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                            format: int64
                                            type: integer
                                          source:
                                            description: Source is a reference to the location of the application's manifests or chart
                                            properties:
                                              chart:
                                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                                type: string
                                              directory:
                                                description: Directory holds path/directory specific options
                                                properties:
                                                  exclude:
                                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                                    type: string
                                                  include:
                                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                                    type: string
                                                  jsonnet:
                                                    description: Jsonnet holds options specific to Jsonnet
                                                    properties:
                                                      extVars:
                                                        description: ExtVars is a list of Jsonnet External Variables
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                      libs:
                                                        description: Additional library search dirs
                                                        items:
                                                          type: string
                                                        type: array
                                                      tlas:
                                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                    type: object
                                                  recurse:
                                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                                    type: boolean
                                                type: object
                                              helm:
                                                description: Helm holds helm specific options
                                                properties:
                                                  fileParameters:
                                                    description: FileParameters are file parameters to the helm template
                                                    items:
                                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        path:
                                                          description: Path is the path to the file containing the values for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  parameters:
                                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                                    items:
                                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        forceString:
                                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                          type: boolean
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        value:
                                                          description: Value is the value for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  releaseName:
                                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                                    type: string
                                                  valueFiles:
                                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                                    items:
                                                      type: string
                                                    type: array
                                                  values:
                                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                                    type: string
                                                  version:
                                                    description: Version is the Helm version to use for templating (either "2" or "3")
                                                    type: string
                                                type: object
                                              ksonnet:
                                                description: Ksonnet holds ksonnet specific options
                                                properties:
                                                  environment:
                                                    description: Environment is a ksonnet application environment name
                                                    type: string
                                                  parameters:
                                                    description: Parameters are a list of ksonnet component parameter override values
                                                    items:
                                                      description: KsonnetParameter is a ksonnet component parameter
                                                      properties:
                                                        component:
                                                          type: string
                                                        name:
                                                          type: string
                                                        value:
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                type: object
                                              kustomize:
                                                description: Kustomize holds kustomize specific options
                                                properties:
                                                  commonAnnotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                                    type: object
                                                  commonLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                                    type: object
                                                  forceCommonAnnotations:
                                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                                    type: boolean
                                                  forceCommonLabels:
                                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                                    type: boolean
                                                  images:
                                                    description: Images is a list of Kustomize image override specifications
                                                    items:
                                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                                      type: string
                                                    type: array
                                                  namePrefix:
                                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                                    type: string
                                                  nameSuffix:
                                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                                    type: string
                                                  version:
                                                    description: Version controls which version of Kustomize to use for rendering manifests
                                                    type: string
                                                type: object
                                              path:
                                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                                type: string
                                              plugin:
                                                description: ConfigManagementPlugin holds config management plugin specific options
                                                properties:
                                                  env:
                                                    description: Env is a list of environment variable entries
                                                    items:
                                                      description: EnvEntry represents an entry in the application's environment
                                                      properties:
                                                        name:
                                                          description: Name is the name of the variable, usually expressed in uppercase
                                                          type: string
                                                        value:
                                                          description: Value is the value of the variable
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                  name:
                                                    type: string
                                                type: object
                                              repoURL:
                                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                                type: string
                                              targetRevision:
                                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                                type: string
                                            required:
                                            - repoURL
                                            type: object
                                          syncPolicy:
                                            description: SyncPolicy controls when and how a sync will be performed
                                            properties:
                                              automated:
                                                description: Automated will keep an application synced to the target revision
                                                properties:
                                                  allowEmpty:
                                                    description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                                    type: boolean
                                                  prune:
                                                    description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                                    type: boolean
                                                  selfHeal:
                                                    description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                                    type: boolean
                                                type: object
                                              retry:
                                                description: Retry controls failed sync retry behavior
                                                properties:
                                                  backoff:
                                                    description: Backoff controls how to backoff on subsequent retries of failed syncs
                                                    properties:
                                                      duration:
                                                        description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                                        type: string
                                                      factor:
                                                        description: Factor is a factor to multiply the base duration after each failed retry
                                                        format: int64
                                                        type: integer
                                                      maxDuration:
                                                        description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                                        type: string
                                                    type: object
                                                  limit:
                                                    description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                                    format: int64
                                                    type: integer
                                                type: object
                                              syncOptions:
                                                description: Options allow you to specify whole app sync-options
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                        required:
                                        - destination
                                        - project
                                        - source
                                        type: object
                                    required:
                                    - metadata
                                    - spec
                                    type: object
                                required:
                                - elements
                                type: object
                              scmProvider:
                                description: SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.
                                properties:
                                  cloneProtocol:
                                    description: Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers necessarily support all protocols.
                                    type: string
                                  filters:
                                    description: Filters for which repos should be considered.
                                    items:
                                      description: SCMProviderGeneratorFilter is a single repository filter. If multiple filter types are set on a single struct, they will be AND'd together. All filters must pass for a repo to be included.
                                      properties:
                                        branchMatch:
                                          description: A regex which must match the branch name.
                                          type: string
                                        labelMatch:
                                          description: A regex which must match at least one label.
                                          type: string
                                        pathsExist:
                                          description: An array of paths, all of which must exist.
                                          items:
                                            type: string
                                          type: array
                                        repositoryMatch:
                                          description: A regex for repo names.
                                          type: string
                                      type: object
                                    type: array
                                  github:
                                    description: Which provider to use and config for it.
                                    properties:
                                      allBranches:
                                        description: Scan all branches instead of just the default branch.
                                        type: boolean
                                      api:
                                        description: The GitHub API URL to talk to. If blank, use https://api.github.com/.
                                        type: string
                                      organization:
                                        description: GitHub org to scan. Required.
                                        type: string
                                      tokenRef:
                                        description: Authentication token reference.
                                        properties:
                                          key:
                                            type: string
                                          secretName:
                                            type: string
                                        required:
                                        - key
                                        - secretName
                                        type: object
                                    required:
                                    - organization
                                    type: object
                                  gitlab:
                                    description: SCMProviderGeneratorGitlab defines a connection info specific to Gitlab.
                                    properties:
                                      allBranches:
                                        description: Scan all branches instead of just the default branch.
                                        type: boolean
                                      api:
                                        description: The Gitlab API URL to talk to.
                                        type: string
                                      group:
                                        description: Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.
                                        type: string
                                      includeSubgroups:
                                        description: Recurse through subgroups (true) or scan only the base group (false).  Defaults to "false"
                                        type: boolean
                                      tokenRef:
                                        description: Authentication token reference.
                                        properties:
                                          key:
                                            type: string
                                          secretName:
                                            type: string
                                        required:
                                        - key
                                        - secretName
                                        type: object
                                    required:
                                    - group
                                    type: object
                                  requeueAfterSeconds:
                                    description: Standard parameters.
                                    format: int64
                                    type: integer
                                  template:
                                    description: ApplicationSetTemplate represents argocd ApplicationSpec
                                    properties:
                                      metadata:
                                        description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          finalizers:
                                            items:
                                              type: string
                                            type: array
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      spec:
                                        description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                                        properties:
                                          destination:
                                            description: Destination is a reference to the target Kubernetes server and namespace
                                            properties:
                                              name:
                                                description: Name is an alternate way of specifying the target cluster by its symbolic name
                                                type: string
                                              namespace:
                                                description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                                type: string
                                              server:
                                                description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                                type: string
                                            type: object
                                          ignoreDifferences:
                                            description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                            items:
                                              description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                              properties:
                                                group:
                                                  type: string
                                                jqPathExpressions:
                                                  items:
                                                    type: string
                                                  type: array
                                                jsonPointers:
                                                  items:
                                                    type: string
                                                  type: array
                                                kind:
                                                  type: string
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              required:
                                              - kind
                                              type: object
                                            type: array
                                          info:
                                            description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          project:
                                            description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                            type: string
                                          revisionHistoryLimit:
                                            description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                            format: int64
                                            type: integer
                                          source:
                                            description: Source is a reference to the location of the application's manifests or chart
                                            properties:
                                              chart:
                                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                                type: string
                                              directory:
                                                description: Directory holds path/directory specific options
                                                properties:
                                                  exclude:
                                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                                    type: string
                                                  include:
                                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                                    type: string
                                                  jsonnet:
                                                    description: Jsonnet holds options specific to Jsonnet
                                                    properties:
                                                      extVars:
                                                        description: ExtVars is a list of Jsonnet External Variables
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                      libs:
                                                        description: Additional library search dirs
                                                        items:
                                                          type: string
                                                        type: array
                                                      tlas:
                                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                                        items:
                                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                          properties:
                                                            code:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                          - name
                                                          - value
                                                          type: object
                                                        type: array
                                                    type: object
                                                  recurse:
                                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                                    type: boolean
                                                type: object
                                              helm:
                                                description: Helm holds helm specific options
                                                properties:
                                                  fileParameters:
                                                    description: FileParameters are file parameters to the helm template
                                                    items:
                                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        path:
                                                          description: Path is the path to the file containing the values for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  parameters:
                                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                                    items:
                                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                                      properties:
                                                        forceString:
                                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                          type: boolean
                                                        name:
                                                          description: Name is the name of the Helm parameter
                                                          type: string
                                                        value:
                                                          description: Value is the value for the Helm parameter
                                                          type: string
                                                      type: object
                                                    type: array
                                                  releaseName:
                                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                                    type: string
                                                  valueFiles:
                                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                                    items:
                                                      type: string
                                                    type: array
                                                  values:
                                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                                    type: string
                                                  version:
                                                    description: Version is the Helm version to use for templating (either "2" or "3")
                                                    type: string
                                                type: object
                                              ksonnet:
                                                description: Ksonnet holds ksonnet specific options
                                                properties:
                                                  environment:
                                                    description: Environment is a ksonnet application environment name
                                                    type: string
                                                  parameters:
                                                    description: Parameters are a list of ksonnet component parameter override values
                                                    items:
                                                      description: KsonnetParameter is a ksonnet component parameter
                                                      properties:
                                                        component:
                                                          type: string
                                                        name:
                                                          type: string
                                                        value:
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                type: object
                                              kustomize:
                                                description: Kustomize holds kustomize specific options
                                                properties:
                                                  commonAnnotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                                    type: object
                                                  commonLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                                    type: object
                                                  forceCommonAnnotations:
                                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                                    type: boolean
                                                  forceCommonLabels:
                                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                                    type: boolean
                                                  images:
                                                    description: Images is a list of Kustomize image override specifications
                                                    items:
                                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                                      type: string
                                                    type: array
                                                  namePrefix:
                                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                                    type: string
                                                  nameSuffix:
                                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                                    type: string
                                                  version:
                                                    description: Version controls which version of Kustomize to use for rendering manifests
                                                    type: string
                                                type: object
                                              path:
                                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                                type: string
                                              plugin:
                                                description: ConfigManagementPlugin holds config management plugin specific options
                                                properties:
                                                  env:
                                                    description: Env is a list of environment variable entries
                                                    items:
                                                      description: EnvEntry represents an entry in the application's environment
                                                      properties:
                                                        name:
                                                          description: Name is the name of the variable, usually expressed in uppercase
                                                          type: string
                                                        value:
                                                          description: Value is the value of the variable
                                                          type: string
                                                      required:
                                                      - name
                                                      - value
                                                      type: object
                                                    type: array
                                                  name:
                                                    type: string
                                                type: object
                                              repoURL:
                                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                                type: string
                                              targetRevision:
                                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                                type: string
                                            required:
                                            - repoURL
                                            type: object
                                          syncPolicy:
                                            description: SyncPolicy controls when and how a sync will be performed
                                            properties:
                                              automated:
                                                description: Automated will keep an application synced to the target revision
                                                properties:
                                                  allowEmpty:
                                                    description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                                    type: boolean
                                                  prune:
                                                    description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                                    type: boolean
                                                  selfHeal:
                                                    description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                                    type: boolean
                                                type: object
                                              retry:
                                                description: Retry controls failed sync retry behavior
                                                properties:
                                                  backoff:
                                                    description: Backoff controls how to backoff on subsequent retries of failed syncs
                                                    properties:
                                                      duration:
                                                        description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                                        type: string
                                                      factor:
                                                        description: Factor is a factor to multiply the base duration after each failed retry
                                                        format: int64
                                                        type: integer
                                                      maxDuration:
                                                        description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                                        type: string
                                                    type: object
                                                  limit:
                                                    description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                                    format: int64
                                                    type: integer
                                                type: object
                                              syncOptions:
                                                description: Options allow you to specify whole app sync-options
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                        required:
                                        - destination
                                        - project
                                        - source
                                        type: object
                                    required:
                                    - metadata
                                    - spec
                                    type: object
                                type: object
                            type: object
                          type: array
                        template:
                          description: ApplicationSetTemplate represents argocd ApplicationSpec
                          properties:
                            metadata:
                              description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                              properties:
                                destination:
                                  description: Destination is a reference to the target Kubernetes server and namespace
                                  properties:
                                    name:
                                      description: Name is an alternate way of specifying the target cluster by its symbolic name
                                      type: string
                                    namespace:
                                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                      type: string
                                    server:
                                      description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                      type: string
                                  type: object
                                ignoreDifferences:
                                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                  items:
                                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                    properties:
                                      group:
                                        type: string
                                      jqPathExpressions:
                                        items:
                                          type: string
                                        type: array
                                      jsonPointers:
                                        items:
                                          type: string
                                        type: array
                                      kind:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    required:
                                    - kind
                                    type: object
                                  type: array
                                info:
                                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                project:
                                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                  type: string
                                revisionHistoryLimit:
                                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                  format: int64
                                  type: integer
                                source:
                                  description: Source is a reference to the location of the application's manifests or chart
                                  properties:
                                    chart:
                                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                      type: string
                                    directory:
                                      description: Directory holds path/directory specific options
                                      properties:
                                        exclude:
                                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                          type: string
                                        include:
                                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                          type: string
                                        jsonnet:
                                          description: Jsonnet holds options specific to Jsonnet
                                          properties:
                                            extVars:
                                              description: ExtVars is a list of Jsonnet External Variables
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            libs:
                                              description: Additional library search dirs
                                              items:
                                                type: string
                                              type: array
                                            tlas:
                                              description: TLAS is a list of Jsonnet Top-level Arguments
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                          type: object
                                        recurse:
                                          description: Recurse specifies whether to scan a directory recursively for manifests
                                          type: boolean
                                      type: object
                                    helm:
                                      description: Helm holds helm specific options
                                      properties:
                                        fileParameters:
                                          description: FileParameters are file parameters to the helm template
                                          items:
                                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                            properties:
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              path:
                                                description: Path is the path to the file containing the values for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        parameters:
                                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                          items:
                                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                            properties:
                                              forceString:
                                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                type: boolean
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              value:
                                                description: Value is the value for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        releaseName:
                                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                          type: string
                                        valueFiles:
                                          description: ValuesFiles is a list of Helm value files to use when generating a template
                                          items:
                                            type: string
                                          type: array
                                        values:
                                          description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                          type: string
                                        version:
                                          description: Version is the Helm version to use for templating (either "2" or "3")
                                          type: string
                                      type: object
                                    ksonnet:
                                      description: Ksonnet holds ksonnet specific options
                                      properties:
                                        environment:
                                          description: Environment is a ksonnet application environment name
                                          type: string
                                        parameters:
                                          description: Parameters are a list of ksonnet component parameter override values
                                          items:
                                            description: KsonnetParameter is a ksonnet component parameter
                                            properties:
                                              component:
                                                type: string
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    kustomize:
                                      description: Kustomize holds kustomize specific options
                                      properties:
                                        commonAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                          type: object
                                        commonLabels:
                                          additionalProperties:
                                            type: string
                                          description: CommonLabels is a list of additional labels to add to rendered manifests
                                          type: object
                                        forceCommonAnnotations:
                                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                          type: boolean
                                        forceCommonLabels:
                                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                          type: boolean
                                        images:
                                          description: Images is a list of Kustomize image override specifications
                                          items:
                                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                            type: string
                                          type: array
                                        namePrefix:
                                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                                          type: string
                                        nameSuffix:
                                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                                          type: string
                                        version:
                                          description: Version controls which version of Kustomize to use for rendering manifests
                                          type: string
                                      type: object
                                    path:
                                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                      type: string
                                    plugin:
                                      description: ConfigManagementPlugin holds config management plugin specific options
                                      properties:
                                        env:
                                          description: Env is a list of environment variable entries
                                          items:
                                            description: EnvEntry represents an entry in the application's environment
                                            properties:
                                              name:
                                                description: Name is the name of the variable, usually expressed in uppercase
                                                type: string
                                              value:
                                                description: Value is the value of the variable
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      type: object
                                    repoURL:
                                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                      type: string
                                    targetRevision:
                                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                      type: string
                                  required:
                                  - repoURL
                                  type: object
                                syncPolicy:
                                  description: SyncPolicy controls when and how a sync will be performed
                                  properties:
                                    automated:
                                      description: Automated will keep an application synced to the target revision
                                      properties:
                                        allowEmpty:
                                          description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                          type: boolean
                                        prune:
                                          description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                          type: boolean
                                        selfHeal:
                                          description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                          type: boolean
                                      type: object
                                    retry:
                                      description: Retry controls failed sync retry behavior
                                      properties:
                                        backoff:
                                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                                          properties:
                                            duration:
                                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                              type: string
                                            factor:
                                              description: Factor is a factor to multiply the base duration after each failed retry
                                              format: int64
                                              type: integer
                                            maxDuration:
                                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                              type: string
                                          type: object
                                        limit:
                                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                          format: int64
                                          type: integer
                                      type: object
                                    syncOptions:
                                      description: Options allow you to specify whole app sync-options
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              required:
                              - destination
                              - project
                              - source
                              type: object
                          required:
                          - metadata
                          - spec
                          type: object
                      required:
                      - generators
                      type: object
                    scmProvider:
                      description: SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.
                      properties:
                        cloneProtocol:
                          description: Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers necessarily support all protocols.
                          type: string
                        filters:
                          description: Filters for which repos should be considered.
                          items:
                            description: SCMProviderGeneratorFilter is a single repository filter. If multiple filter types are set on a single struct, they will be AND'd together. All filters must pass for a repo to be included.
                            properties:
                              branchMatch:
                                description: A regex which must match the branch name.
                                type: string
                              labelMatch:
                                description: A regex which must match at least one label.
                                type: string
                              pathsExist:
                                description: An array of paths, all of which must exist.
                                items:
                                  type: string
                                type: array
                              repositoryMatch:
                                description: A regex for repo names.
                                type: string
                            type: object
                          type: array
                        github:
                          description: Which provider to use and config for it.
                          properties:
                            allBranches:
                              description: Scan all branches instead of just the default branch.
                              type: boolean
                            api:
                              description: The GitHub API URL to talk to. If blank, use https://api.github.com/.
                              type: string
                            organization:
                              description: GitHub org to scan. Required.
                              type: string
                            tokenRef:
                              description: Authentication token reference.
                              properties:
                                key:
                                  type: string
                                secretName:
                                  type: string
                              required:
                              - key
                              - secretName
                              type: object
                          required:
                          - organization
                          type: object
                        gitlab:
                          description: SCMProviderGeneratorGitlab defines a connection info specific to Gitlab.
                          properties:
                            allBranches:
                              description: Scan all branches instead of just the default branch.
                              type: boolean
                            api:
                              description: The Gitlab API URL to talk to.
                              type: string
                            group:
                              description: Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.
                              type: string
                            includeSubgroups:
                              description: Recurse through subgroups (true) or scan only the base group (false).  Defaults to "false"
                              type: boolean
                            tokenRef:
                              description: Authentication token reference.
                              properties:
                                key:
                                  type: string
                                secretName:
                                  type: string
                              required:
                              - key
                              - secretName
                              type: object
                          required:
                          - group
                          type: object
                        requeueAfterSeconds:
                          description: Standard parameters.
                          format: int64
                          type: integer
                        template:
                          description: ApplicationSetTemplate represents argocd ApplicationSpec
                          properties:
                            metadata:
                              description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                              properties:
                                destination:
                                  description: Destination is a reference to the target Kubernetes server and namespace
                                  properties:
                                    name:
                                      description: Name is an alternate way of specifying the target cluster by its symbolic name
                                      type: string
                                    namespace:
                                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                                      type: string
                                    server:
                                      description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                                      type: string
                                  type: object
                                ignoreDifferences:
                                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                                  items:
                                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                                    properties:
                                      group:
                                        type: string
                                      jqPathExpressions:
                                        items:
                                          type: string
                                        type: array
                                      jsonPointers:
                                        items:
                                          type: string
                                        type: array
                                      kind:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    required:
                                    - kind
                                    type: object
                                  type: array
                                info:
                                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                project:
                                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                                  type: string
                                revisionHistoryLimit:
                                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                                  format: int64
                                  type: integer
                                source:
                                  description: Source is a reference to the location of the application's manifests or chart
                                  properties:
                                    chart:
                                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                      type: string
                                    directory:
                                      description: Directory holds path/directory specific options
                                      properties:
                                        exclude:
                                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                          type: string
                                        include:
                                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                          type: string
                                        jsonnet:
                                          description: Jsonnet holds options specific to Jsonnet
                                          properties:
                                            extVars:
                                              description: ExtVars is a list of Jsonnet External Variables
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            libs:
                                              description: Additional library search dirs
                                              items:
                                                type: string
                                              type: array
                                            tlas:
                                              description: TLAS is a list of Jsonnet Top-level Arguments
                                              items:
                                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                                properties:
                                                  code:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                          type: object
                                        recurse:
                                          description: Recurse specifies whether to scan a directory recursively for manifests
                                          type: boolean
                                      type: object
                                    helm:
                                      description: Helm holds helm specific options
                                      properties:
                                        fileParameters:
                                          description: FileParameters are file parameters to the helm template
                                          items:
                                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                            properties:
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              path:
                                                description: Path is the path to the file containing the values for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        parameters:
                                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                          items:
                                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                            properties:
                                              forceString:
                                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                                type: boolean
                                              name:
                                                description: Name is the name of the Helm parameter
                                                type: string
                                              value:
                                                description: Value is the value for the Helm parameter
                                                type: string
                                            type: object
                                          type: array
                                        releaseName:
                                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                          type: string
                                        valueFiles:
                                          description: ValuesFiles is a list of Helm value files to use when generating a template
                                          items:
                                            type: string
                                          type: array
                                        values:
                                          description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                          type: string
                                        version:
                                          description: Version is the Helm version to use for templating (either "2" or "3")
                                          type: string
                                      type: object
                                    ksonnet:
                                      description: Ksonnet holds ksonnet specific options
                                      properties:
                                        environment:
                                          description: Environment is a ksonnet application environment name
                                          type: string
                                        parameters:
                                          description: Parameters are a list of ksonnet component parameter override values
                                          items:
                                            description: KsonnetParameter is a ksonnet component parameter
                                            properties:
                                              component:
                                                type: string
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    kustomize:
                                      description: Kustomize holds kustomize specific options
                                      properties:
                                        commonAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                          type: object
                                        commonLabels:
                                          additionalProperties:
                                            type: string
                                          description: CommonLabels is a list of additional labels to add to rendered manifests
                                          type: object
                                        forceCommonAnnotations:
                                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                          type: boolean
                                        forceCommonLabels:
                                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                          type: boolean
                                        images:
                                          description: Images is a list of Kustomize image override specifications
                                          items:
                                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                            type: string
                                          type: array
                                        namePrefix:
                                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                                          type: string
                                        nameSuffix:
                                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                                          type: string
                                        version:
                                          description: Version controls which version of Kustomize to use for rendering manifests
                                          type: string
                                      type: object
                                    path:
                                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                      type: string
                                    plugin:
                                      description: ConfigManagementPlugin holds config management plugin specific options
                                      properties:
                                        env:
                                          description: Env is a list of environment variable entries
                                          items:
                                            description: EnvEntry represents an entry in the application's environment
                                            properties:
                                              name:
                                                description: Name is the name of the variable, usually expressed in uppercase
                                                type: string
                                              value:
                                                description: Value is the value of the variable
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      type: object
                                    repoURL:
                                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                      type: string
                                    targetRevision:
                                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                      type: string
                                  required:
                                  - repoURL
                                  type: object
                                syncPolicy:
                                  description: SyncPolicy controls when and how a sync will be performed
                                  properties:
                                    automated:
                                      description: Automated will keep an application synced to the target revision
                                      properties:
                                        allowEmpty:
                                          description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                          type: boolean
                                        prune:
                                          description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                          type: boolean
                                        selfHeal:
                                          description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                          type: boolean
                                      type: object
                                    retry:
                                      description: Retry controls failed sync retry behavior
                                      properties:
                                        backoff:
                                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                                          properties:
                                            duration:
                                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                              type: string
                                            factor:
                                              description: Factor is a factor to multiply the base duration after each failed retry
                                              format: int64
                                              type: integer
                                            maxDuration:
                                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                              type: string
                                          type: object
                                        limit:
                                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                          format: int64
                                          type: integer
                                      type: object
                                    syncOptions:
                                      description: Options allow you to specify whole app sync-options
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              required:
                              - destination
                              - project
                              - source
                              type: object
                          required:
                          - metadata
                          - spec
                          type: object
                      type: object
                  type: object
                type: array
              syncPolicy:
                description: ApplicationSetSyncPolicy configures how generated Applications will relate to their ApplicationSet.
                properties:
                  preserveResourcesOnDeletion:
                    description: PreserveResourcesOnDeletion will preserve resources on deletion. If PreserveResourcesOnDeletion is set to true, these Applications will not be deleted.
                    type: boolean
                type: object
              template:
                description: ApplicationSetTemplate represents argocd ApplicationSpec
                properties:
                  metadata:
                    description: ApplicationSetTemplateMeta represents the Argo CD application fields that may be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      finalizers:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                  spec:
                    description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
                    properties:
                      destination:
                        description: Destination is a reference to the target Kubernetes server and namespace
                        properties:
                          name:
                            description: Name is an alternate way of specifying the target cluster by its symbolic name
                            type: string
                          namespace:
                            description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                            type: string
                          server:
                            description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                            type: string
                        type: object
                      ignoreDifferences:
                        description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                        items:
                          description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                          properties:
                            group:
                              type: string
                            jqPathExpressions:
                              items:
                                type: string
                              type: array
                            jsonPointers:
                              items:
                                type: string
                              type: array
                            kind:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - kind
                          type: object
                        type: array
                      info:
                        description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      project:
                        description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                        type: string
                      revisionHistoryLimit:
                        description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                        format: int64
                        type: integer
                      source:
                        description: Source is a reference to the location of the application's manifests or chart
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block
                                type: string
                              version:
                                description: Version is the Helm version to use for templating (either "2" or "3")
                                type: string
                            type: object
                          ksonnet:
                            description: Ksonnet holds ksonnet specific options
                            properties:
                              environment:
                                description: Environment is a ksonnet application environment name
                                type: string
                              parameters:
                                description: Parameters are a list of ksonnet component parameter override values
                                items:
                                  description: KsonnetParameter is a ksonnet component parameter
                                  properties:
                                    component:
                                      type: string
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override specifications
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: ConfigManagementPlugin holds config management plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              name:
                                type: string
                            type: object
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                        required:
                        - repoURL
                        type: object
                      syncPolicy:
                        description: SyncPolicy controls when and how a sync will be performed
                        properties:
                          automated:
                            description: Automated will keep an application synced to the target revision
                            properties:
                              allowEmpty:
                                description: 'AllowEmpty allows apps have zero live resources (default: false)'
                                type: boolean
                              prune:
                                description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                                type: boolean
                              selfHeal:
                                description: 'SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                                type: boolean
                            type: object
                          retry:
                            description: Retry controls failed sync retry behavior
                            properties:
                              backoff:
                                description: Backoff controls how to backoff on subsequent retries of failed syncs
                                properties:
                                  duration:
                                    description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                    type: string
                                  factor:
                                    description: Factor is a factor to multiply the base duration after each failed retry
                                    format: int64
                                    type: integer
                                  maxDuration:
                                    description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                    type: string
                                type: object
                              limit:
                                description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                                format: int64
                                type: integer
                            type: object
                          syncOptions:
                            description: Options allow you to specify whole app sync-options
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                    - destination
                    - project
                    - source
                    type: object
                required:
                - metadata
                - spec
                type: object
            required:
            - generators
            - template
            type: object
          status:
            description: ApplicationSetStatus defines the observed state of ApplicationSet
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: appprojects.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: appprojects.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: AppProject
    listKind: AppProjectList
    plural: appprojects
    shortNames:
    - appproj
    - appprojs
    singular: appproject
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'AppProject provides a logical grouping of applications, providing controls for: * where the apps may deploy to (cluster whitelist) * what may be deployed (repository whitelist, resource whitelist/blacklist) * who can access these applications (roles, OIDC group claims bindings) * and what they can do (RBAC policies) * automation access to these roles (JWT tokens)'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppProjectSpec is the specification of an AppProject
            properties:
              clusterResourceBlacklist:
                description: ClusterResourceBlacklist contains list of blacklisted cluster level resources
                items:
                  description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                type: array
              clusterResourceWhitelist:
                description: ClusterResourceWhitelist contains list of whitelisted cluster level resources
                items:
                  description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                type: array
              description:
                description: Description contains optional project description
                type: string
              destinations:
                description: Destinations contains list of destinations available for deployment
                items:
                  description: ApplicationDestination holds information about the application's destination
                  properties:
                    name:
                      description: Name is an alternate way of specifying the target cluster by its symbolic name
                      type: string
                    namespace:
                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                      type: string
                    server:
                      description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                      type: string
                  type: object
                type: array
              namespaceResourceBlacklist:
                description: NamespaceResourceBlacklist contains list of blacklisted namespace level resources
                items:
                  description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                type: array
              namespaceResourceWhitelist:
                description: NamespaceResourceWhitelist contains list of whitelisted namespace level resources
                items:
                  description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                type: array
              orphanedResources:
                description: OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
                properties:
                  ignore:
                    description: Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
                    items:
                      description: OrphanedResourceKey is a reference to a resource to be ignored from
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                  warn:
                    description: Warn indicates if warning condition should be created for apps which have orphaned resources
                    type: boolean
                type: object
              roles:
                description: Roles are user defined RBAC roles associated with this project
                items:
                  description: ProjectRole represents a role that has access to a project
                  properties:
                    description:
                      description: Description is a description of the role
                      type: string
                    groups:
                      description: Groups are a list of OIDC group claims bound to this role
                      items:
                        type: string
                      type: array
                    jwtTokens:
                      description: JWTTokens are a list of generated JWT tokens bound to this role
                      items:
                        description: JWTToken holds the issuedAt and expiresAt values of a token
                        properties:
                          exp:
                            format: int64
                            type: integer
                          iat:
                            format: int64
                            type: integer
                          id:
                            type: string
                        required:
                        - iat
                        type: object
                      type: array
                    name:
                      description: Name is a name for this role
                      type: string
                    policies:
                      description: Policies Stores a list of casbin formated strings that define access policies for the role in the project
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              signatureKeys:
                description: SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
                items:
                  description: SignatureKey is the specification of a key required to verify commit signatures with
                  properties:
                    keyID:
                      description: The ID of the key in hexadecimal notation
                      type: string
                  required:
                  - keyID
                  type: object
                type: array
              sourceRepos:
                description: SourceRepos contains list of repository URLs which can be used for deployment
                items:
                  type: string
                type: array
              syncWindows:
                description: SyncWindows controls when syncs can be run for apps in this project
                items:
                  description: SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
                  properties:
                    applications:
                      description: Applications contains a list of applications that the window will apply to
                      items:
                        type: string
                      type: array
                    clusters:
                      description: Clusters contains a list of clusters that the window will apply to
                      items:
                        type: string
                      type: array
                    duration:
                      description: Duration is the amount of time the sync window will be open
                      type: string
                    kind:
                      description: Kind defines if the window allows or blocks syncs
                      type: string
                    manualSync:
                      description: ManualSync enables manual syncs when they would otherwise be blocked
                      type: boolean
                    namespaces:
                      description: Namespaces contains a list of namespaces that the window will apply to
                      items:
                        type: string
                      type: array
                    schedule:
                      description: Schedule is the time the window will begin, specified in cron format
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: AppProjectStatus contains status information for AppProject CRs
            properties:
              jwtTokensByRole:
                additionalProperties:
                  description: JWTTokens represents a list of JWT tokens
                  properties:
                    items:
                      items:
                        description: JWTToken holds the issuedAt and expiresAt values of a token
                        properties:
                          exp:
                            format: int64
                            type: integer
                          iat:
                            format: int64
                            type: integer
                          id:
                            type: string
                        required:
                        - iat
                        type: object
                      type: array
                  type: object
                description: JWTTokensByRole contains a list of JWT tokens issued for a given role
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: argocdexports.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: ArgoCDExport
    listKind: ArgoCDExportList
    plural: argocdexports
    singular: argocdexport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ArgoCDExport is the Schema for the argocdexports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ArgoCDExportSpec defines the desired state of ArgoCDExport
            properties:
              argocd:
                description: Argocd is the name of the ArgoCD instance to export.
                type: string
              image:
                description: Image is the container image to use for the export Job.
                type: string
              schedule:
                description: Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                type: string
              storage:
                description: Storage defines the storage configuration options.
                properties:
                  backend:
                    description: Backend defines the storage backend to use, must be "local" (the default), "aws", "azure" or "gcp".
                    type: string
                  pvc:
                    description: PVC is the desired characteristics for a PersistentVolumeClaim.
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                        type: string
                    type: object
                  secretName:
                    description: SecretName is the name of a Secret with encryption key, credentials, etc.
                    type: string
                type: object
              version:
                description: Version is the tag/digest to use for the export Job container image.
                type: string
            required:
            - argocd
            type: object
          status:
            description: ArgoCDExportStatus defines the observed state of ArgoCDExport
            properties:
              phase:
                description: 'Phase is a simple, high-level summary of where the ArgoCDExport is in its lifecycle. There are five possible phase values: Pending: The ArgoCDExport has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the containers for the ArgoCDExport are still running, or in the process of starting or restarting. Succeeded: All containers for the ArgoCDExport have terminated in success, and will not be restarted. Failed: At least one container has terminated in failure, either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the ArgoCDExport could not be obtained.'
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: argocds.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: ArgoCD
    listKind: ArgoCDList
    plural: argocds
    singular: argocd
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ArgoCD is the Schema for the argocds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ArgoCDSpec defines the desired state of ArgoCD
            properties:
              applicationInstanceLabelKey:
                description: ApplicationInstanceLabelKey is the key name where Argo CD injects the app name as a tracking label.
                type: string
              applicationSet:
                description: ArgoCDApplicationSet defines whether the Argo CD ApplicationSet controller should be installed.
                properties:
                  image:
                    description: Image is the Argo CD ApplicationSet image (optional)
                    type: string
                  logLevel:
                    description: LogLevel describes the log level that should be used by the ApplicationSet controller. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug,info, error, and warn.
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required by the container for ApplicationSet.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  version:
                    description: Version is the Argo CD ApplicationSet image tag. (optional)
                    type: string
                type: object
              configManagementPlugins:
                description: ConfigManagementPlugins is used to specify additional config management plugins.
                type: string
              controller:
                description: Controller defines the Application Controller options for ArgoCD.
                properties:
                  appSync:
                    description: "AppSync is used to control the sync frequency, by default the ArgoCD controller polls Git every 3m by default. \n Set this to a duration, e.g. 10m or 600s to control the synchronisation frequency."
                    type: string
                  env:
                    description: Env lets you specify environment for application controller pods
                    items:
                      description: EnvVar represents an environment variable present in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value. Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes, optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  logFormat:
                    description: LogFormat refers to the log format used by the Application Controller component. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json.
                    type: string
                  logLevel:
                    description: LogLevel refers to the log level used by the Application Controller component. Defaults to ArgoCDDefaultLogLevel if not configured. Valid options are debug, info, error, and warn.
                    type: string
                  parallelismLimit:
                    description: ParallelismLimit defines the limit for parallel kubectl operations
                    format: int32
                    type: integer
                  processors:
                    description: Processors contains the options for the Application Controller processors.
                    properties:
                      operation:
                        description: Operation is the number of application operation processors.
                        format: int32
                        type: integer
                      status:
                        description: Status is the number of application status processors.
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Resources defines the Compute Resources required by the container for the Application Controller.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  sharding:
                    description: Sharding contains the options for the Application Controller sharding configuration.
                    properties:
                      enabled:
                        description: Enabled defines whether sharding should be enabled on the Application Controller component.
                        type: boolean
                      replicas:
                        description: Replicas defines the number of replicas to run in the Application controller shard.
                        format: int32
                        type: integer
                    type: object
                type: object
              dex:
                description: Dex defines the Dex server options for ArgoCD.
                properties:
                  config:
                    description: Config is the dex connector configuration.
                    type: string
                  groups:
                    description: Optional list of required groups a user must be a member of
                    items:
                      type: string
                    type: array
                  image:
                    description: Image is the Dex container image.
                    type: string
                  openShiftOAuth:
                    description: OpenShiftOAuth enables OpenShift OAuth authentication for the Dex server.
                    type: boolean
                  resources:
                    description: Resources defines the Compute Resources required by the container for Dex.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  version:
                    description: Version is the Dex container image tag.
                    type: string
                type: object
              disableAdmin:
                description: DisableAdmin will disable the admin user.
                type: boolean
              gaAnonymizeUsers:
                description: GAAnonymizeUsers toggles user IDs being hashed before sending to google analytics.
                type: boolean
              gaTrackingID:
                description: GATrackingID is the google analytics tracking ID to use.
                type: string
              grafana:
                description: Grafana defines the Grafana server options for ArgoCD.
                properties:
                  enabled:
                    description: Enabled will toggle Grafana support globally for ArgoCD.
                    type: boolean
                  host:
                    description: Host is the hostname to use for Ingress/Route resources.
                    type: string
                  image:
                    description: Image is the Grafana container image.
                    type: string
                  ingress:
                    description: Ingress defines the desired state for an Ingress for the Grafana component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to apply to the Ingress.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the Ingress.
                        type: boolean
                      path:
                        description: Path used for the Ingress resource.
                        type: string
                      tls:
                        description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                        items:
                          description: IngressTLS describes the transport layer security associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            secretName:
                              description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - enabled
                    type: object
                  resources:
                    description: Resources defines the Compute Resources required by the container for Grafana.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  route:
                    description: Route defines the desired state for an OpenShift Route for the Grafana component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to use for the Route resource.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the OpenShift Route.
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is the map of labels to use for the Route resource
                        type: object
                      path:
                        description: Path the router watches for, to route traffic for to the service.
                        type: string
                      tls:
                        description: TLS provides the ability to configure certificates and termination for the Route.
                        properties:
                          caCertificate:
                            description: caCertificate provides the cert authority certificate contents
                            type: string
                          certificate:
                            description: certificate provides certificate contents
                            type: string
                          destinationCACertificate:
                            description: destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
                            type: string
                          insecureEdgeTerminationPolicy:
                            description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. \n * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
                            type: string
                          key:
                            description: key provides key file contents
                            type: string
                          termination:
                            description: termination indicates termination type.
                            type: string
                        required:
                        - termination
                        type: object
                      wildcardPolicy:
                        description: WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed.
                        type: string
                    required:
                    - enabled
                    type: object
                  size:
                    description: Size is the replica count for the Grafana Deployment.
                    format: int32
                    type: integer
                  version:
                    description: Version is the Grafana container image tag.
                    type: string
                required:
                - enabled
                type: object
              ha:
                description: HA options for High Availability support for the Redis component.
                properties:
                  enabled:
                    description: Enabled will toggle HA support globally for Argo CD.
                    type: boolean
                  redisProxyImage:
                    description: RedisProxyImage is the Redis HAProxy container image.
                    type: string
                  redisProxyVersion:
                    description: RedisProxyVersion is the Redis HAProxy container image tag.
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required by the container for HA.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                required:
                - enabled
                type: object
              helpChatText:
                description: HelpChatText is the text for getting chat help, defaults to "Chat now!"
                type: string
              helpChatURL:
                description: HelpChatURL is the URL for getting chat help, this will typically be your Slack channel for support.
                type: string
              image:
                description: Image is the ArgoCD container image for all ArgoCD components.
                type: string
              import:
                description: Import is the import/restore options for ArgoCD.
                properties:
                  name:
                    description: Name of an ArgoCDExport from which to import data.
                    type: string
                  namespace:
                    description: Namespace for the ArgoCDExport, defaults to the same namespace as the ArgoCD.
                    type: string
                required:
                - name
                type: object
              initialRepositories:
                description: InitialRepositories to configure Argo CD with upon creation of the cluster.
                type: string
              initialSSHKnownHosts:
                description: InitialSSHKnownHosts defines the SSH known hosts data upon creation of the cluster for connecting Git repositories via SSH.
                properties:
                  excludedefaulthosts:
                    description: ExcludeDefaultHosts describes whether you would like to include the default list of SSH Known Hosts provided by ArgoCD.
                    type: boolean
                  keys:
                    description: Keys describes a custom set of SSH Known Hosts that you would like to have included in your ArgoCD server.
                    type: string
                type: object
              kustomizeBuildOptions:
                description: KustomizeBuildOptions is used to specify build options/parameters to use with `kustomize build`.
                type: string
              kustomizeVersions:
                description: KustomizeVersions is a listing of configured versions of Kustomize to be made available within ArgoCD.
                items:
                  description: KustomizeVersionSpec is used to specify information about a kustomize version to be used within ArgoCD.
                  properties:
                    path:
                      description: Path is the path to a configured kustomize version on the filesystem of your repo server.
                      type: string
                    version:
                      description: Version is a configured kustomize version in the format of vX.Y.Z
                      type: string
                  type: object
                type: array
              nodePlacement:
                description: NodePlacement defines NodeSelectors and Taints for Argo CD workloads
                properties:
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector is a field of PodSpec, it is a map of key value pairs used for node selection
                    type: object
                  tolerations:
                    description: Tolerations allow the pods to schedule onto nodes with matching taints
                    items:
                      description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              oidcConfig:
                description: OIDCConfig is the OIDC configuration as an alternative to dex.
                type: string
              prometheus:
                description: Prometheus defines the Prometheus server options for ArgoCD.
                properties:
                  enabled:
                    description: Enabled will toggle Prometheus support globally for ArgoCD.
                    type: boolean
                  host:
                    description: Host is the hostname to use for Ingress/Route resources.
                    type: string
                  ingress:
                    description: Ingress defines the desired state for an Ingress for the Prometheus component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to apply to the Ingress.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the Ingress.
                        type: boolean
                      path:
                        description: Path used for the Ingress resource.
                        type: string
                      tls:
                        description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                        items:
                          description: IngressTLS describes the transport layer security associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            secretName:
                              description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - enabled
                    type: object
                  route:
                    description: Route defines the desired state for an OpenShift Route for the Prometheus component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to use for the Route resource.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the OpenShift Route.
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is the map of labels to use for the Route resource
                        type: object
                      path:
                        description: Path the router watches for, to route traffic for to the service.
                        type: string
                      tls:
                        description: TLS provides the ability to configure certificates and termination for the Route.
                        properties:
                          caCertificate:
                            description: caCertificate provides the cert authority certificate contents
                            type: string
                          certificate:
                            description: certificate provides certificate contents
                            type: string
                          destinationCACertificate:
                            description: destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
                            type: string
                          insecureEdgeTerminationPolicy:
                            description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. \n * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
                            type: string
                          key:
                            description: key provides key file contents
                            type: string
                          termination:
                            description: termination indicates termination type.
                            type: string
                        required:
                        - termination
                        type: object
                      wildcardPolicy:
                        description: WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed.
                        type: string
                    required:
                    - enabled
                    type: object
                  size:
                    description: Size is the replica count for the Prometheus StatefulSet.
                    format: int32
                    type: integer
                required:
                - enabled
                type: object
              rbac:
                description: RBAC defines the RBAC configuration for Argo CD.
                properties:
                  defaultPolicy:
                    description: DefaultPolicy is the name of the default role which Argo CD will falls back to, when authorizing API requests (optional). If omitted or empty, users may be still be able to login, but will see no apps, projects, etc...
                    type: string
                  policy:
                    description: 'Policy is CSV containing user-defined RBAC policies and role definitions. Policy rules are in the form:   p, subject, resource, action, object, effect Role definitions and bindings are in the form:   g, subject, inherited-subject See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md for additional information.'
                    type: string
                  scopes:
                    description: 'Scopes controls which OIDC scopes to examine during rbac enforcement (in addition to `sub` scope). If omitted, defaults to: ''[groups]''.'
                    type: string
                type: object
              redis:
                description: Redis defines the Redis server options for ArgoCD.
                properties:
                  image:
                    description: Image is the Redis container image.
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required by the container for Redis.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  version:
                    description: Version is the Redis container image tag.
                    type: string
                type: object
              repo:
                description: Repo defines the repo server options for Argo CD.
                properties:
                  autotls:
                    description: 'AutoTLS specifies the method to use for automatic TLS configuration for the repo server The value specified here can currently be: - openshift - Use the OpenShift service CA to request TLS config'
                    type: string
                  env:
                    description: Env lets you specify environment for repo server pods
                    items:
                      description: EnvVar represents an environment variable present in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value. Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes, optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  execTimeout:
                    description: ExecTimeout specifies the timeout in seconds for tool execution
                    type: integer
                  image:
                    description: Image is the ArgoCD Repo Server container image.
                    type: string
                  logFormat:
                    description: LogFormat describes the log format that should be used by the Repo Server. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json.
                    type: string
                  logLevel:
                    description: LogLevel describes the log level that should be used by the Repo Server. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug, info, error, and warn.
                    type: string
                  mountsatoken:
                    description: MountSAToken describes whether you would like to have the Repo server mount the service account token
                    type: boolean
                  resources:
                    description: Resources defines the Compute Resources required by the container for Redis.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceaccount:
                    description: ServiceAccount defines the ServiceAccount user that you would like the Repo server to use
                    type: string
                  verifytls:
                    description: VerifyTLS defines whether repo server API should be accessed using strict TLS validation
                    type: boolean
                  version:
                    description: Version is the ArgoCD Repo Server container image tag.
                    type: string
                type: object
              repositoryCredentials:
                description: RepositoryCredentials are the Git pull credentials to configure Argo CD with upon creation of the cluster.
                type: string
              resourceCustomizations:
                description: 'ResourceCustomizations customizes resource behavior. Keys are in the form: group/Kind.'
                type: string
              resourceExclusions:
                description: ResourceExclusions is used to completely ignore entire classes of resource group/kinds.
                type: string
              resourceInclusions:
                description: ResourceInclusions is used to only include specific group/kinds in the reconciliation process.
                type: string
              server:
                description: Server defines the options for the ArgoCD Server component.
                properties:
                  autoscale:
                    description: Autoscale defines the autoscale options for the Argo CD Server component.
                    properties:
                      enabled:
                        description: Enabled will toggle autoscaling support for the Argo CD Server component.
                        type: boolean
                      hpa:
                        description: HPA defines the HorizontalPodAutoscaler options for the Argo CD Server component.
                        properties:
                          maxReplicas:
                            description: upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
                            format: int32
                            type: integer
                          minReplicas:
                            description: minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
                            format: int32
                            type: integer
                          scaleTargetRef:
                            description: reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.
                            properties:
                              apiVersion:
                                description: API version of the referent
                                type: string
                              kind:
                                description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                                type: string
                              name:
                                description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          targetCPUUtilizationPercentage:
                            description: target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
                            format: int32
                            type: integer
                        required:
                        - maxReplicas
                        - scaleTargetRef
                        type: object
                    required:
                    - enabled
                    type: object
                  env:
                    description: Env lets you specify environment for API server pods
                    items:
                      description: EnvVar represents an environment variable present in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value. Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes, optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  grpc:
                    description: GRPC defines the state for the Argo CD Server GRPC options.
                    properties:
                      host:
                        description: Host is the hostname to use for Ingress/Route resources.
                        type: string
                      ingress:
                        description: Ingress defines the desired state for the Argo CD Server GRPC Ingress.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations is the map of annotations to apply to the Ingress.
                            type: object
                          enabled:
                            description: Enabled will toggle the creation of the Ingress.
                            type: boolean
                          path:
                            description: Path used for the Ingress resource.
                            type: string
                          tls:
                            description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer security associated with an Ingress.
                              properties:
                                hosts:
                                  description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                secretName:
                                  description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                                  type: string
                              type: object
                            type: array
                        required:
                        - enabled
                        type: object
                    type: object
                  host:
                    description: Host is the hostname to use for Ingress/Route resources.
                    type: string
                  ingress:
                    description: Ingress defines the desired state for an Ingress for the Argo CD Server component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to apply to the Ingress.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the Ingress.
                        type: boolean
                      path:
                        description: Path used for the Ingress resource.
                        type: string
                      tls:
                        description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                        items:
                          description: IngressTLS describes the transport layer security associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            secretName:
                              description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - enabled
                    type: object
                  insecure:
                    description: Insecure toggles the insecure flag.
                    type: boolean
                  logFormat:
                    description: LogFormat refers to the log level to be used by the ArgoCD Server component. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json.
                    type: string
                  logLevel:
                    description: LogLevel refers to the log level to be used by the ArgoCD Server component. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug, info, error, and warn.
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required by the container for the Argo CD server component.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  route:
                    description: Route defines the desired state for an OpenShift Route for the Argo CD Server component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to use for the Route resource.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the OpenShift Route.
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is the map of labels to use for the Route resource
                        type: object
                      path:
                        description: Path the router watches for, to route traffic for to the service.
                        type: string
                      tls:
                        description: TLS provides the ability to configure certificates and termination for the Route.
                        properties:
                          caCertificate:
                            description: caCertificate provides the cert authority certificate contents
                            type: string
                          certificate:
                            description: certificate provides certificate contents
                            type: string
                          destinationCACertificate:
                            description: destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
                            type: string
                          insecureEdgeTerminationPolicy:
                            description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. \n * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
                            type: string
                          key:
                            description: key provides key file contents
                            type: string
                          termination:
                            description: termination indicates termination type.
                            type: string
                        required:
                        - termination
                        type: object
                      wildcardPolicy:
                        description: WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed.
                        type: string
                    required:
                    - enabled
                    type: object
                  service:
                    description: Service defines the options for the Service backing the ArgoCD Server component.
                    properties:
                      type:
                        description: Type is the ServiceType to use for the Service resource.
                        type: string
                    required:
                    - type
                    type: object
                type: object
              sso:
                description: SSO defines the Single Sign-on configuration for Argo CD
                properties:
                  image:
                    description: Image is the SSO container image.
                    type: string
                  provider:
                    description: Provider installs and configures the given SSO Provider with Argo CD.
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required by the container for SSO.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  verifyTLS:
                    description: VerifyTLS set to false disables strict TLS validation.
                    type: boolean
                  version:
                    description: Version is the SSO container image tag.
                    type: string
                type: object
              statusBadgeEnabled:
                description: StatusBadgeEnabled toggles application status badge feature.
                type: boolean
              tls:
                description: TLS defines the TLS options for ArgoCD.
                properties:
                  ca:
                    description: CA defines the CA options.
                    properties:
                      configMapName:
                        description: ConfigMapName is the name of the ConfigMap containing the CA Certificate.
                        type: string
                      secretName:
                        description: SecretName is the name of the Secret containing the CA Certificate and Key.
                        type: string
                    type: object
                  initialCerts:
                    additionalProperties:
                      type: string
                    description: InitialCerts defines custom TLS certificates upon creation of the cluster for connecting Git repositories via HTTPS.
                    type: object
                type: object
              usersAnonymousEnabled:
                description: UsersAnonymousEnabled toggles anonymous user access. The anonymous users get default role permissions specified argocd-rbac-cm.
                type: boolean
              version:
                description: Version is the tag to use with the ArgoCD container image for all ArgoCD components.
                type: string
            type: object
          status:
            description: ArgoCDStatus defines the observed state of ArgoCD
            properties:
              applicationController:
                description: 'ApplicationController is a simple, high-level summary of where the Argo CD application controller component is in its lifecycle. There are five possible ApplicationController values: Pending: The Argo CD application controller component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD application controller component are in a Ready state. Failed: At least one of the  Argo CD application controller component Pods had a failure. Unknown: For some reason the state of the Argo CD application controller component could not be obtained.'
                type: string
              dex:
                description: 'Dex is a simple, high-level summary of where the Argo CD Dex component is in its lifecycle. There are five possible dex values: Pending: The Argo CD Dex component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD Dex component are in a Ready state. Failed: At least one of the  Argo CD Dex component Pods had a failure. Unknown: For some reason the state of the Argo CD Dex component could not be obtained.'
                type: string
              phase:
                description: 'Phase is a simple, high-level summary of where the ArgoCD is in its lifecycle. There are five possible phase values: Pending: The ArgoCD has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Available: All of the resources for the ArgoCD are ready. Failed: At least one resource has experienced a failure. Unknown: For some reason the state of the ArgoCD phase could not be obtained.'
                type: string
              redis:
                description: 'Redis is a simple, high-level summary of where the Argo CD Redis component is in its lifecycle. There are five possible redis values: Pending: The Argo CD Redis component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD Redis component are in a Ready state. Failed: At least one of the  Argo CD Redis component Pods had a failure. Unknown: For some reason the state of the Argo CD Redis component could not be obtained.'
                type: string
              repo:
                description: 'Repo is a simple, high-level summary of where the Argo CD Repo component is in its lifecycle. There are five possible repo values: Pending: The Argo CD Repo component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD Repo component are in a Ready state. Failed: At least one of the  Argo CD Repo component Pods had a failure. Unknown: For some reason the state of the Argo CD Repo component could not be obtained.'
                type: string
              repoTLSChecksum:
                description: RepoTLSChecksum contains the SHA256 checksum of the latest known state of tls.crt and tls.key in the argocd-repo-server-tls secret.
                type: string
              server:
                description: 'Server is a simple, high-level summary of where the Argo CD server component is in its lifecycle. There are five possible server values: Pending: The Argo CD server component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD server component are in a Ready state. Failed: At least one of the  Argo CD server component Pods had a failure. Unknown: For some reason the state of the Argo CD server component could not be obtained.'
                type: string
              ssoConfig:
                description: 'SSOConfig defines the status of SSO configuration. Success: Only one SSO provider is configured in CR. Failed: More than one SSO providers are configure in CR. Unknown: For some reason the SSO configuration could not be obtained.'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []