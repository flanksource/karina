{{- $PLATFORM_NAME := .name }}
{{- $CONTAINER_RUNTIME := .kubernetes.containerRuntime}}
{{ range .filebeat}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-{{ .name }}-config
  namespace: platform-system
  labels:
    k8s-app: filebeat-{{ .name }}
data:
  filebeat.yml: |-
    fields:
      cluster: "{{ $PLATFORM_NAME}}-{{.name}}"

    filebeat.autodiscover:
       providers:
         - type: kubernetes
        {{ if eq .prefix "" }}
           prefix: co.elastic #default
        {{ else }}
           prefix: {{ .prefix }}
        {{ end }}
           hints.enabled: true
           hints.default_config:
             enabled: false
           {{ if eq $CONTAINER_RUNTIME "containerd" }}
             type: container
             paths:
               - /var/log/containers/*${data.kubernetes.container.id}.log
           {{ end }}

    processors:
      - add_cloud_metadata:
      - add_kubernetes_metadata:
      - add_docker_metadata:
      - drop_event:
          when:
            or:
              - contains:
                  # ignore nsx INFO messages
                  message: level="INFO"
              - contains:
                  # ignore nsx DEBUG messages
                  message: level="DEBUG"
              - contains:
                  message: GET / HTTP/1.1" 200
              - contains:
                  # ignore harbor-portal access logging
                  message: server.go:2774
              - contains:
                  message: GET /api/health HTTP/1.1" 200
              - contains:
                  message: kube-probe/
              - contains:
                  message: GET /healthz
      - drop_fields:
          fields:
            - ecs.version
            - agent.id
            - agent.ephemeral_id
            - agent.hostname
            - kubernetes.pod.uid
            - log.file.path
            - log.offset
            - host.os.family
          ignore_missing: true

{{ if .elasticsearch}}
    output.elasticsearch:
      hosts: ['${ELASTIC_URL}']
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
      protocol: https
      ssl.verification_mode: none
      ssl.supported_protocols: [TLSv1.2, TLSv1.3]
  {{- if ne .index "" }}
      index: "{{ .index }}-%{[agent.version]}-%{+yyyy.MM.dd}"
    setup:
      template:
        name: '{{ .index }}'
        pattern: '{{ .index }}-*'
        enabled: false
      ilm:
        rollover_alias: "{{ .index }}-%{[agent.version]}"
  {{ end }}
{{ else if .logstash }}
    output.logstash:
      hosts: ["${LOGSTASH_HOST}"]
      ssl.verification_mode: none
{{ end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat-{{ .name }}
  namespace: platform-system
  labels:
    k8s-app: filebeat-{{ .name }}
  annotations:
    reload/all: "true" #restart on cm/secret change
spec:
  selector:
    matchLabels:
      k8s-app: filebeat-{{ .name }}
  template:
    metadata:
      labels:
        k8s-app: filebeat-{{ .name }}
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      tolerations:
        # this toleration is to have the daemonset runnable on master nodes
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:{{ .version }}
          envFrom:
            - secretRef:
                name: elastic-{{ .name }}
                optional: true
            - secretRef:
                name: logstash-{{ .name }}
                optional: true
          args: ["-c", "/etc/filebeat.yml", "-e"]
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
            - name: data
              mountPath: /usr/share/filebeat/data
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: filebeat-{{ .name }}-config
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
        - name: data
          hostPath:
            path: /var/lib/filebeat-{{ .name }}-data
            type: DirectoryOrCreate
---
{{end}}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: platform-system
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: platform-system
  labels:
    k8s-app: filebeat
