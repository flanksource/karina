apiVersion: v1
kind: Namespace
metadata:
  name: eck
  labels:
    quack.pusher.com/enabled: "true"
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: logs
  namespace: eck
spec:
  version: {{.elasticsearch.version}}
  nodeSets:
    - name: default
      count: {{.elasticsearch.replicas}}
      config:
        node.master: true
        node.data: true
        node.ingest: true
        node.store.allow_mmap: false
        xpack.security.transport.ssl.supported_protocols: TLSv1.1,TLSv1.2
        xpack.security.authc.anonymous.roles: fluentd
      podTemplate:
        spec:
          containers:
            - name: elasticsearch
              env:
                - name: ES_JAVA_OPTS
                  value: -Xms{{.elasticsearch.mem.requests}} -Xmx{{.elasticsearch.mem.limits}}
              resources:
                requests:
                  memory: {{.elasticsearch.mem.requests}}
                  cpu: 0.5
                limits:
                  memory: {{.elasticsearch.mem.limits}}
                  cpu: 2
      {{- if not (eq .elasticsearch.persistence.enabled true) }}
          volumes:
            - name: elasticsearch-data
              emptyDir: {}
      {{- else}}
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{.elasticsearch.persistence.capacity}}
            storageClassName: {{.elasticsearch.persistence.storageClass}}
      {{- end}}
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: logs
  namespace: eck
spec:
  version: 7.6.0
  count: 1
  elasticsearchRef:
    name: logs
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: logs-ing
  namespace: eck
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/client_max_body_size: "64m"
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - secretName: logs-tls
      hosts:
        - logs.{{.domain}}
  rules:
    - host: logs.{{.domain}}
      http:
        paths:
          - backend:
              serviceName: logs-es-http
              servicePort: 9200
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana-ing
  namespace: eck
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - secretName: kibana-tls
      hosts:
        - kibana.{{.domain}}
  rules:
    - host: kibana.{{.domain}}
      http:
        paths:
          - backend:
              serviceName: logs-kb-http
              servicePort: 5601