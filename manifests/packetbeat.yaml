---
apiVersion: v1
kind: ConfigMap
metadata:
  name: packetbeat-config
  namespace: platform-system
  labels:
    k8s-app: packetbeat
data:
  packetbeat.yml: |-
    setup.dashboards.enabled: true
    setup.template.enabled: true
    setup.template.settings:
      index.number_of_shards: 2
    setup.kibana:
      host: "{{ .packetbeat.kibana.url }}:{{ .packetbeat.kibana.port }}"
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
      protocol: https
      ssl.verification_mode: none
      ssl.supported_protocols: [TLSv1.2, TLSv1.3]
    packetbeat.interfaces.device: any
    packetbeat.protocols:
    - type: dns
      ports: [53]
      include_authorities: true
      include_additionals: true
    - type: http
      ports: [80, 8000, 8080, 9200]
    - type: mysql
      ports: [3306]
    - type: redis
      ports: [6379]
    packetbeat.flows:
      timeout: 30s
      period: 10s
    processors:
      - add_cloud_metadata:
      - add_kubernetes_metadata:
          host: ${HOSTNAME}
          indexers:
          - ip_port:
          matchers:
          - field_format:
              format: '%{[ip]}:%{[port]}'
    output.elasticsearch:
      hosts: ['${ELASTIC_URL}']
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
      protocol: https
      ssl.verification_mode: none
      ssl.supported_protocols: [TLSv1.2, TLSv1.3]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: packetbeat
  namespace: platform-system
  labels:
    k8s-app: packetbeat
spec:
  selector:
    matchLabels:
      k8s-app: packetbeat
  template:
    metadata:
      labels:
        k8s-app: packetbeat
    spec:
      serviceAccountName: packetbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      containers:
        - name: packetbeat
          image: docker.elastic.co/beats/packetbeat:{{ .packetbeat.version }}
          imagePullPolicy: Always
          args: [
            "-c", "/etc/packetbeat.yml",
            "-e",
          ]
          securityContext:
            runAsUser: 0
            capabilities:
              add:
                - NET_ADMIN
          envFrom:
            - secretRef:
                name: elastic-infra
                optional: true
          volumeMounts:
            - name: config
              mountPath: /etc/packetbeat.yml
              readOnly: true
              subPath: packetbeat.yml
            - name: data
              mountPath: /usr/share/packetbeat/data
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: packetbeat-config
        - name: data
          emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: packetbeat
subjects:
  - kind: ServiceAccount
    name: packetbeat
    namespace: platform-system
roleRef:
  kind: ClusterRole
  name: packetbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: packetbeat
  labels:
    k8s-app: packetbeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: packetbeat
  namespace: platform-system
  labels:
    k8s-app: packetbeat