apiVersion: v1
kind: ConfigMap
metadata:
  name: journalbeat-config
  namespace: platform-system
  labels:
    k8s-app: journalbeat
data:
  journalbeat.yml: |-
    fields:
      cluster: "{{ .name }}"
    journalbeat.inputs:
      - paths:
          - /var/log/journal
        seek: cursor
    setup.dashboards.enabled: false
    setup.kibana:
      host: "{{ .packetbeat.kibana.url }}:{{ .packetbeat.kibana.port }}"
      username: "${ELASTIC_USERNAME}"
      password: "${ELASTIC_PASSWORD}"
      protocol: https
      ssl.verification_mode: none
      ssl.supported_protocols:
        - TLSv1.2
        - TLSv1.3
    processors:
      - add_cloud_metadata: null
      - add_kubernetes_metadata:
          in_cluster: true
          default_indexers.enabled: false
          default_matchers.enabled: false
          indexers:
            - container: null
          matchers:
            - fields:
                lookup_fields:
                  - container.id
      - drop_event:
          when:
            or:
              - contains:
                  message: __main__ Initialized CNI configuration
              - contains:
                  message: "__main__ CNI Command in environment:"
              - contains:
                  message: "__main__ nsx_cni plugin invoked with arguments:"
              - contains:
                  message: __main__ Network config from input
              - contains:
                  message: __main__ Connection closed
              - contains:
                  message: __main__ Reading configuration on standard input
              - contains:
                  message: __main__ CNI VERSION is queried
              - contains:
                  message: "https://github.com/kubernetes/kubernetes/issues/69699"
              - contains:
                  message: kauditd_printk_skb
              - contains:
                  message: RemoveContainer
              - contains:
                  message: Succeeded
              - contains:
                  message: Started Kubernetes transient mount
              - contains:
                  message: "IPv6:"
              - contains:
                  message: audit_log_start"
              - contains:
                  message: "eth0: renamed"
              - contains:
                  message: autonegotiation is unset or enabled
              - contains:
                  message: Lost carrier
              - contains:
                  message: entered promiscuous mode
              - contains:
                  message: Could not generate persistent MAC
              - contains:
                  message: Using default interface naming scheme
              - contains:
                  message: left promiscuous mode
              - contains:
                  message: reloading interface list
              - contains:
                  message: Unconfiguring networking
              - contains:
                  message: Pod networking configured on container
              - contains:
                  message: Configuring networking for container
              - contains:
                  message: operationExecutor.UnmountVolume started for volume
              - contains:
                  message: Topology Admit Handler
              - contains:
                  message: operationExecutor.VerifyControllerAttachedVolume started for volume
              - contains:
                  message: Volume detached for volume
              - equals:
                  systemd.unit: dbus.service
              - equals:
                  systemd.unit: snapd.service
              - equals:
                  journald.custom.unit: fwupd.service
              - equals:
                  journald.custom.unit: fwupd-refresh.service
              - equals:
                  process.name: fwupdmgr
              - equals:
                  journald.custom.unit: packagekit.service
              - equals:
                  syslog.identifier: 50-motd-news
              - equals:
                  journald.custom.unit: motd-news.service
              - equals:
                  systemd.unit: packagekit.service
              - equals:
                  syslog.identifier: CRON
              - equals:
                  syslog.identifier: audit
              - contains:
                  message: 'level=error msg="ContainerStatus'
              - contains:
                  message: "remote_runtime.go:295 ContainerStatus"
              - contains:
                  message: msg=PullImage
              - contains:
                  message: msg=Failed to get usage for snapshot
              - contains:
                  message: "error=cgroups: cgroup deleted: unknown"
              - contains:
                  message: "container is in CONTAINER_EXITED state"
              - contains:
                  message: DVE-2018-0001
              - equals:
                  systemd.unit: apt-daily-upgrade.service
              - contains:
                  message: Gained IPv6LL
              - contains:
                  message: Gained carrier
              - contains:
                  message: UnmountVolume.TearDown succeeded for volume
              - contains:
                  message: superfluous response.WriteHeader call
              - contains:
                  message: ClearQuota called, but quotas disabled
              - contains:
                  message: "clientconn.go:"
              - contains:
                  message: "operation_generator.go:"
              - contains:
                  message: "found, but volume paths are still present on disk"
              - contains:
                  message: "ccResolverWrapper:"
              - equals:
                  journald.custom.unit:	dbus.socket
              - and:
                  - equals:
                      systemd.transport: kernel
                  - contains:
                      message: "audit: "
              - and:
                  - equals:
                      systemd.unit: containerd.service
                  - contains:
                      message: level=info

              - and:
                  - or:
                      - equals:
                          process.name: calico-ipam
                      - equals:
                          process.name: calico

                  - contains:
                      message: "[INFO]"

    output.elasticsearch:
      hosts:
        - "${ELASTIC_URL}"
      username: "${ELASTIC_USERNAME}"
      password: "${ELASTIC_PASSWORD}"
      protocol: https
      ssl.verification_mode: none
      ssl.supported_protocols:
        - TLSv1.2
        - TLSv1.3
      ilm.enabled: true

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: journalbeat
  namespace: platform-system
  labels:
    k8s-app: journalbeat
  annotations:
    reload/all: "true"
spec:
  selector:
    matchLabels:
      k8s-app: journalbeat
  template:
    metadata:
      labels:
        k8s-app: journalbeat
      annotations:
        reload/all: "true"
        com.flanksource.infra.logs/processors.2.drop_event.when.contains.message: journalbeat successfully published
        com.flanksource.infra.logs/processors.1.drop_event.when.contains.message: Non-zero metrics in the last 30s
        com.flanksource.infra.logs/processors.0.drop_event.when.contains.message: INFO
    spec:
      serviceAccountName: journalbeat
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        # schedule on dedicated node groups
        - key: node.kubernetes.io/group
          effect: NoSchedule
          operator: Exists
      containers:
        - name: journalbeat
          image: docker.elastic.co/beats/journalbeat:{{ .journalbeat.version }}
          args: ["-c", "/etc/journalbeat.yml", "-e"]
          envFrom:
            - secretRef:
                name: elastic-infra
                optional: true
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: config
              mountPath: /etc/journalbeat.yml
              readOnly: true
              subPath: journalbeat.yml
            - name: data
              mountPath: /usr/share/journalbeat/data
            - name: varlogjournal
              mountPath: /var/log/journal
              readOnly: true
            - name: machineid
              mountPath: /etc/machineid
              readOnly: true
            - name: systemd
              mountPath: /run/systemd
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: journalbeat-config
        - name: varlogjournal
          hostPath:
            path: /var/log/journal
        - name: machineid
          hostPath:
            path: /etc/machine-id
        - name: systemd
          hostPath:
            path: /run/systemd
        - name: data
          emptyDir: {}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: journalbeat
subjects:
  - kind: ServiceAccount
    name: journalbeat
    namespace: platform-system
roleRef:
  kind: ClusterRole
  name: journalbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: journalbeat
  labels:
    k8s-app: journalbeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: journalbeat
  namespace: platform-system
  labels:
    k8s-app: journalbeat
