# This file was generated by running 'make keptn.yaml' in manifests directory
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-api-service
    app.kubernetes.io/part-of: keptn
  name: keptn-api-service
  namespace: keptn
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-configuration-service
    app.kubernetes.io/part-of: keptn
  name: keptn-configuration-service
  namespace: keptn
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-default
    app.kubernetes.io/part-of: keptn
  name: keptn-default
  namespace: keptn
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-lighthouse-service
    app.kubernetes.io/part-of: keptn
  name: keptn-lighthouse-service
  namespace: keptn
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-configure-bridge
    app.kubernetes.io/part-of: keptn
  name: keptn-configure-bridge
  namespace: keptn
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - delete
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
  - apiGroups:
      - ""
    resourceNames:
      - bridge-credentials
    resources:
      - secrets
    verbs:
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-manage-configmaps
    app.kubernetes.io/part-of: keptn
  name: keptn-manage-configmaps
  namespace: keptn
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - update
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-manage-secrets
    app.kubernetes.io/part-of: keptn
  name: keptn-manage-secrets
  namespace: keptn
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-read-metadata
    app.kubernetes.io/part-of: keptn
  name: keptn-read-metadata
  namespace: keptn
rules:
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-api-service-configure-bridge
    app.kubernetes.io/part-of: keptn
  name: keptn-api-service-configure-bridge
  namespace: keptn
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-configure-bridge
subjects:
  - kind: ServiceAccount
    name: keptn-api-service
    namespace: keptn
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-api-service-metadata
    app.kubernetes.io/part-of: keptn
  name: keptn-api-service-metadata
  namespace: keptn
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-read-metadata
subjects:
  - kind: ServiceAccount
    name: keptn-api-service
    namespace: keptn
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-configuration-service-manage-secrets
    app.kubernetes.io/part-of: keptn
  name: keptn-configuration-service-manage-secrets
  namespace: keptn
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-manage-secrets
subjects:
  - kind: ServiceAccount
    name: keptn-configuration-service
    namespace: keptn
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-lighthouse-service
    app.kubernetes.io/part-of: keptn
  name: keptn-lighthouse-service
  namespace: keptn
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-manage-configmaps
subjects:
  - kind: ServiceAccount
    name: keptn-lighthouse-service
    namespace: keptn
---
apiVersion: v1
data:
  keptn-endpoints-pre-0-7.conf: |
    rewrite ^/project/(.*) /bridge/project/$1 permanent;
    rewrite ^/trace/(.*) /bridge/trace/$1 permanent;
  keptn-endpoints.conf: |
    rewrite ^/$ /bridge/ permanent;
    rewrite ^/api$ /api/swagger-ui/ permanent;

    # special configuration for /v1/auth to always use POST requests
    location /api/v1/auth {
      rewrite /api/v1/auth /v1/auth break;

      proxy_method POST;
      proxy_pass_request_body off;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_pass_request_headers on; # only pass reuquest headers to this service
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /bridge {
      rewrite /bridge(/.*) $1 break;
      proxy_pass http://bridge:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

    # health check
    location /nginx-health {
        access_log off;
        return 200 "OK\n";
    }

    location /api/mongodb-datastore/swagger-ui/swagger.yaml {
     # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
     # the access is denied) before we store the file
     # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      rewrite /api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  /api/mongodb-datastore {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite /api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/configuration-service/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite /api/configuration-service/(.*) /$1  break;
      proxy_pass         http://configuration-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  /api/configuration-service {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite /api/configuration-service/(.*) /$1  break;
      proxy_pass         http://configuration-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
      rewrite /api/(.*) /$1 break;
      rewrite /api / break;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }
  nginx.conf: |
    worker_processes  3;
    pid /tmp/nginx.pid;
    error_log /dev/stdout info;
    events {
      worker_connections  10240;
    }

    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log /dev/stdout;
      # rewrite_log on;
      absolute_redirect off;

      # https://www.nginx.com/blog/websocket-nginx/
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }

      server {
          listen       8080;
          server_name  _;

          include /etc/nginx/keptn-endpoints-pre-0-7.conf;
          include /etc/nginx/keptn-endpoints.conf;
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: api-nginx-config-cm
    app.kubernetes.io/part-of: keptn
  name: api-nginx-config
  namespace: keptn
---
apiVersion: v1
data:
  nats.conf: "# PID file shared with configuration reloader.\npid_file: \"/var/run/nats/nats.pid\"\n\n###############\n#             #\n# Monitoring  #\n#             #\n###############\nhttp: 8222\nserver_name: $POD_NAME\n\n\n\n################# \n#               #\n# NATS Leafnode #\n#               #\n#################\n\n################# \n#               #\n# NATS Gateways #\n#               #\n#################\n\n####################\n#                  #\n# Logging Options  #\n#                  #\n####################\n\n##################\n#                #\n# Server Limits  #\n#                #\n##################\n"
kind: ConfigMap
metadata:
  labels:
    app: keptn-nats-cluster
    app.kubernetes.io/part-of: keptn
    chart: nats-0.4.2
  name: keptn-nats-cluster-config
  namespace: keptn
---
apiVersion: v1
data:
  BASIC_AUTH_PASSWORD: '{{- kget "secret/keptn/bridge-credentials" "BASIC_AUTH_PASSWORD" | default (random.AlphaNum 22) | base64.Encode -}}'
  BASIC_AUTH_USERNAME: '{{- print "keptn" | base64.Encode -}}'
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: bridge-credentials
    app.kubernetes.io/part-of: keptn
  name: bridge-credentials
  namespace: keptn
type: Opaque
---
apiVersion: v1
data:
  keptn-api-token: '{{- kget "secret/keptn/keptn-api-token" "keptn-api-token" | default (random.AlphaNum 47) | base64.Encode -}}'
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: keptn-api-token
    app.kubernetes.io/part-of: keptn
  name: keptn-api-token
  namespace: keptn
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: api-gateway-nginx
    app.kubernetes.io/part-of: keptn
  name: api-gateway-nginx
  namespace: keptn
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: api-gateway-nginx
    app.kubernetes.io/part-of: keptn
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: keptn
  name: api-service
  namespace: keptn
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: bridge
    app.kubernetes.io/part-of: keptn
  name: bridge
  namespace: keptn
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: bridge
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: configuration-service
    app.kubernetes.io/part-of: keptn
  name: configuration-service
  namespace: keptn
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: configuration-service
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: eventbroker-go
    app.kubernetes.io/part-of: keptn
  name: event-broker
  namespace: keptn
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: eventbroker-go
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keptn-nats-cluster
    app.kubernetes.io/part-of: keptn
    chart: nats-0.4.2
  name: keptn-nats-cluster
  namespace: keptn
spec:
  clusterIP: None
  ports:
    - name: client
      port: 4222
    - name: cluster
      port: 6222
    - name: monitor
      port: 8222
    - name: metrics
      port: 7777
    - name: leafnodes
      port: 7422
    - name: gateways
      port: 7522
  selector:
    app: keptn-nats-cluster
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: lighthouse-service
    app.kubernetes.io/part-of: keptn
  name: lighthouse-service
  namespace: keptn
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: lighthouse-service
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: mongodb-datastore
    app.kubernetes.io/part-of: keptn
  name: mongodb-datastore
  namespace: keptn
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: mongodb-datastore
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/part-of: keptn
  name: remediation-service
  namespace: keptn
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: shipyard-service
    app.kubernetes.io/part-of: keptn
  name: shipyard-service
  namespace: keptn
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: shipyard-service
    app.kubernetes.io/part-of: keptn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: configuration-volume
    app.kubernetes.io/part-of: keptn
  name: configuration-volume
  namespace: keptn
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: api-gateway-nginx
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 1.19.4-alpine
  name: api-gateway-nginx
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway-nginx
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: api-gateway-nginx
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 1.19.4-alpine
    spec:
      containers:
        - image: docker.io/nginxinc/nginx-unprivileged:1.19.4-alpine
          livenessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          name: api-gateway-nginx
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: api-nginx-config
              readOnly: true
              subPath: nginx.conf
            - mountPath: /etc/nginx/keptn-endpoints.conf
              name: api-nginx-config
              readOnly: true
              subPath: keptn-endpoints.conf
            - mountPath: /etc/nginx/keptn-endpoints-pre-0-7.conf
              name: api-nginx-config
              readOnly: true
              subPath: keptn-endpoints-pre-0-7.conf
            - mountPath: /etc/nginx/keptn-endpoints-pre-1-0.conf
              name: api-nginx-config
              readOnly: true
              subPath: keptn-endpoints-pre-1-0.conf
      serviceAccountName: keptn-default
      volumes:
        - configMap:
            name: api-nginx-config
          name: api-nginx-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: api-service
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api-service
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: api-service
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: PREFIX_PATH
              value: ""
            - name: EVENTBROKER_URI
              value: event-broker
            - name: DATASTORE_URI
              value: mongodb-datastore:8080
            - name: CONFIGURATION_URI
              value: configuration-service:8080
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  key: keptn-api-token
                  name: keptn-api-token
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: docker.io/keptn/api:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: api-service
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
      serviceAccountName: keptn-api-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: bridge
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: bridge
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bridge
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: bridge
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: API_URL
              value: http://api-gateway-nginx/api
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  key: keptn-api-token
                  name: keptn-api-token
            - name: CLI_DOWNLOAD_LINK
              value: https://github.com/keptn/keptn/releases/tag/0.7.3
            - name: INTEGRATIONS_PAGE_LINK
              value: https://get.keptn.sh/integrations.html
            - name: ENABLE_VERSION_CHECK
              value: "true"
            - name: SHOW_API_TOKEN
              value: "true"
            - name: KEPTN_INSTALLATION_TYPE
              value: QUALITY_GATES,CONTINUOUS_OPERATIONS
          envFrom:
            - secretRef:
                name: bridge-credentials
                optional: true
          image: docker.io/keptn/bridge2:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          name: bridge
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      serviceAccountName: keptn-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: configuration-service
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: configuration-service
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: configuration-service
      app.kubernetes.io/part-of: keptn
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: configuration-service
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: PREFIX_PATH
              value: ""
            - name: MONGODB_HOST
              value: mongodb:27017
            - name: MONGODB_USER
              value: keptn
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mongodb-keptn-credentials
            - name: MONGO_DB_NAME
              value: keptn
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: docker.io/keptn/configuration-service:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: configuration-service
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - mountPath: /data/config
              name: configuration-volume
        - env:
            - name: PUBSUB_URL
              value: nats://keptn-nats-cluster
            - name: PUBSUB_TOPIC
              value: sh.keptn.>
            - name: PUBSUB_RECIPIENT
              value: 127.0.0.1
            - name: PUBSUB_RECIPIENT_PATH
              value: /v1/event
          image: docker.io/keptn/distributor:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: distributor
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
      serviceAccountName: keptn-configuration-service
      volumes:
        - name: configuration-volume
          persistentVolumeClaim:
            claimName: configuration-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: eventbroker-go
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: eventbroker-go
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eventbroker-go
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: eventbroker-go
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: PUBSUB_URL
              value: nats://keptn-nats-cluster
            - name: PUBSUB_IMPL
              value: nats
          image: docker.io/keptn/eventbroker-go:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: eventbroker-go
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
      serviceAccountName: keptn-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: lighthouse-service
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: lighthouse-service
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lighthouse-service
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: lighthouse-service
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: EVENTBROKER
              value: http://event-broker/keptn
            - name: CONFIGURATION_SERVICE
              value: http://configuration-service:8080
            - name: MONGODB_DATASTORE
              value: mongodb-datastore:8080
            - name: ENVIRONMENT
              value: production
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: docker.io/keptn/lighthouse-service:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: lighthouse-service
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - env:
            - name: PUBSUB_URL
              value: nats://keptn-nats-cluster
            - name: PUBSUB_TOPIC
              value: sh.keptn.>
            - name: PUBSUB_RECIPIENT
              value: 127.0.0.1
          image: docker.io/keptn/distributor:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: distributor
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
      serviceAccountName: keptn-lighthouse-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    fluentbit.io/exclude: "true"
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: mongodb-datastore
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: mongodb-datastore
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-datastore
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: mongodb-datastore
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: MONGODB_DATABASE
              value: keptn
            - name: MONGODB_USER
              value: keptn
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mongodb-keptn-credentials
            - name: MONGODB_HOST
              value: mongodb-keptn:27017
            - name: PREFIX_PATH
              value: ""
          image: docker.io/keptn/mongodb-datastore:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: mongodb-datastore
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
        - env:
            - name: PUBSUB_IMPL
              value: nats
            - name: PUBSUB_URL
              value: nats://keptn-nats-cluster
            - name: PUBSUB_TOPIC
              value: sh.keptn.>
            - name: PUBSUB_RECIPIENT
              value: 127.0.0.1
            - name: PUBSUB_RECIPIENT_PATH
              value: /event
          image: docker.io/keptn/distributor:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: distributor
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
      serviceAccountName: keptn-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: remediation-service
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: remediation-service
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: remediation-service
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: EVENTBROKER
              value: http://event-broker/keptn
            - name: CONFIGURATION_SERVICE
              value: http://configuration-service:8080
            - name: MONGODB_DATASTORE
              value: http://mongodb-datastore:8080
            - name: ENVIRONMENT
              value: production
            - name: WAIT_TIME_MINUTES
              value: 10m
          image: docker.io/keptn/remediation-service:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: remediation-service
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 50m
              memory: 64Mi
        - env:
            - name: PUBSUB_URL
              value: nats://keptn-nats-cluster
            - name: PUBSUB_TOPIC
              value: sh.keptn.>
            - name: PUBSUB_RECIPIENT
              value: 127.0.0.1
          image: docker.io/keptn/distributor:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: distributor
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
      serviceAccountName: keptn-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/name: shipyard-service
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/version: 0.7.3
  name: shipyard-service
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: shipyard-service
      app.kubernetes.io/part-of: keptn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/name: shipyard-service
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/version: 0.7.3
    spec:
      containers:
        - env:
            - name: CONFIGURATION_SERVICE
              value: http://configuration-service:8080
            - name: EVENTBROKER
              value: http://event-broker/keptn
            - name: API
              value: ws://api-service:8080/websocket
          image: docker.io/keptn/shipyard-service:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: shipyard-service
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
        - env:
            - name: PUBSUB_URL
              value: nats://keptn-nats-cluster
            - name: PUBSUB_TOPIC
              value: sh.keptn.internal.event.project.create,sh.keptn.internal.event.project.delete,sh.keptn.internal.event.service.create,sh.keptn.internal.event.service.delete
            - name: PUBSUB_RECIPIENT
              value: 127.0.0.1
          image: docker.io/keptn/distributor:{{.keptn.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 10999
            initialDelaySeconds: 45
            periodSeconds: 5
          name: distributor
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
      serviceAccountName: keptn-default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: keptn-nats-cluster
    app.kubernetes.io/part-of: keptn
    chart: nats-0.4.2
  name: keptn-nats-cluster
  namespace: keptn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keptn-nats-cluster
      app.kubernetes.io/part-of: keptn
  serviceName: keptn-nats-cluster
  template:
    metadata:
      labels:
        app: keptn-nats-cluster
        app.kubernetes.io/part-of: keptn
        chart: nats-0.4.2
    spec:
      containers:
        - command:
            - nats-server
            - --config
            - /etc/nats-config/nats.conf
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLUSTER_ADVERTISE
              value: $(POD_NAME).keptn-nats-cluster.$(POD_NAMESPACE).svc
          image: docker.io/nats:2.1.7-alpine3.11
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60
          livenessProbe:
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            timeoutSeconds: 5
          name: nats
          ports:
            - containerPort: 4222
              name: client
            - containerPort: 7422
              name: leafnodes
            - containerPort: 7522
              name: gateways
            - containerPort: 6222
              name: cluster
            - containerPort: 8222
              name: monitor
            - containerPort: 7777
              name: metrics
          readinessProbe:
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/nats-config
              name: config-volume
            - mountPath: /var/run/nats
              name: pid
        - command:
            - nats-server-config-reloader
            - -pid
            - /var/run/nats/nats.pid
            - -config
            - /etc/nats-config/nats.conf
          image: docker.io/connecteverything/nats-server-config-reloader:0.6.0
          imagePullPolicy: IfNotPresent
          name: reloader
          volumeMounts:
            - mountPath: /etc/nats-config
              name: config-volume
            - mountPath: /var/run/nats
              name: pid
        - args:
            - -connz
            - -routez
            - -subz
            - -varz
            - -prefix=nats
            - -use_internal_server_id
            - http://localhost:8222/
          image: docker.io/synadia/prometheus-nats-exporter:0.5.0
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
            - containerPort: 7777
              name: metrics
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 60
      volumes:
        - configMap:
            name: keptn-nats-cluster-config
          name: config-volume
        - emptyDir: {}
          name: pid
---
apiVersion: db.flanksource.com/v1
kind: MongoDB
metadata:
  labels:
    app.kubernetes.io/part-of: keptn
  name: keptn
  namespace: keptn
spec:
  database: keptn
  user: keptn
