apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: platform-system
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    fields:
      cluster: "{{.name}}"
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*.log
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"

    processors:
      - add_cloud_metadata:
      - drop_event:
          when:
            or:
              - contains:
                  # ignore nsx INFO messages
                  message: level="INFO"
              - contains:
                  # ignore nsx DEBUG messages
                  message: level="DEBUG"
              - contains:
                  message: GET / HTTP/1.1" 200
              - contains:
                  # ignore harbor-portal access logging
                  message: server.go:2774
              - contains:
                  message: GET /api/health HTTP/1.1" 200
              - contains:
                  message: kube-probe/
              - contains:
                  message: GET /healthz
      - drop_fields:
          fields:
            - ecs.version
            - agent.id
            - agent.ephemeral_id
            - agent.hostname
            - kubernetes.pod.uid
            - log.file.path
            - log.offset
            - host.os.family
          ignore_missing: true

{{ if .filebeat.elasticsearch}}
    output.elasticsearch:
      hosts: ['${ELASTIC_URL}']
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
      protocol: https
      ssl.verification_mode: none
      ssl.supported_protocols: [TLSv1.2, TLSv1.3]
{{ else if .filebeat.logstash }}
    output.logstash:
      hosts: ["${LOGSTASH_HOST}"]
      ssl.verification_mode: none
{{ end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: platform-system
  labels:
    k8s-app: filebeat
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:{{.filebeat.version}}
          envFrom:
            - secretRef:
                name: elastic
                optional: true
            - secretRef:
                name: logstash
                optional: true
          args: ["-c", "/etc/filebeat.yml", "-e"]
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
            - name: data
              mountPath: /usr/share/filebeat/data
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: filebeat-config
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
        - name: data
          hostPath:
            path: /var/lib/filebeat-data
            type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: platform-system
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: platform-system
  labels:
    k8s-app: filebeat
