# This file was generated by running 'make canary-checker.yaml' in manifests directory
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: canary-checker
    control-plane: canary-checker
  name: canary-checker-sa
  namespace: platform-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canary-checker-role
rules:
- apiGroups:
  - canaries.flanksource.com
  resources:
  - canaries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - canaries.flanksource.com
  resources:
  - canaries/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  - services
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/exec
  - pods/log
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canary-checker-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canary-checker-role
subjects:
- kind: ServiceAccount
  name: canary-checker-sa
  namespace: platform-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: canary-checker
    control-plane: canary-checker
  name: canary-checker
  namespace: platform-system
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: canary-checker
    control-plane: canary-checker
---
apiVersion: scheduling.k8s.io/v1
description: This priority class should be used for canary pods only.
globalDefault: false
kind: PriorityClass
metadata:
  name: canary-checker-priority
value: -1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: canary-checker
    control-plane: canary-checker
  name: canary-checker
  namespace: platform-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: canary-checker
      control-plane: canary-checker
  template:
    metadata:
      annotations:
        {{ if .canaryChecker.persistence.storageClass }}
        {{ if not (eq .canaryChecker.persistence.storageClass "local-path") }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
        {{- end }}
        com.flanksource.infra.logs/processors.0.drop_event.when.contains.message: patching
        com.flanksource.infra.logs/processors.1.drop_event.when.contains.message: '[pod/canary] request completed with 503, expected [200 201 202], retrying'
        com.flanksource.infra.logs/processors.2.drop_event.when.contains.message: Requeue reconciliation
        com.flanksource.infra.logs/processors.3.drop_event.when.contains.message: Successfully Reconciled
      labels:
        app.kubernetes.io/name: canary-checker
        control-plane: canary-checker
    spec:
      containers:
      - args:
        - operator
        - -v
        - --httpPort
        - "8080"
        {{- range $server := .canaryChecker.aggregateServers }}
        - --aggregateServers
        - {{$server}}
        {{- end }}
        command:
        - /app/canary-checker
        env:
        - name: DOCKER_API_VERSION
          value: "1.39"
        - name: DB_URL
          value: embedded:///opt/database/
        image: docker.io/flanksource/canary-checker:{{.canaryChecker.version | default "v0.38.87" }}
        name: canary-checker
        ports:
        - containerPort: 8080
          name: metrics
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - CAP_NET_RAW
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: dockersock
        - mountPath: /run/containerd/containerd.sock
          name: containerdsock
        - mountPath: /opt/database
          name: canarychecker-database
        - mountPath: /etc/podinfo
          name: podinfo
      serviceAccountName: canary-checker-sa
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: dockersock
      - hostPath:
          path: /run/containerd/containerd.sock
        name: containerdsock
      - downwardAPI:
          items:
          - fieldRef:
              fieldPath: metadata.labels
            path: labels
        name: podinfo
  volumeClaimTemplates:
  - metadata:
      name: canarychecker-database
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: '{{ .canaryChecker.persistence.capacity | default "1Gi" }}'
      storageClassName: '{{ .canaryChecker.persistence.storageClass | default "local-path" }}'
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: canary-checker-monitor
  namespace: platform-system
spec:
  endpoints:
  - interval: 30s
    targetPort: 8080
  jobLabel: canary-checker
  selector:
    matchLabels:
      app.kubernetes.io/instance: canary-checker
      app.kubernetes.io/name: canary-checker
      control-plane: canary-checker
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/tls-acme: "true"
  labels:
    app.kubernetes.io/name: canary-checker
    control-plane: canary-checker
  name: canary-checker
  namespace: platform-system
spec:
  rules:
  - host: canaries.{{.domain}}
    http:
      paths:
      - backend:
          service:
            name: canary-checker
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - canaries.{{.domain}}
    secretName: canary-tls