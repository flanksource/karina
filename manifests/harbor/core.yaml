apiVersion: v1
kind: ConfigMap
metadata:
  name: harbor-core
  namespace: harbor
  labels:
    app: "harbor"
data:
  # todo
  app.conf: |+
    appname = Harbor
    runmode = dev
    enablegzip = true

    [dev]
    httpport = 8080

  DATABASE_TYPE: "postgresql"
  POSTGRESQL_HOST: "{{.harbor.db.host}}"
  POSTGRESQL_PORT: "{{.harbor.db.port}}"
  POSTGRESQL_USERNAME: "{{.harbor.db.username}}"
  POSTGRESQL_DATABASE: "registry"
  POSTGRESQL_SSLMODE: "disable"
  POSTGRESQL_MAX_IDLE_CONNS: "50"
  POSTGRESQL_MAX_OPEN_CONNS: "100"
  EXT_ENDPOINT: "{{.harbor.url}}"
  CORE_URL: "https://harbor-core"
  JOBSERVICE_URL: "https://harbor-jobservice"
  REGISTRY_URL: "https://harbor-registry:5443"
  TOKEN_SERVICE_URL: "https://harbor-core/service/token"
  WITH_NOTARY: "false"
  #NOTARY_URL: "http://harbor-notary-server:4443"
  CFG_EXPIRATION: "5"
  ADMIRAL_URL: "NA"
  WITH_CLAIR: "true"
  CLAIR_DB_HOST: "{{.harbor.db.host}}"
  CLAIR_DB_PORT: "{{.harbor.db.port}}"
  CLAIR_DB_USERNAME: "{{.harbor.db.username}}"
  CLAIR_DB: "clair"
  CLAIR_DB_SSLMODE: "disable"
  CLAIR_URL: "http://harbor-clair:6060"
  CLAIR_ADAPTER_URL: "http://harbor-clair:8080"
  WITH_TRIVY: "false"
  TRIVY_ADAPTER_URL: "http://harbor-trivy:8080"
  REGISTRY_STORAGE_PROVIDER_NAME: "s3"
  WITH_CHARTMUSEUM: "true"
  CHART_REPOSITORY_URL: "https://harbor-chartmuseum"
  LOG_LEVEL: "info"
  CONFIG_PATH: "/etc/core/app.conf"
  SYNC_REGISTRY: "false"
  CHART_CACHE_DRIVER: "redis"
  _REDIS_URL: "harbor-redis:6379,100,"
  _REDIS_URL_REG: "redis://harbor-redis:6379/2"
  PORTAL_URL: "https://harbor-portal"
  REGISTRYCTL_URL: "https://harbor-registry:8443"
  REGISTRY_CONTROLLER_URL: "https://harbor-registry:8443"
  REGISTRY_CREDENTIAL_USERNAME: "harbor_registry_user"
  CLAIR_HEALTH_CHECK_SERVER_URL: "http://harbor-clair:6061"
  HTTP_PROXY: ""
  HTTPS_PROXY: ""
  NO_PROXY: "harbor-core,harbor-jobservice,harbor-database,harbor-chartmuseum,harbor-clair,harbor-notary-server,harbor-notary-signer,harbor-registry,harbor-portal,127.0.0.1,localhost,.local,.internal"
---
apiVersion: v1
kind: Service
metadata:
  name: harbor-core
  namespace: harbor
  labels:
    app: "harbor"
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app: "harbor"
    component: core
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: core-internal-certs
  namespace: harbor
spec:
  secretName: core-internal-certs
  dnsNames:
    - harbor-core
  issuerRef:
    name: default-issuer
    kind: ClusterIssuer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-core
  namespace: harbor
  labels:
    app: "harbor"
    component: core
  annotations:
    reload/all: "true" # restart on cm/secret change
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "harbor"
      component: core
  template:
    metadata:
      labels:
        app: "harbor"
        component: core
    spec:
      securityContext:
        fsGroup: 10000
      containers:
        - name: core
          image: docker.io/goharbor/harbor-core:{{.harbor.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /api/v2.0/ping
              port: 8443
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v2.0/ping
              scheme: HTTPS
              port: 8443
            initialDelaySeconds: 20
            periodSeconds: 10
          envFrom:
            - configMapRef:
                name: "harbor-core"
            - secretRef:
                name: "harbor-core"
          env:
            - name: INTERNAL_TLS_ENABLED
              value: "true"
            - name: INTERNAL_TLS_KEY_PATH
              value: /etc/harbor/ssl/core.key
            - name: INTERNAL_TLS_CERT_PATH
              value: /etc/harbor/ssl/core.crt
            - name: INTERNAL_TLS_TRUST_CA_PATH
              value: /harbor_cust_cert/harbor_internal_ca.crt
            - name: CORE_SECRET
              valueFrom:
                secretKeyRef:
                  name: harbor-core
                  key: secret
            - name: JOBSERVICE_SECRET
              valueFrom:
                secretKeyRef:
                  name: "harbor-jobservice"
                  key: secret
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: config
              mountPath: /etc/core/app.conf
              subPath: app.conf
            - name: secret-key
              mountPath: /etc/core/key
              subPath: key
            - name: token-service-private-key
              mountPath: /etc/core/private_key.pem
              subPath: tls.key
            - name: ca-download
              mountPath: /etc/core/ca
            - name: psc
              mountPath: /etc/core/token
            - name: core-internal-certs
              mountPath: /harbor_cust_cert/harbor_internal_ca.crt
              subPath: ca.crt
            - name: core-internal-certs
              mountPath: /etc/harbor/ssl/core.crt
              subPath: tls.crt
            - name: core-internal-certs
              mountPath: /etc/harbor/ssl/core.key
              subPath: tls.key
            - name: trusted-certs
              mountPath: /harbor_cust_cert/trusted_ca.crt
              subPath: ca.crt
      volumes:
        - name: core-internal-certs
          secret:
            secretName: core-internal-certs
        - name: config
          configMap:
            name: harbor-core
            items:
              - key: app.conf
                path: app.conf
        - name: secret-key
          secret:
            secretName: harbor-core
            items:
              - key: secretKey
                path: key
        - name: trusted-certs
          configMap:
            name: trusted-certs
        - name: token-service-private-key
          secret:
            secretName: token-key
        - name: ca-download
          secret:
            secretName: "harbor-ingress"
        - name: psc
          emptyDir: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "harbor-ingress"
  namespace: harbor
  labels:
    app: "harbor"
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  tls:
    - secretName: "harbor-ingress"
      hosts:
        # we don't use harbor.endpoint as it points to a single cluster only and would make
        # a backup cluster inaccessible prior to promotion
        - "harbor.{{ .domain}}"
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: harbor-portal
              servicePort: 443
          - path: /api/
            backend:
              serviceName: harbor-core
              servicePort: 443
          - path: /service/
            backend:
              serviceName: harbor-core
              servicePort: 443
          - path: /v2/
            backend:
              serviceName: harbor-core
              servicePort: 443
          - path: /chartrepo/
            backend:
              serviceName: harbor-core
              servicePort: 443
          - path: /c/
            backend:
              serviceName: harbor-core
              servicePort: 443
      host: "harbor.{{ .domain}}"
