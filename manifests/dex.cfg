issuer: https://dex.{{.domain}}
storage:
  type: kubernetes
  config:
    inCluster: true
web:
  https: 0.0.0.0:8443
  tlsCert: /ssl/tls.crt
  tlsKey: /ssl/tls.key
frontend:
   theme: "coreos"
   {{ if index . "brand" }}
   issuer: "{{.brand.name}}"
   issuerUrl: "{{.brand.url}}"
   logoUrl: "{{.brand.logo}}"
   {{ end }}
logger:
  level: "debug"
oauth2:
  skipApprovalScreen: true
connectors:
  {{ if index .dex "google" }}
  - type: google
    id: google
    name: Google
    config:
      clientID: $GOOGLE_CLIENT_ID
      clientSecret: $GOOGLE_CLIENT_SECRET
      redirectURI: https://dex.{{.domain}}/callback
      {{ if index .dex.google "hostedDomains" }}
      hostedDomains:
        {{- range .dex.google.hostedDomains }}
        - {{ . }}
        {{- end }}
      {{ end }}
  {{ end }}
  {{ if index .dex "github" }}
  - type: github
    id: github
    name: Github
    config:
      clientID: $GITHUB_CLIENT_ID
      clientSecret: $GITHUB_CLIENT_SECRET
      redirectURI: https://dex.{{.domain}}/callback
      {{ if index .dex.github "orgs" }}
      orgs:
        {{ range .dex.github.orgs }}
        - name: {{ .name }}
          {{ if has . "teams" }}
          teams:
            {{ range .teams }}
            - {{ . }}
            {{ end }}
          {{ end }}
        {{ end }}
      {{ end }}
  {{ end }}
  {{ if index .dex "gitlab" }}
  - type: gitlab
    # Required field for connector id.
    id: gitlab
    # Required field for connector name.
    name: GitLab
    config:
      # optional, default = https://gitlab.com
      baseURL: {{ .dex.gitlab.url | default "https://gitlab.com" }}
      # Credentials can be string literals or pulled from the environment.
      clientID: $GITLAB_APPLICATION_ID
      clientSecret: $GITLAB_CLIENT_SECRET
      redirectURI: https://dex.{{.domain}}/callback
      # Optional groups whitelist, communicated through the "groups" scope.
      # If `groups` is omitted, all of the user's GitLab groups are returned when the groups scope is present.
      # If `groups` is provided, this acts as a whitelist - only the user's GitLab groups that are in the configured `groups` below will go into the groups claim.  Conversely, if the user is not in any of the configured `groups`, the user will not be authenticated.
      {{ if index .dex.gitlab "groups" }}
      groups:
        {{- range .dex.gitlab.groups }}
        - {{ . }}
        {{- end }}
      {{ end }}
      # flag which will switch from using the internal GitLab id to the users handle (@mention) as the user id.
      # It is possible for a user to change their own user name but it is very rare for them to do so
      useLoginAsID: false
  {{ end }}
  {{ if index . "ldap" }}
  - type: ldap
    id: ldap
    name: LDAP
    config:
      host: {{.ldap.host}}:{{.ldap.port}}
      insecureSkipVerify: true
      bindDN: $AD_USERNAME
      bindPW: $AD_PASSWORD

      userSearch:
        baseDN: {{.ldap.userDN}}
        filter: "(objectClass=person)"
        username: sAMAccountName
        idAttr: DN
        emailAttr: mail
        nameAttr: displayName

      groupSearch:
        baseDN: {{.ldap.groupDN}}
        filter: "(objectClass={{.ldap.groupObjectClass}})"
        userAttr: DN
        groupAttr: member
        nameAttr: {{.ldap.groupNameAttr}}
  {{ end }}
staticClients:
  - id: kubernetes
    redirectURIs:
    - 'http://localhost:8000'
    - 'https://oauth2.{{.domain}}/oauth2/callback'
    name: 'Kubernetes'
    secret: ZXhhbXBsZS1hcHAtc2VjcmV0
  - id: appproxy
    redirectURIs:
    - 'http://localhost:8000'
    - 'https://oauth2.{{.domain}}/oauth2/callback'
    name: 'Kubernetes'
    secret: ZXhhbXBsZS1hcHAtc2VjcmV0
